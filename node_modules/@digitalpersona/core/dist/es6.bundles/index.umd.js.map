{"version":3,"file":"index.umd.js","sources":["../es6/http/url.js","../es6/biometrics/factor.js","../es6/encoders/encoders.js","../es6/users/userNameType.js","../es6/users/user.js","../es6/jwt/jwt.js","../es6/jwt/claims.js","../es6/jwt/ticket.js","../es6/credentials/credential.js","../es6/credentials/fingerprints.js","../es6/credentials/face.js","../es6/credentials/questions.js"],"sourcesContent":["/**\r\n * Provides a way to construct sanitized URLs from a base URL, a path and a query object\r\n */\r\nexport class Url {\r\n    /** Constructs an URL object from a base URL, a path and a query object.\r\n     * @param base - base URL, e.g. `https://contoso.com`\r\n     * @param path - optional path, e.g. `api/v1/user`\r\n     * @param query - optional set of query parameters, e.g. `{ name: \"john\", type: \"5\" }`\r\n     * @remarks\r\n     * The URL is built by concatenation of a base URL with sanitized path and query object,\r\n     * adding all needed delimiters. Example:\r\n     * @example\r\n     * ```\r\n     * const url = new Url(\"https://contoso.com\", \"api/v1/user\", { name: \"john\", type: \"5\" });\r\n     * console.log(url.href);\r\n     * > https://contoso.com/api/v1/user?name=john&type=5\r\n     * ```\r\n     */\r\n    constructor(base, path, query) {\r\n        this.href = Url.create(base, path, query);\r\n    }\r\n    /** Builds a sanitized URL query from an JS object.\r\n     * @returns A hyperlink reference.\r\n     */\r\n    static getSanitizedQuery(query) {\r\n        return Object\r\n            .keys(query)\r\n            .map(key => [key, query[key]]\r\n            .map(encodeURIComponent)\r\n            .join(\"=\"))\r\n            .join(\"&\");\r\n    }\r\n    /** Constructs an URL string from a base URL, a path and a query object.\r\n     * @param base - base URL, e.g. `https://contoso.com`\r\n     * @param path - optional path, e.g. `api/v1/user`\r\n     * @param query - optional set of query parameters, e.g. `{ name: \"john\", type: \"5\" }`\r\n     * @remarks\r\n     * The URL is built by concatenation of a base URL with sanitized path and query object,\r\n     * adding all needed delimiters.\r\n     * @example\r\n     * ```typescript\r\n     * const href = Url.create(\"https://contoso.com\", \"api/v1/user\", { name: \"john\", type: \"5\" });\r\n     * console.log(href);\r\n     * ```\r\n     * `> https://contoso.com/api/v1/user?name=john&type=5`\r\n     */\r\n    static create(base, path, query) {\r\n        return base\r\n            + (path ? `/${encodeURI(path)}` : \"\")\r\n            + (query ? `?${Url.getSanitizedQuery(query)}` : \"\");\r\n    }\r\n}\r\n//# sourceMappingURL=url.js.map","/**\r\n * Biometric factors.\r\n */\r\nexport var BioFactor;\r\n(function (BioFactor) {\r\n    BioFactor[BioFactor[\"Multiple\"] = 1] = \"Multiple\";\r\n    BioFactor[BioFactor[\"FacialFeatures\"] = 2] = \"FacialFeatures\";\r\n    BioFactor[BioFactor[\"Voice\"] = 4] = \"Voice\";\r\n    BioFactor[BioFactor[\"Fingerprint\"] = 8] = \"Fingerprint\";\r\n    BioFactor[BioFactor[\"Iris\"] = 16] = \"Iris\";\r\n    BioFactor[BioFactor[\"Retina\"] = 32] = \"Retina\";\r\n    BioFactor[BioFactor[\"HandGeometry\"] = 64] = \"HandGeometry\";\r\n    BioFactor[BioFactor[\"SignatureDynamics\"] = 128] = \"SignatureDynamics\";\r\n    BioFactor[BioFactor[\"KeystrokeDynamics\"] = 256] = \"KeystrokeDynamics\";\r\n    BioFactor[BioFactor[\"LipMovement\"] = 512] = \"LipMovement\";\r\n    BioFactor[BioFactor[\"ThermalFaceImage\"] = 1024] = \"ThermalFaceImage\";\r\n    BioFactor[BioFactor[\"ThermalHandImage\"] = 2048] = \"ThermalHandImage\";\r\n    BioFactor[BioFactor[\"Gait\"] = 4096] = \"Gait\";\r\n})(BioFactor || (BioFactor = {}));\r\n/**\r\n * Biometric owner ID registered with {@link http://www.ibia.org/base/cbeff/_biometric_org.phpx | IBIA}.\r\n */\r\nexport var BioSampleFormatOwner;\r\n(function (BioSampleFormatOwner) {\r\n    BioSampleFormatOwner[BioSampleFormatOwner[\"None\"] = 0] = \"None\";\r\n    /** Neurotechnologija (fingerprints). */\r\n    BioSampleFormatOwner[BioSampleFormatOwner[\"Neurotechnologija\"] = 49] = \"Neurotechnologija\";\r\n    /** DigitalPersona (fingerprints) */\r\n    BioSampleFormatOwner[BioSampleFormatOwner[\"DigitalPersona\"] = 51] = \"DigitalPersona\";\r\n    /** Cognitec (face) */\r\n    BioSampleFormatOwner[BioSampleFormatOwner[\"Cognitec\"] = 99] = \"Cognitec\";\r\n    /** Innovatrics (face) */\r\n    BioSampleFormatOwner[BioSampleFormatOwner[\"Innovatrics\"] = 53] = \"Innovatrics\";\r\n})(BioSampleFormatOwner || (BioSampleFormatOwner = {}));\r\n/**\r\n * Biometric sample format info.\r\n */\r\nexport class BioSampleFormat {\r\n    constructor(FormatOwner, FormatID) {\r\n        this.FormatOwner = FormatOwner;\r\n        this.FormatID = FormatID;\r\n    }\r\n}\r\n/**\r\n * A representation type of a biometric sample.\r\n */\r\nexport var BioSampleType;\r\n(function (BioSampleType) {\r\n    BioSampleType[BioSampleType[\"Raw\"] = 1] = \"Raw\";\r\n    BioSampleType[BioSampleType[\"Intermediate\"] = 2] = \"Intermediate\";\r\n    BioSampleType[BioSampleType[\"Processed\"] = 4] = \"Processed\";\r\n    BioSampleType[BioSampleType[\"RawWSQCompressed\"] = 8] = \"RawWSQCompressed\";\r\n    BioSampleType[BioSampleType[\"Encrypted\"] = 16] = \"Encrypted\";\r\n    BioSampleType[BioSampleType[\"Signed\"] = 32] = \"Signed\";\r\n})(BioSampleType || (BioSampleType = {}));\r\n/**\r\n * A purpose the biometric sample was intended for.\r\n */\r\nexport var BioSamplePurpose;\r\n(function (BioSamplePurpose) {\r\n    BioSamplePurpose[BioSamplePurpose[\"Any\"] = 0] = \"Any\";\r\n    BioSamplePurpose[BioSamplePurpose[\"Verify\"] = 1] = \"Verify\";\r\n    BioSamplePurpose[BioSamplePurpose[\"Identify\"] = 2] = \"Identify\";\r\n    BioSamplePurpose[BioSamplePurpose[\"Enroll\"] = 3] = \"Enroll\";\r\n    BioSamplePurpose[BioSamplePurpose[\"EnrollForVerificationOnly\"] = 4] = \"EnrollForVerificationOnly\";\r\n    BioSamplePurpose[BioSamplePurpose[\"EnrollForIdentificationOnly\"] = 5] = \"EnrollForIdentificationOnly\";\r\n    BioSamplePurpose[BioSamplePurpose[\"Audit\"] = 6] = \"Audit\";\r\n})(BioSamplePurpose || (BioSamplePurpose = {}));\r\n/**\r\n * A biometric sample encryption type.\r\n */\r\nexport var BioSampleEncryption;\r\n(function (BioSampleEncryption) {\r\n    BioSampleEncryption[BioSampleEncryption[\"None\"] = 0] = \"None\";\r\n    BioSampleEncryption[BioSampleEncryption[\"XTEA\"] = 1] = \"XTEA\";\r\n})(BioSampleEncryption || (BioSampleEncryption = {}));\r\n/**\r\n * Contains meta-information about biometric sample data.\r\n */\r\nexport class BioSampleHeader {\r\n    constructor(\r\n    /** Biometric factor. Must be set to 8 for fingerprint. */\r\n    Factor, \r\n    /** Format owner (vendor) information. */\r\n    Format, \r\n    /** Biometric sample representation type. */\r\n    Type, \r\n    /** Purpose of the biometric sample. */\r\n    Purpose, \r\n    /** Quality of biometric sample. If we don't support quality it should be set to -1.  */\r\n    Quality, \r\n    /** Encryption of biometric sample. */\r\n    Encryption) {\r\n        this.Factor = Factor;\r\n        this.Format = Format;\r\n        this.Type = Type;\r\n        this.Purpose = Purpose;\r\n        this.Quality = Quality;\r\n        this.Encryption = Encryption;\r\n    }\r\n}\r\n/**\r\n * A biometric sample.\r\n */\r\nexport class BioSample {\r\n    constructor(\r\n    /** Biometric sample header. */\r\n    Header, \r\n    /** Base64url encoded biometric sample data */\r\n    Data) {\r\n        this.Header = Header;\r\n        this.Data = Data;\r\n        /** A version info. */\r\n        this.Version = 1;\r\n    }\r\n}\r\n//# sourceMappingURL=factor.js.map","// tslint:disable: ban-types\r\n/**\r\n * Set of converters to UTF16.\r\n */\r\nexport class Utf16 {\r\n}\r\n/** Converts a UTF8 string to a UTF16 string. */\r\nUtf16.fromUtf8 = (s) => decodeURIComponent(escape(Utf8.noBom(s)));\r\n/** Decodes a Base64-encoded string to a UTF16 string. */\r\nUtf16.fromBase64 = (s) => Utf16.fromUtf8(Utf8.fromBase64(s));\r\n/** Decodes a Base64url-encoded string to a UTF16 string. */\r\nUtf16.fromBase64Url = (s) => Utf16.fromUtf8(Utf8.fromBase64Url(s));\r\n/** Appends Byte-Order-Mark (BOM) to the UTF16 string. */\r\nUtf16.withBom = (s) => \"\\uFEFF\" + s;\r\n/** Strips a Byte-Order-Mark (BOM) from the UTF16 string. */\r\nUtf16.noBom = (s) => s.replace(/^\\uFEFF/, \"\");\r\n/**\r\n * Set of converters to UTF8.\r\n */\r\nexport class Utf8 {\r\n}\r\n/** Converts a UTF16 string to a UTF16 string. */\r\nUtf8.fromUtf16 = (s) => unescape(encodeURIComponent(Utf16.noBom(s)));\r\n/** Decodes a Base64-encoded string to a UTF8 string. */\r\nUtf8.fromBase64 = (s) => atob(s);\r\n/** Decodes a Base64url-encoded string to a UTF8 string. */\r\nUtf8.fromBase64Url = (s) => Utf8.fromBase64(Base64.fromBase64Url(s));\r\n/** Converts a byte array to a UTF16 string. */\r\nUtf8.fromBytes = (bytes) => String.fromCharCode(...bytes);\r\n/** Appends Byte-Order-Mark (BOM) to the UTF8 string. */\r\nUtf8.withBom = (s) => \"\\xEF\\xBB\\xBF\" + s;\r\n/** Strips a Byte-Order-Mark (BOM) from the UTF8 string. */\r\nUtf8.noBom = (s) => s.replace(/^\\xEF\\xBB\\xBF/, \"\");\r\n/**\r\n * Set of converters to Base64.\r\n */\r\nexport class Base64 {\r\n}\r\n/** Encodes a UTF8 string to a Base64-encoded string. */\r\nBase64.fromUtf8 = (s) => btoa(s);\r\n/** Encodes a UTF16 string to a Base64-encoded string.  */\r\nBase64.fromUtf16 = (s) => Base64.fromUtf8(Utf8.fromUtf16(s));\r\n/** Converts a Base64url-encoded string to a Base64-encoded string. */\r\nBase64.fromBase64Url = (s) => ((s.length % 4 === 2) ? s + \"==\" :\r\n    (s.length % 4 === 3) ? s + \"=\" : s)\r\n    .replace(/-/g, \"+\")\r\n    .replace(/_/g, \"/\");\r\n/** Converts a byte array to a Base64-encoded string. */\r\nBase64.fromBytes = (bytes) => Base64.fromUtf8(Utf8.fromBytes(bytes));\r\n/** Encodes a plain JSON object or a string to a Base64-encoded string. */\r\nBase64.fromJSON = (obj) => Base64.fromUtf16(JSON.stringify(obj));\r\n/**\r\n * Set of converters to Base64Url.\r\n */\r\nexport class Base64Url {\r\n}\r\n/** Converts a Base64-encoded string to a Base64url-encoded string. */\r\nBase64Url.fromBase64 = (s) => s.replace(/\\=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\r\n/** Converts a UTF8 string to a Base64url-encoded string. */\r\nBase64Url.fromUtf8 = (s) => Base64Url.fromBase64(Base64.fromUtf8(s));\r\n/** Converts a UTF16 string to a Base64url-encoded string. */\r\nBase64Url.fromUtf16 = (s) => Base64Url.fromBase64(Base64.fromUtf16(s));\r\n/** Converts a byte array to a Base64url-encoded string. */\r\nBase64Url.fromBytes = (bytes) => Base64Url.fromUtf8(Utf8.fromBytes(bytes));\r\n/** Encodes a plain JSON object or a string to a Base64url-encoded string. */\r\nBase64Url.fromJSON = (obj) => Base64Url.fromUtf16(JSON.stringify(obj));\r\n/**\r\n * Set of converters to Base32.\r\n */\r\nexport class Base32 {\r\n    /** Converts a byte array to a Base32-encoded string. */\r\n    static fromBytes(bytes) {\r\n        const digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\r\n        let v1 = 0, v2 = 0, v3 = 0, v4 = 0, v5 = 0, str = '', l = bytes.length, i = 0;\r\n        const count = Math.floor(l / 5) * 5;\r\n        while (i < count) {\r\n            v1 = bytes[i++];\r\n            v2 = bytes[i++];\r\n            v3 = bytes[i++];\r\n            v4 = bytes[i++];\r\n            v5 = bytes[i++];\r\n            str += digits[v1 >>> 3]\r\n                + digits[(v1 << 2 | v2 >>> 6) & 31]\r\n                + digits[(v2 >>> 1) & 31]\r\n                + digits[(v2 << 4 | v3 >>> 4) & 31]\r\n                + digits[(v3 << 1 | v4 >>> 7) & 31]\r\n                + digits[(v4 >>> 2) & 31]\r\n                + digits[(v4 << 3 | v5 >>> 5) & 31]\r\n                + digits[v5 & 31];\r\n        }\r\n        // remain char\r\n        const remain = l - count;\r\n        if (remain === 0)\r\n            return str;\r\n        switch (remain) {\r\n            // @ts-ignore no-switch-case-fall-through\r\n            case 4: v4 = bytes[--l];\r\n            // @ts-ignore no-switch-case-fall-through\r\n            case 3: v3 = bytes[--l];\r\n            // @ts-ignore no-switch-case-fall-through\r\n            case 2: v2 = bytes[--l];\r\n            // @ts-ignore no-switch-case-fall-through\r\n            case 1: v1 = bytes[--l];\r\n        }\r\n        str += digits[v1 >>> 3];\r\n        switch (remain) {\r\n            case 1: return str\r\n                + digits[(v1 << 2) & 31]\r\n                + '======';\r\n            case 2: return str\r\n                + digits[(v1 << 2 | v2 >>> 6) & 31]\r\n                + digits[(v2 >>> 1) & 31]\r\n                + digits[(v2 << 4) & 31]\r\n                + '====';\r\n            case 3: return str\r\n                + digits[(v1 << 2 | v2 >>> 6) & 31]\r\n                + digits[(v2 >>> 1) & 31]\r\n                + digits[(v2 << 4 | v3 >>> 4) & 31]\r\n                + digits[(v3 << 1) & 31]\r\n                + '===';\r\n            case 4: return str\r\n                + digits[(v1 << 2 | v2 >>> 6) & 31]\r\n                + digits[(v2 >>> 1) & 31]\r\n                + digits[(v2 << 4 | v3 >>> 4) & 31]\r\n                + digits[(v3 << 1 | v4 >>> 7) & 31]\r\n                + digits[(v4 >>> 2) & 31]\r\n                + digits[(v4 << 3) & 31]\r\n                + '=';\r\n        }\r\n        return str;\r\n    }\r\n}\r\n// export class Hex\r\n// {\r\n//     public static encode = (s: string): HexString =>\r\n//         s.split(\"\").map(cp => ('000' + cp.charCodeAt(0).toString(16)).slice(-4)).join('')\r\n//     public static decode = (s: HexString): string =>\r\n//         s.replace(/(..)/g, '%$1'))\r\n// }\r\n//# sourceMappingURL=encoders.js.map","/** Enumerates supported username formats. */\r\nexport var UserNameType;\r\n(function (UserNameType) {\r\n    /** A name not associated with any Windows account, to be used for local databases only.  */\r\n    UserNameType[UserNameType[\"Unknown\"] = 0] = \"Unknown\";\r\n    /** NetBIOS domain name, for example, “THE_COMPANY”. */\r\n    UserNameType[UserNameType[\"NetBIOSDomain\"] = 1] = \"NetBIOSDomain\";\r\n    /** A DNS domain name, for example, “thecompany.com”. */\r\n    UserNameType[UserNameType[\"DNSDomain\"] = 2] = \"DNSDomain\";\r\n    /** A MS Windows account name, e.g “the_company\\jdoe” (domain\\user) or \"the_company\\\" (domain only). */\r\n    UserNameType[UserNameType[\"SAM\"] = 3] = \"SAM\";\r\n    /** The account name format used in Microsoft(r) Windows NT(r) 4.0, for example, “jdoe”.  */\r\n    UserNameType[UserNameType[\"Simple\"] = 4] = \"Simple\";\r\n    /** A GUID string, for example, “4fa050f0-f561-11cf-bdd9-00aa003a77b6”.  */\r\n    UserNameType[UserNameType[\"UID\"] = 5] = \"UID\";\r\n    /** A user principal name, for example, “jdoe@thecompany.com”.  */\r\n    UserNameType[UserNameType[\"UPN\"] = 6] = \"UPN\";\r\n    /** A friendly display name, for example, “John Doe”. */\r\n    UserNameType[UserNameType[\"Display\"] = 7] = \"Display\";\r\n    /** A user SID string, for example, “S-1-5-21-1004”. */\r\n    UserNameType[UserNameType[\"SID\"] = 8] = \"SID\";\r\n    /** A user name associated with DigitalPersona identity database (formerly known as \"Altus user\"). */\r\n    UserNameType[UserNameType[\"DP\"] = 9] = \"DP\";\r\n})(UserNameType || (UserNameType = {}));\r\n//# sourceMappingURL=userNameType.js.map","import { UserNameType } from './userNameType';\r\nimport { JWT } from '../jwt/jwt';\r\n/**\r\n * Represents a user's identity using a user's name name and a type of the name.\r\n * This class is typially used to pass a user name during authentication.\r\n */\r\nexport class User {\r\n    /** Constructs the object using a username and a user type.\r\n     * @param name - user name. No name transformation/canonicalization is performed.\r\n     * @param type - an optional type of the user. If not provided, he type is deduced automatically.\r\n     * @remarks\r\n     * If no `type` parameter is provided, the username format is analyzes and automatic type is assigned.\r\n     * For example:\r\n     * * \"user\\@comtoso.com\" name will be parsed as a {@link UserNameType.UPN | User Principal Name (UPN)},\r\n     * * \"Domain\\\\UserX\" name will be parsed as a {@link UserNameType.SAM | Security Account Manager (SAM)} name,\r\n     * * \"6de5b5ed-85fc-4298-a18b-dac7d5a18369\" will be parsed as a {@link UserNameType.UID | Unique Identifier (UID)} name,\r\n     * * \"UserX\" name will be parsed as a {@link UserNameType.DP | DigitalPersona name} (used in LDS)\r\n     * You may provide a `type` parameter if you want to enforce a specific name type.\r\n     */\r\n    constructor(name, type) {\r\n        const reGUID = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/;\r\n        this.name = name || \"\";\r\n        this.type = type || ((this.name.length === 0) ? UserNameType.Unknown :\r\n            (this.name === \"*\") ? UserNameType.Unknown :\r\n                (this.name.indexOf('@') !== -1) ? UserNameType.UPN :\r\n                    (this.name.indexOf('\\\\') !== -1) ? UserNameType.SAM :\r\n                        reGUID.test(this.name) ? UserNameType.UID\r\n                            : UserNameType.DP);\r\n    }\r\n    /** @returns `true` when the User object represents an anonymous user. */\r\n    isAnonymous() {\r\n        return !this.name || this.name.length === 0;\r\n    }\r\n    /** @returns `true` whrn the user object represents any user. */\r\n    isEveryone() {\r\n        return this.name === \"*\";\r\n    }\r\n    /** Creates a user object representing an anonymous user. */\r\n    static Anonymous() {\r\n        return new User(\"\", UserNameType.Unknown);\r\n    }\r\n    /** Creates a user object representing every user. */\r\n    static Everyone() {\r\n        return new User(\"*\", UserNameType.Unknown);\r\n    }\r\n    /** Creates a user object using claims in a JSON Web Token.\r\n     * @param token - a JSON Web Token.\r\n     * @param type - an optional username type to override automatic type detection and force a specific name format.\r\n     * @returns a user object constructed from the `token` claims.\r\n     * @remarks\r\n     * The `token` should contain either {@link ClaimSet.sub |`sub`} or {@link ClaimSet.wan | `wan`} claim\r\n     * to detect a user name. If no such claims are found, then {@link User.Anonymous | anonymous} user is returned.\r\n     * The {@link ClaimSet.sub |`sub`} claim has a priority over the {@link ClaimSet.wan | `wan`} claim.\r\n     * If `type` parameter is not defined, the name type is deduced automatically from the name string.\r\n     * You may provide a `type` parameter if you want to enforce a specific name type.\r\n     * See {@link User.constructor} for type deduction details.\r\n     */\r\n    static fromJWT(token, type) {\r\n        const claims = JWT.claims(token);\r\n        const user = claims.sub && (claims.sub instanceof User) ? claims.sub :\r\n            claims.wan ? new User(claims.wan, type) :\r\n                claims.sub ? new User(claims.sub, type || UserNameType.DP) : User.Anonymous();\r\n        return user;\r\n    }\r\n}\r\n//# sourceMappingURL=user.js.map","import { Utf16 } from '../encoders';\r\nimport { User } from '../users/user';\r\n/** Represents a JSON Web Token Header. */\r\nclass JWTHeader {\r\n    /** Constructs a JWT header. */\r\n    constructor(typ, alg, cty) {\r\n        this.typ = typ;\r\n        this.cty = cty;\r\n        this.alg = alg;\r\n    }\r\n}\r\n/** Represents a JSON Web Token and gives access to the token's payload.\r\n * Note that this class does not allow to validate the token signature in the browser,\r\n * it must be done on a server side.\r\n */\r\nexport class JWT {\r\n    /** Extracts a claims set from the JSON Web Token.\r\n     * @param jwt - a JSON Web Token string.\r\n     * @returns a claims set.\r\n     */\r\n    static claims(jwt) {\r\n        const parts = jwt.split('.');\r\n        const header = JSON.parse(Utf16.fromBase64Url(parts[0]));\r\n        if (header.cty === \"JWT\") {\r\n            // we have a nested JWT with encrypted payload (JWE).\r\n            // Encrypted nested JWT may replicate some claims in the header to be publicly accessible.\r\n            return Object.assign(Object.assign({}, header), new JWTHeader());\r\n        }\r\n        else {\r\n            // unencrypted payload, use claims from the payload only\r\n            const payload = JSON.parse(Utf16.fromBase64Url(parts[1]));\r\n            // convert \"subject\" to a User type\r\n            if (typeof (payload.sub) === \"object\") {\r\n                const { name, type } = payload.sub;\r\n                payload.sub = new User(name, type);\r\n            }\r\n            return payload;\r\n        }\r\n    }\r\n    /** Validates the JSON Web Token and returns a collection of detected validation errors.\r\n     * @param jwt - a JSON Web Token.\r\n     * @returns an array of errors found, or `null` if the token is valid.\r\n     * @remarks\r\n     * Only client-side checks are performed, no signature validation.\r\n     * The token's claims must satisfy following expression:\r\n     * `iat <= nbf < now < exp`\r\n     * where `iat` is time when the token was issued, `nbf` is a time when the token becomes valid,\r\n     * `exp` is a token expiration time, `now` is current time.\r\n     * Following errors may be returned:\r\n     *\r\n     *   * 'JWT.Error.IssueTimeLaterThanNotBefore' if `iat > nbf`,\r\n     *   * 'JWT.Error.NotEffectiveYet' when `now < nbf`,\r\n     *   * 'JWT.Error.Expired' when `now >= exp`.\r\n     */\r\n    static errors(jwt) {\r\n        const e = [];\r\n        const claims = JWT.claims(jwt);\r\n        const now = new Date().getTime() / 1000; // seconds since the epoch start\r\n        // iat < nbf < now < exp\r\n        if (claims.iat && claims.nbf && claims.iat > claims.nbf)\r\n            e.push(new Error('JWT.Error.IssueTimeLaterThanNotBefore'));\r\n        if (claims.nbf && claims.nbf > now)\r\n            e.push(new Error('JWT.Error.NotEffectiveYet'));\r\n        if (claims.exp && claims.exp <= now)\r\n            e.push(new Error('JWT.Error.Expired'));\r\n        return e.length > 0 ? e : null;\r\n    }\r\n}\r\n//# sourceMappingURL=jwt.js.map","/** Enumerate publicly registered and private DigitalPersona claim names. */\r\nexport var ClaimName;\r\n(function (ClaimName) {\r\n    // registered names\r\n    ClaimName[\"TokensId\"] = \"jti\";\r\n    ClaimName[\"IssuerName\"] = \"iss\";\r\n    ClaimName[\"IssuedAt\"] = \"iat\";\r\n    ClaimName[\"Audience\"] = \"aud\";\r\n    ClaimName[\"NotBefore\"] = \"nbf\";\r\n    ClaimName[\"ExpiresAfter\"] = \"exp\";\r\n    ClaimName[\"SubjectName\"] = \"sub\";\r\n    // private DigitalPersona names\r\n    ClaimName[\"IssuerDomain\"] = \"dom\";\r\n    ClaimName[\"SubjectUid\"] = \"uid\";\r\n    ClaimName[\"ADGuid\"] = \"ad_guid\";\r\n    ClaimName[\"CredentialsUsed\"] = \"crd\";\r\n    ClaimName[\"Group\"] = \"group\";\r\n    ClaimName[\"Role\"] = \"role\";\r\n    ClaimName[\"WindowsAccountName\"] = \"wan\";\r\n    ClaimName[\"T24Principal\"] = \"t24\";\r\n})(ClaimName || (ClaimName = {}));\r\n//# sourceMappingURL=claims.js.map","/**\r\n * A structure wrapping a JSON Web Token to pass it to the DigitalPersona Web Components services.\r\n */\r\nexport class Ticket {\r\n    /** Constructs a ticket object. */\r\n    constructor(jwt) {\r\n        this.jwt = jwt;\r\n    }\r\n    /** Creates a ticket with an emtpy token. Used as a placeholder when no token is needed. */\r\n    static None() {\r\n        return new Ticket(\"\");\r\n    }\r\n}\r\n//# sourceMappingURL=ticket.js.map","import { Base64Url } from '../encoders';\r\n/**\r\n * Credential data.\r\n */\r\nexport class Credential {\r\n    /** Constructs a credential. */\r\n    constructor(id, data, encode = true) {\r\n        this.id = id;\r\n        this.data = !data ? null\r\n            : !encode ? JSON.stringify(data)\r\n                : Base64Url.fromUtf16(typeof (data) !== \"string\" ? JSON.stringify(data) : data);\r\n    }\r\n    /** Constructs an empty credential object. */\r\n    static None() {\r\n        return new Credential(\"\");\r\n    }\r\n    /** Constructs a credential object representing any credential. */\r\n    static Any() {\r\n        return new Credential(\"*\");\r\n    }\r\n}\r\n// true credentials\r\nCredential.Password = \"D1A1F561-E14A-4699-9138-2EB523E132CC\";\r\nCredential.Fingerprints = \"AC184A13-60AB-40E5-A514-E10F777EC2F9\";\r\nCredential.Face = \"85AEAA44-413B-4DC1-AF09-ADE15892730A\";\r\nCredential.SmartCard = \"D66CC98D-4153-4987-8EBE-FB46E848EA98\";\r\nCredential.ContactlessCard = \"F674862D-AC70-48CA-B73E-64A22F3BAC44\";\r\nCredential.ProximityCard = \"1F31360C-81C0-4EE0-9ACD-5A4400F66CC2\";\r\nCredential.PIN = \"8A6FCEC3-3C8A-40C2-8AC0-A039EC01BA05\";\r\nCredential.SecurityQuestions = \"B49E99C6-6C94-42DE-ACD7-FD6B415DF503\";\r\nCredential.Bluetooth = \"E750A180-577B-47F7-ACD9-F89A7E27FA49\";\r\nCredential.OneTimePassword = \"324C38BD-0B51-4E4D-BD75-200DA0C8177F\";\r\nCredential.U2F = \"5D5F73AF-BCE5-4161-9584-42A61AED0E48\";\r\nCredential.IWA = \"AE922666-9667-49BC-97DA-1EB0E1EF73D2\";\r\nCredential.Email = \"7845D71D-AB67-4EA7-913C-F81E75C3A087\";\r\nCredential.Behavior = \"193C41F6-5CF6-4525-84CC-223603DAC9AB\";\r\n// pseudo-credentials\r\nCredential.Cards = \"FCFA704C-144B-42DB-8DF3-13F5CD20C525\"; // all card types\r\n//# sourceMappingURL=credential.js.map","/**\r\n * Positions of fingers.\r\n */\r\nexport var FingerPosition;\r\n(function (FingerPosition) {\r\n    FingerPosition[FingerPosition[\"Unknown\"] = 0] = \"Unknown\";\r\n    FingerPosition[FingerPosition[\"RightThumb\"] = 1] = \"RightThumb\";\r\n    FingerPosition[FingerPosition[\"RightIndex\"] = 2] = \"RightIndex\";\r\n    FingerPosition[FingerPosition[\"RightMiddle\"] = 3] = \"RightMiddle\";\r\n    FingerPosition[FingerPosition[\"RightRing\"] = 4] = \"RightRing\";\r\n    FingerPosition[FingerPosition[\"RightLittle\"] = 5] = \"RightLittle\";\r\n    FingerPosition[FingerPosition[\"LeftThumb\"] = 6] = \"LeftThumb\";\r\n    FingerPosition[FingerPosition[\"LeftIndex\"] = 7] = \"LeftIndex\";\r\n    FingerPosition[FingerPosition[\"LeftMiddle\"] = 8] = \"LeftMiddle\";\r\n    FingerPosition[FingerPosition[\"LeftRing\"] = 9] = \"LeftRing\";\r\n    FingerPosition[FingerPosition[\"LeftLittle\"] = 10] = \"LeftLittle\";\r\n})(FingerPosition || (FingerPosition = {}));\r\n/** Finger enrollment data. */\r\nexport class Finger {\r\n    constructor(\r\n    /** Finger position. */\r\n    position) {\r\n        this.position = position;\r\n    }\r\n    /** Creates the finger enrollment data from a plain JSON object. */\r\n    static fromJson(json) {\r\n        const obj = json;\r\n        return new Finger(obj.position);\r\n    }\r\n}\r\n//# sourceMappingURL=fingerprints.js.map","import { Base64Url } from '../encoders';\r\nimport { BioSample, BioSampleFormat, BioSampleFormatOwner, BioSampleType, BioSampleEncryption, BioSampleHeader, BioSamplePurpose, BioFactor } from \"../biometrics\";\r\nclass FIRData {\r\n    constructor(SDKVersion, Data) {\r\n        this.SDKVersion = SDKVersion;\r\n        this.Data = Data;\r\n        this.version = 1;\r\n    }\r\n}\r\n/**\r\n * Format of a face image sample.\r\n */\r\nexport var FaceImageType;\r\n(function (FaceImageType) {\r\n    FaceImageType[FaceImageType[\"Jpeg\"] = 1] = \"Jpeg\";\r\n})(FaceImageType || (FaceImageType = {}));\r\n/**\r\n * Face image data.\r\n */\r\nexport class FaceImage {\r\n    constructor(\r\n    /** Base64url-encoded image data. */\r\n    ImageData, \r\n    /** Image format. */\r\n    ImageType = FaceImageType.Jpeg) {\r\n        this.ImageData = ImageData;\r\n        this.ImageType = ImageType;\r\n        /** Version info. */\r\n        this.Version = 1;\r\n    }\r\n    /** Extracts face image from a data URL. Only `data:image/jpeg;base64` is supported for now. */\r\n    static fromDataURL(image) {\r\n        return new FaceImage(image.replace(\"data:image/jpeg;base64,\", \"\"));\r\n    }\r\n    /** Extracts face image from a browser's canvas object.  */\r\n    static fromCanvas(canvas, quality = 1.0) {\r\n        return FaceImage.fromDataURL(canvas.toDataURL(\"image/jpeg\", quality));\r\n    }\r\n    /** Exports the face image data to a {@link BioSample} object. */\r\n    toBioSample(format = new BioSampleFormat(BioSampleFormatOwner.None, 0), purpose = BioSamplePurpose.Any, sdkVersion = 0x30100) {\r\n        return new BioSample(new BioSampleHeader(BioFactor.FacialFeatures, format, BioSampleType.Raw, purpose, -1, BioSampleEncryption.None), Base64Url.fromJSON(this));\r\n    }\r\n}\r\n//# sourceMappingURL=face.js.map","/**\r\n * Type of a security question.\r\n */\r\nexport var QuestionType;\r\n(function (QuestionType) {\r\n    /** A security question from a standard predefined list of questions ({@link Question.number} <= 100). */\r\n    QuestionType[QuestionType[\"Regular\"] = 0] = \"Regular\";\r\n    /** A user-defined security question ({@link Question.number} > 100). */\r\n    QuestionType[QuestionType[\"Custom\"] = 1] = \"Custom\";\r\n})(QuestionType || (QuestionType = {}));\r\n/**\r\n * Security question data.\r\n */\r\nexport class Question {\r\n    /** Constructs a security question. */\r\n    constructor(\r\n    /** An index of a question in a question list. */\r\n    number, \r\n    /** A question language ID. */\r\n    lang_id, \r\n    /** A question sublanguage ID. */\r\n    sublang_id, \r\n    /** A keyboard layout for the answer. */\r\n    keyboard_layout, \r\n    /** A text of the security question (only when {@link Question.type} === {@link QuestionType.Custom}) */\r\n    text) {\r\n        this.number = number;\r\n        this.lang_id = lang_id;\r\n        this.sublang_id = sublang_id;\r\n        this.keyboard_layout = keyboard_layout;\r\n        this.text = text;\r\n        /** Version info. */\r\n        this.version = 1;\r\n        this.type = number <= 100 ? QuestionType.Regular : QuestionType.Custom;\r\n        if (this.type === QuestionType.Custom && !text)\r\n            throw new Error(\"Question text is required for custom questions\");\r\n    }\r\n    /** Creates a security question from a plain JSON object. */\r\n    static fromJson(json) {\r\n        const obj = json;\r\n        return new Question(obj.number, obj.lang_id, obj.sublang_id, obj.keyboard_layout, obj.text);\r\n    }\r\n}\r\n/**\r\n * An answer to a security question.\r\n */\r\nexport class Answer {\r\n    /** Creates an answer to a security question. */\r\n    constructor(question, text) {\r\n        this.text = text;\r\n        this.number = (question instanceof Question) ? question.number : question;\r\n    }\r\n}\r\n//# sourceMappingURL=questions.js.map"],"names":["BioFactor","BioSampleFormatOwner","BioSampleType","BioSamplePurpose","BioSampleEncryption","UserNameType","ClaimName","FingerPosition","FaceImageType","QuestionType"],"mappings":";;;;;;IAAA;IACA;IACA;AACA,IAAO,MAAM,GAAG,CAAC;IACjB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;IACnC,QAAQ,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;IAClD,KAAK;IACL;IACA;IACA;IACA,IAAI,OAAO,iBAAiB,CAAC,KAAK,EAAE;IACpC,QAAQ,OAAO,MAAM;IACrB,aAAa,IAAI,CAAC,KAAK,CAAC;IACxB,aAAa,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;IACzC,aAAa,GAAG,CAAC,kBAAkB,CAAC;IACpC,aAAa,IAAI,CAAC,GAAG,CAAC,CAAC;IACvB,aAAa,IAAI,CAAC,GAAG,CAAC,CAAC;IACvB,KAAK;IACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,OAAO,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;IACrC,QAAQ,OAAO,IAAI;IACnB,eAAe,IAAI,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IACjD,eAAe,KAAK,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;IAChE,KAAK;IACL,CAAC;;ICnDD;IACA;IACA;AACA,IACA,CAAC,UAAU,SAAS,EAAE;IACtB,IAAI,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC;IACtD,IAAI,SAAS,CAAC,SAAS,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,GAAG,gBAAgB,CAAC;IAClE,IAAI,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC;IAChD,IAAI,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,GAAG,aAAa,CAAC;IAC5D,IAAI,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,GAAG,MAAM,CAAC;IAC/C,IAAI,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,QAAQ,CAAC;IACnD,IAAI,SAAS,CAAC,SAAS,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC,GAAG,cAAc,CAAC;IAC/D,IAAI,SAAS,CAAC,SAAS,CAAC,mBAAmB,CAAC,GAAG,GAAG,CAAC,GAAG,mBAAmB,CAAC;IAC1E,IAAI,SAAS,CAAC,SAAS,CAAC,mBAAmB,CAAC,GAAG,GAAG,CAAC,GAAG,mBAAmB,CAAC;IAC1E,IAAI,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,GAAG,GAAG,CAAC,GAAG,aAAa,CAAC;IAC9D,IAAI,SAAS,CAAC,SAAS,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAAC,GAAG,kBAAkB,CAAC;IACzE,IAAI,SAAS,CAAC,SAAS,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAAC,GAAG,kBAAkB,CAAC;IACzE,IAAI,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,MAAM,CAAC;IACjD,CAAC,EAAEA,iBAAS,KAAKA,iBAAS,GAAG,EAAE,CAAC,CAAC,CAAC;AAClC,IAIA,CAAC,UAAU,oBAAoB,EAAE;IACjC,IAAI,oBAAoB,CAAC,oBAAoB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;IACpE;IACA,IAAI,oBAAoB,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,GAAG,EAAE,CAAC,GAAG,mBAAmB,CAAC;IAC/F;IACA,IAAI,oBAAoB,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC,GAAG,gBAAgB,CAAC;IACzF;IACA,IAAI,oBAAoB,CAAC,oBAAoB,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,GAAG,UAAU,CAAC;IAC7E;IACA,IAAI,oBAAoB,CAAC,oBAAoB,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,GAAG,aAAa,CAAC;IACnF,CAAC,EAAEC,4BAAoB,KAAKA,4BAAoB,GAAG,EAAE,CAAC,CAAC,CAAC;IACxD;IACA;IACA;AACA,IAAO,MAAM,eAAe,CAAC;IAC7B,IAAI,WAAW,CAAC,WAAW,EAAE,QAAQ,EAAE;IACvC,QAAQ,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACvC,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IACjC,KAAK;IACL,CAAC;AACD,IAIA,CAAC,UAAU,aAAa,EAAE;IAC1B,IAAI,aAAa,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;IACpD,IAAI,aAAa,CAAC,aAAa,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,GAAG,cAAc,CAAC;IACtE,IAAI,aAAa,CAAC,aAAa,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC;IAChE,IAAI,aAAa,CAAC,aAAa,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,GAAG,kBAAkB,CAAC;IAC9E,IAAI,aAAa,CAAC,aAAa,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,GAAG,WAAW,CAAC;IACjE,IAAI,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,QAAQ,CAAC;IAC3D,CAAC,EAAEC,qBAAa,KAAKA,qBAAa,GAAG,EAAE,CAAC,CAAC,CAAC;AAC1C,IAIA,CAAC,UAAU,gBAAgB,EAAE;IAC7B,IAAI,gBAAgB,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;IAC1D,IAAI,gBAAgB,CAAC,gBAAgB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;IAChE,IAAI,gBAAgB,CAAC,gBAAgB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC;IACpE,IAAI,gBAAgB,CAAC,gBAAgB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;IAChE,IAAI,gBAAgB,CAAC,gBAAgB,CAAC,2BAA2B,CAAC,GAAG,CAAC,CAAC,GAAG,2BAA2B,CAAC;IACtG,IAAI,gBAAgB,CAAC,gBAAgB,CAAC,6BAA6B,CAAC,GAAG,CAAC,CAAC,GAAG,6BAA6B,CAAC;IAC1G,IAAI,gBAAgB,CAAC,gBAAgB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC;IAC9D,CAAC,EAAEC,wBAAgB,KAAKA,wBAAgB,GAAG,EAAE,CAAC,CAAC,CAAC;AAChD,IAIA,CAAC,UAAU,mBAAmB,EAAE;IAChC,IAAI,mBAAmB,CAAC,mBAAmB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;IAClE,IAAI,mBAAmB,CAAC,mBAAmB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;IAClE,CAAC,EAAEC,2BAAmB,KAAKA,2BAAmB,GAAG,EAAE,CAAC,CAAC,CAAC;IACtD;IACA;IACA;AACA,IAAO,MAAM,eAAe,CAAC;IAC7B,IAAI,WAAW;IACf;IACA,IAAI,MAAM;IACV;IACA,IAAI,MAAM;IACV;IACA,IAAI,IAAI;IACR;IACA,IAAI,OAAO;IACX;IACA,IAAI,OAAO;IACX;IACA,IAAI,UAAU,EAAE;IAChB,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IAC7B,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IAC7B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACzB,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC/B,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC/B,QAAQ,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACrC,KAAK;IACL,CAAC;IACD;IACA;IACA;AACA,IAAO,MAAM,SAAS,CAAC;IACvB,IAAI,WAAW;IACf;IACA,IAAI,MAAM;IACV;IACA,IAAI,IAAI,EAAE;IACV,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IAC7B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACzB;IACA,QAAQ,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;IACzB,KAAK;IACL,CAAC;;ICnHD;IACA;IACA;IACA;AACA,IAAO,MAAM,KAAK,CAAC;IACnB,CAAC;IACD;IACA,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC,KAAK,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClE;IACA,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC,KAAK,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7D;IACA,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,KAAK,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;IACnE;IACA,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,QAAQ,GAAG,CAAC,CAAC;IACpC;IACA,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;IAC9C;IACA;IACA;AACA,IAAO,MAAM,IAAI,CAAC;IAClB,CAAC;IACD;IACA,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,KAAK,QAAQ,CAAC,kBAAkB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrE;IACA,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC;IACA,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;IACrE;IACA,IAAI,CAAC,SAAS,GAAG,CAAC,KAAK,KAAK,MAAM,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC,CAAC;IAC1D;IACA,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,cAAc,GAAG,CAAC,CAAC;IACzC;IACA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;IACnD;IACA;IACA;AACA,IAAO,MAAM,MAAM,CAAC;IACpB,CAAC;IACD;IACA,MAAM,CAAC,QAAQ,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC;IACA,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC,KAAK,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7D;IACA,MAAM,CAAC,aAAa,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI;IAC9D,IAAI,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACtC,KAAK,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;IACvB,KAAK,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IACxB;IACA,MAAM,CAAC,SAAS,GAAG,CAAC,KAAK,KAAK,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IACrE;IACA,MAAM,CAAC,QAAQ,GAAG,CAAC,GAAG,KAAK,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;IACjE;IACA;IACA;AACA,IAAO,MAAM,SAAS,CAAC;IACvB,CAAC;IACD;IACA,SAAS,CAAC,UAAU,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAC3F;IACA,SAAS,CAAC,QAAQ,GAAG,CAAC,CAAC,KAAK,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IACrE;IACA,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC,KAAK,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IACvE;IACA,SAAS,CAAC,SAAS,GAAG,CAAC,KAAK,KAAK,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IAC3E;IACA,SAAS,CAAC,QAAQ,GAAG,CAAC,GAAG,KAAK,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;IACvE;IACA;IACA;AACA,IAAO,MAAM,MAAM,CAAC;IACpB;IACA,IAAI,OAAO,SAAS,CAAC,KAAK,EAAE;IAC5B,QAAQ,MAAM,MAAM,GAAG,kCAAkC,CAAC;IAC1D,QAAQ,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC;IACtF,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IAC5C,QAAQ,OAAO,CAAC,GAAG,KAAK,EAAE;IAC1B,YAAY,EAAE,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5B,YAAY,EAAE,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5B,YAAY,EAAE,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5B,YAAY,EAAE,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5B,YAAY,EAAE,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5B,YAAY,GAAG,IAAI,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;IACnC,kBAAkB,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC;IACnD,kBAAkB,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC;IACzC,kBAAkB,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC;IACnD,kBAAkB,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC;IACnD,kBAAkB,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC;IACzC,kBAAkB,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC;IACnD,kBAAkB,MAAM,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IAClC,SAAS;IACT;IACA,QAAQ,MAAM,MAAM,GAAG,CAAC,GAAG,KAAK,CAAC;IACjC,QAAQ,IAAI,MAAM,KAAK,CAAC;IACxB,YAAY,OAAO,GAAG,CAAC;IACvB,QAAQ,QAAQ,MAAM;IACtB;IACA,YAAY,KAAK,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IACpC;IACA,YAAY,KAAK,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IACpC;IACA,YAAY,KAAK,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IACpC;IACA,YAAY,KAAK,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IACpC,SAAS;IACT,QAAQ,GAAG,IAAI,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;IAChC,QAAQ,QAAQ,MAAM;IACtB,YAAY,KAAK,CAAC,EAAE,OAAO,GAAG;IAC9B,kBAAkB,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC;IACxC,kBAAkB,QAAQ,CAAC;IAC3B,YAAY,KAAK,CAAC,EAAE,OAAO,GAAG;IAC9B,kBAAkB,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC;IACnD,kBAAkB,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC;IACzC,kBAAkB,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC;IACxC,kBAAkB,MAAM,CAAC;IACzB,YAAY,KAAK,CAAC,EAAE,OAAO,GAAG;IAC9B,kBAAkB,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC;IACnD,kBAAkB,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC;IACzC,kBAAkB,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC;IACnD,kBAAkB,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC;IACxC,kBAAkB,KAAK,CAAC;IACxB,YAAY,KAAK,CAAC,EAAE,OAAO,GAAG;IAC9B,kBAAkB,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC;IACnD,kBAAkB,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC;IACzC,kBAAkB,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC;IACnD,kBAAkB,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC;IACnD,kBAAkB,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC;IACzC,kBAAkB,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC;IACxC,kBAAkB,GAAG,CAAC;IACtB,SAAS;IACT,QAAQ,OAAO,GAAG,CAAC;IACnB,KAAK;IACL,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA,IAAI;;IC1IJ;AACA,IACA,CAAC,UAAU,YAAY,EAAE;IACzB;IACA,IAAI,YAAY,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;IAC1D;IACA,IAAI,YAAY,CAAC,YAAY,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,GAAG,eAAe,CAAC;IACtE;IACA,IAAI,YAAY,CAAC,YAAY,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC;IAC9D;IACA,IAAI,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;IAClD;IACA,IAAI,YAAY,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;IACxD;IACA,IAAI,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;IAClD;IACA,IAAI,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;IAClD;IACA,IAAI,YAAY,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;IAC1D;IACA,IAAI,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;IAClD;IACA,IAAI,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,CAAC,EAAEC,oBAAY,KAAKA,oBAAY,GAAG,EAAE,CAAC,CAAC,CAAC;;ICrBxC;IACA;IACA;IACA;AACA,IAAO,MAAM,IAAI,CAAC;IAClB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE;IAC5B,QAAQ,MAAM,MAAM,GAAG,+EAA+E,CAAC;IACvG,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;IAC/B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,IAAIA,oBAAY,CAAC,OAAO;IAC5E,YAAY,CAAC,IAAI,CAAC,IAAI,KAAK,GAAG,IAAIA,oBAAY,CAAC,OAAO;IACtD,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAIA,oBAAY,CAAC,GAAG;IAClE,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAIA,oBAAY,CAAC,GAAG;IACvE,wBAAwB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAGA,oBAAY,CAAC,GAAG;IACjE,8BAA8BA,oBAAY,CAAC,EAAE,CAAC,CAAC;IAC/C,KAAK;IACL;IACA,IAAI,WAAW,GAAG;IAClB,QAAQ,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC;IACpD,KAAK;IACL;IACA,IAAI,UAAU,GAAG;IACjB,QAAQ,OAAO,IAAI,CAAC,IAAI,KAAK,GAAG,CAAC;IACjC,KAAK;IACL;IACA,IAAI,OAAO,SAAS,GAAG;IACvB,QAAQ,OAAO,IAAI,IAAI,CAAC,EAAE,EAAEA,oBAAY,CAAC,OAAO,CAAC,CAAC;IAClD,KAAK;IACL;IACA,IAAI,OAAO,QAAQ,GAAG;IACtB,QAAQ,OAAO,IAAI,IAAI,CAAC,GAAG,EAAEA,oBAAY,CAAC,OAAO,CAAC,CAAC;IACnD,KAAK;IACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,OAAO,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE;IAChC,QAAQ,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACzC,QAAQ,MAAM,IAAI,GAAG,MAAM,CAAC,GAAG,KAAK,MAAM,CAAC,GAAG,YAAY,IAAI,CAAC,GAAG,MAAM,CAAC,GAAG;IAC5E,YAAY,MAAM,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC;IACnD,gBAAgB,MAAM,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,IAAIA,oBAAY,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;IAC9F,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;IACL,CAAC;;IC9DD;IACA,MAAM,SAAS,CAAC;IAChB;IACA,IAAI,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;IAC/B,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACvB,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACvB,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACvB,KAAK;IACL,CAAC;IACD;IACA;IACA;IACA;AACA,IAAO,MAAM,GAAG,CAAC;IACjB;IACA;IACA;IACA;IACA,IAAI,OAAO,MAAM,CAAC,GAAG,EAAE;IACvB,QAAQ,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACrC,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjE,QAAQ,IAAI,MAAM,CAAC,GAAG,KAAK,KAAK,EAAE;IAClC;IACA;IACA,YAAY,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,IAAI,SAAS,EAAE,CAAC,CAAC;IAC7E,SAAS;IACT,aAAa;IACb;IACA,YAAY,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtE;IACA,YAAY,IAAI,QAAQ,OAAO,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE;IACnD,gBAAgB,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC;IACnD,gBAAgB,OAAO,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACnD,aAAa;IACb,YAAY,OAAO,OAAO,CAAC;IAC3B,SAAS;IACT,KAAK;IACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,OAAO,MAAM,CAAC,GAAG,EAAE;IACvB,QAAQ,MAAM,CAAC,GAAG,EAAE,CAAC;IACrB,QAAQ,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACvC,QAAQ,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC;IAChD;IACA,QAAQ,IAAI,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG;IAC/D,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC,CAAC;IACvE,QAAQ,IAAI,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,GAAG,GAAG;IAC1C,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC,CAAC;IAC3D,QAAQ,IAAI,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,IAAI,GAAG;IAC3C,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC;IACnD,QAAQ,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;IACvC,KAAK;IACL,CAAC;;ICnED;AACA,IACA,CAAC,UAAU,SAAS,EAAE;IACtB;IACA,IAAI,SAAS,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC;IAClC,IAAI,SAAS,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC;IACpC,IAAI,SAAS,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC;IAClC,IAAI,SAAS,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC;IAClC,IAAI,SAAS,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC;IACnC,IAAI,SAAS,CAAC,cAAc,CAAC,GAAG,KAAK,CAAC;IACtC,IAAI,SAAS,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC;IACrC;IACA,IAAI,SAAS,CAAC,cAAc,CAAC,GAAG,KAAK,CAAC;IACtC,IAAI,SAAS,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC;IACpC,IAAI,SAAS,CAAC,QAAQ,CAAC,GAAG,SAAS,CAAC;IACpC,IAAI,SAAS,CAAC,iBAAiB,CAAC,GAAG,KAAK,CAAC;IACzC,IAAI,SAAS,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC;IACjC,IAAI,SAAS,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;IAC/B,IAAI,SAAS,CAAC,oBAAoB,CAAC,GAAG,KAAK,CAAC;IAC5C,IAAI,SAAS,CAAC,cAAc,CAAC,GAAG,KAAK,CAAC;IACtC,CAAC,EAAEC,iBAAS,KAAKA,iBAAS,GAAG,EAAE,CAAC,CAAC,CAAC;;ICpBlC;IACA;IACA;AACA,IAAO,MAAM,MAAM,CAAC;IACpB;IACA,IAAI,WAAW,CAAC,GAAG,EAAE;IACrB,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACvB,KAAK;IACL;IACA,IAAI,OAAO,IAAI,GAAG;IAClB,QAAQ,OAAO,IAAI,MAAM,CAAC,EAAE,CAAC,CAAC;IAC9B,KAAK;IACL,CAAC;;ICXD;IACA;IACA;AACA,IAAO,MAAM,UAAU,CAAC;IACxB;IACA,IAAI,WAAW,CAAC,EAAE,EAAE,IAAI,EAAE,MAAM,GAAG,IAAI,EAAE;IACzC,QAAQ,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;IACrB,QAAQ,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI;IAChC,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;IAC5C,kBAAkB,SAAS,CAAC,SAAS,CAAC,QAAQ,IAAI,CAAC,KAAK,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;IAChG,KAAK;IACL;IACA,IAAI,OAAO,IAAI,GAAG;IAClB,QAAQ,OAAO,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC;IAClC,KAAK;IACL;IACA,IAAI,OAAO,GAAG,GAAG;IACjB,QAAQ,OAAO,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC;IACnC,KAAK;IACL,CAAC;IACD;IACA,UAAU,CAAC,QAAQ,GAAG,sCAAsC,CAAC;IAC7D,UAAU,CAAC,YAAY,GAAG,sCAAsC,CAAC;IACjE,UAAU,CAAC,IAAI,GAAG,sCAAsC,CAAC;IACzD,UAAU,CAAC,SAAS,GAAG,sCAAsC,CAAC;IAC9D,UAAU,CAAC,eAAe,GAAG,sCAAsC,CAAC;IACpE,UAAU,CAAC,aAAa,GAAG,sCAAsC,CAAC;IAClE,UAAU,CAAC,GAAG,GAAG,sCAAsC,CAAC;IACxD,UAAU,CAAC,iBAAiB,GAAG,sCAAsC,CAAC;IACtE,UAAU,CAAC,SAAS,GAAG,sCAAsC,CAAC;IAC9D,UAAU,CAAC,eAAe,GAAG,sCAAsC,CAAC;IACpE,UAAU,CAAC,GAAG,GAAG,sCAAsC,CAAC;IACxD,UAAU,CAAC,GAAG,GAAG,sCAAsC,CAAC;IACxD,UAAU,CAAC,KAAK,GAAG,sCAAsC,CAAC;IAC1D,UAAU,CAAC,QAAQ,GAAG,sCAAsC,CAAC;IAC7D;IACA,UAAU,CAAC,KAAK,GAAG,sCAAsC,CAAC,kBAAkB;;ICrC5E;IACA;IACA;AACA,IACA,CAAC,UAAU,cAAc,EAAE;IAC3B,IAAI,cAAc,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;IAC9D,IAAI,cAAc,CAAC,cAAc,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,GAAG,YAAY,CAAC;IACpE,IAAI,cAAc,CAAC,cAAc,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,GAAG,YAAY,CAAC;IACpE,IAAI,cAAc,CAAC,cAAc,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,GAAG,aAAa,CAAC;IACtE,IAAI,cAAc,CAAC,cAAc,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC;IAClE,IAAI,cAAc,CAAC,cAAc,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,GAAG,aAAa,CAAC;IACtE,IAAI,cAAc,CAAC,cAAc,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC;IAClE,IAAI,cAAc,CAAC,cAAc,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC;IAClE,IAAI,cAAc,CAAC,cAAc,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,GAAG,YAAY,CAAC;IACpE,IAAI,cAAc,CAAC,cAAc,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC;IAChE,IAAI,cAAc,CAAC,cAAc,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,GAAG,YAAY,CAAC;IACrE,CAAC,EAAEC,sBAAc,KAAKA,sBAAc,GAAG,EAAE,CAAC,CAAC,CAAC;IAC5C;AACA,IAAO,MAAM,MAAM,CAAC;IACpB,IAAI,WAAW;IACf;IACA,IAAI,QAAQ,EAAE;IACd,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IACjC,KAAK;IACL;IACA,IAAI,OAAO,QAAQ,CAAC,IAAI,EAAE;IAC1B,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC;IACzB,QAAQ,OAAO,IAAI,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACxC,KAAK;IACL,CAAC;;IChBD,CAAC,UAAU,aAAa,EAAE;IAC1B,IAAI,aAAa,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;IACtD,CAAC,EAAEC,qBAAa,KAAKA,qBAAa,GAAG,EAAE,CAAC,CAAC,CAAC;IAC1C;IACA;IACA;AACA,IAAO,MAAM,SAAS,CAAC;IACvB,IAAI,WAAW;IACf;IACA,IAAI,SAAS;IACb;IACA,IAAI,SAAS,GAAGA,qBAAa,CAAC,IAAI,EAAE;IACpC,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IACnC,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IACnC;IACA,QAAQ,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;IACzB,KAAK;IACL;IACA,IAAI,OAAO,WAAW,CAAC,KAAK,EAAE;IAC9B,QAAQ,OAAO,IAAI,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,yBAAyB,EAAE,EAAE,CAAC,CAAC,CAAC;IAC3E,KAAK;IACL;IACA,IAAI,OAAO,UAAU,CAAC,MAAM,EAAE,OAAO,GAAG,GAAG,EAAE;IAC7C,QAAQ,OAAO,SAAS,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC,CAAC;IAC9E,KAAK;IACL;IACA,IAAI,WAAW,CAAC,MAAM,GAAG,IAAI,eAAe,CAACP,4BAAoB,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,GAAGE,wBAAgB,CAAC,GAAG,EAAE,UAAU,GAAG,OAAO,EAAE;IAClI,QAAQ,OAAO,IAAI,SAAS,CAAC,IAAI,eAAe,CAACH,iBAAS,CAAC,cAAc,EAAE,MAAM,EAAEE,qBAAa,CAAC,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,EAAEE,2BAAmB,CAAC,IAAI,CAAC,EAAE,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IACxK,KAAK;IACL,CAAC;;IC1CD;IACA;IACA;AACA,IACA,CAAC,UAAU,YAAY,EAAE;IACzB;IACA,IAAI,YAAY,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;IAC1D;IACA,IAAI,YAAY,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;IACxD,CAAC,EAAEK,oBAAY,KAAKA,oBAAY,GAAG,EAAE,CAAC,CAAC,CAAC;IACxC;IACA;IACA;AACA,IAAO,MAAM,QAAQ,CAAC;IACtB;IACA,IAAI,WAAW;IACf;IACA,IAAI,MAAM;IACV;IACA,IAAI,OAAO;IACX;IACA,IAAI,UAAU;IACd;IACA,IAAI,eAAe;IACnB;IACA,IAAI,IAAI,EAAE;IACV,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IAC7B,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC/B,QAAQ,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACrC,QAAQ,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;IAC/C,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACzB;IACA,QAAQ,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;IACzB,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI,GAAG,GAAGA,oBAAY,CAAC,OAAO,GAAGA,oBAAY,CAAC,MAAM,CAAC;IAC/E,QAAQ,IAAI,IAAI,CAAC,IAAI,KAAKA,oBAAY,CAAC,MAAM,IAAI,CAAC,IAAI;IACtD,YAAY,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;IAC9E,KAAK;IACL;IACA,IAAI,OAAO,QAAQ,CAAC,IAAI,EAAE;IAC1B,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC;IACzB,QAAQ,OAAO,IAAI,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,eAAe,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACpG,KAAK;IACL,CAAC;IACD;IACA;IACA;AACA,IAAO,MAAM,MAAM,CAAC;IACpB;IACA,IAAI,WAAW,CAAC,QAAQ,EAAE,IAAI,EAAE;IAChC,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACzB,QAAQ,IAAI,CAAC,MAAM,GAAG,CAAC,QAAQ,YAAY,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC;IAClF,KAAK;IACL,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}