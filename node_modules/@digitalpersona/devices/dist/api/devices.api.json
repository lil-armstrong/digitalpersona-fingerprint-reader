{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.2.2",
    "schemaVersion": 1001,
    "oldestForwardsCompatibleVersion": 1001
  },
  "kind": "Package",
  "canonicalReference": "@digitalpersona/devices",
  "docComment": "",
  "name": "@digitalpersona/devices",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "",
      "name": "",
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "(AcquisitionStarted:class)",
          "docComment": "/**\n * An event signaling that a fingerprint reader is ready and waiting to scan a finger.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "AcquisitionStarted"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "DeviceEvent"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "AcquisitionStarted",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "(:constructor,0)",
              "docComment": "/**\n * Constructs a new event object.\n *\n * @param deviceUid - a fingeprint reader ID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "deviceUid"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "deviceUid",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "(AcquisitionStopped:class)",
          "docComment": "/**\n * An event signaling that a fingerprint reader has stopped waiting for a finger scan.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "AcquisitionStopped"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "DeviceEvent"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "AcquisitionStopped",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "(:constructor,0)",
              "docComment": "/**\n * Constructs a new event object.\n *\n * @param deviceUid - a fingeprint reader ID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "deviceUid"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "deviceUid",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "(Card:interface)",
          "docComment": "/**\n * A card information.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "Card"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Card",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "Attributes",
              "docComment": "/**\n * Attributes supported by the card.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "Attributes"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "CardAttributes"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "Attributes",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "Name",
              "docComment": "/**\n * A card name.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "Name"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "Name",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "Reader",
              "docComment": "/**\n * A card reader name.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "Reader"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "Reader",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "Type",
              "docComment": "/**\n * A card type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "Type"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "CardType"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "Type",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "(CardAttributes:enum)",
          "docComment": "/**\n * Bitwise flags for attributes supported by a card.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum "
            },
            {
              "kind": "Reference",
              "text": "CardAttributes"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CardAttributes",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "IsPIV",
              "docComment": "/**\n * The card supports PIV.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "IsPIV"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "131072"
                }
              ],
              "releaseTag": "Public",
              "name": "IsPIV",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "IsPKI",
              "docComment": "/**\n * The card supports PKI.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "IsPKI"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "65536"
                }
              ],
              "releaseTag": "Public",
              "name": "IsPKI",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "IsReadOnly",
              "docComment": "/**\n * The card is read-only.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "IsReadOnly"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "2147483648"
                }
              ],
              "releaseTag": "Public",
              "name": "IsReadOnly",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "SupportsPIN",
              "docComment": "/**\n * The card supports PIN code.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "SupportsPIN"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "SupportsPIN",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "SupportsUID",
              "docComment": "/**\n * The card supports UID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "SupportsUID"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "releaseTag": "Public",
              "name": "SupportsUID",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "(CardInserted:class)",
          "docComment": "/**\n * An event signaling that a card was presented (inserted or touched) to a card reader.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "CardInserted"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "DeviceEvent"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CardInserted",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "(:constructor,0)",
              "docComment": "/**\n * Contructs a new event object.\n *\n * @param reader - a name of a card reader where the card was presented.\n *\n * @param card - a name of a card presented.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "reader"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "card"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "reader",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "card",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "(cardId:instance)",
              "docComment": "/**\n * A card ID\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "cardId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cardId",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "(CardRemoved:class)",
          "docComment": "/**\n * An event signaling that a card was removed from a card reader.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "CardRemoved"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "DeviceEvent"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CardRemoved",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "(:constructor,0)",
              "docComment": "/**\n * Contructs a new event object.\n *\n * @param reader - a name of a card reader where the card was presented.\n *\n * @param card - a name of a card presented.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "reader"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "card"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "reader",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "card",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "(cardId:instance)",
              "docComment": "/**\n * A card ID\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "cardId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cardId",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "(CardsReader:class)",
          "docComment": "/**\n * A card reader API class. An instance of this class allows to subscribe to card reader events and read card data. The card reader API uses DigitalPersona WebSDK to communicate with card reader drivers and hardware.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "CardsReader"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "MultiCastEventSource"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CardsReader",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "(:constructor,0)",
              "docComment": "/**\n * Constructs a new card reader API object.\n *\n * @param options - options for the `WebSdk` channel.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "WebSdk"
                },
                {
                  "kind": "Content",
                  "text": "."
                },
                {
                  "kind": "Reference",
                  "text": "WebChannelOptions"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "(enumerateCards:instance,0)",
              "docComment": "/**\n * Lists all inserted cards.\n *\n * @returns a promise to return a list of card information for connected cards.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "enumerateCards"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Card"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [],
              "name": "enumerateCards"
            },
            {
              "kind": "Method",
              "canonicalReference": "(enumerateReaders:instance,0)",
              "docComment": "/**\n * Lists all connected card readers.\n *\n * @returns a promise to return a list of card reader names.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "enumerateReaders"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise"
                },
                {
                  "kind": "Content",
                  "text": "<string[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [],
              "name": "enumerateReaders"
            },
            {
              "kind": "Method",
              "canonicalReference": "(getCardAuthData:instance,0)",
              "docComment": "/**\n * Reads card authentication data.\n *\n * @param reader - a name of a card reader where the card was presented.\n *\n * @param pin - an PIN code (for cards requiring a PIN).\n *\n * @returns a promise to return card authentication data. The card data is an opaque encoded string which should be sent to the server as is.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "getCardAuthData"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "reader"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "pin"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "reader",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "pin",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                }
              ],
              "name": "getCardAuthData"
            },
            {
              "kind": "Method",
              "canonicalReference": "(getCardEnrollData:instance,0)",
              "docComment": "/**\n * Reads card enrollment data.\n *\n * @param reader - a name of a card reader where the card was presented.\n *\n * @param pin - an PIN code (for cards requiring a PIN).\n *\n * @returns a promise to return a card enrollment data. The card data is an opaque encoded string which should be sent to the server as is.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "getCardEnrollData"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "reader"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "pin"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "reader",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "pin",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                }
              ],
              "name": "getCardEnrollData"
            },
            {
              "kind": "Method",
              "canonicalReference": "(getCardInfo:instance,0)",
              "docComment": "/**\n * Reads card data from a specific card.\n *\n * @param reader - a name of a card reader where the card was presented.\n *\n * @returns a promise to return a card information. The promise can be fulfilled but return `null` if the card has no information. The promise will be rejected if a card is not found or in case of a reading error.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "getCardInfo"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "reader"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Card"
                },
                {
                  "kind": "Content",
                  "text": " | null>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "reader",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "getCardInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "(getCardUid:instance,0)",
              "docComment": "/**\n * Reads a card unique identifier.\n *\n * @param reader - a name of a card reader where the card was presented.\n *\n * @returns a promise to return a card identifier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "getCardUid"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "reader"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "reader",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "getCardUid"
            },
            {
              "kind": "Method",
              "canonicalReference": "(off:instance,0)",
              "docComment": "/**\n * Deletes an event handler for the event.\n *\n * @param event - a name of the event to subscribe.\n *\n * @param handler - an event handler added with the {@link CardsReader.on} method.\n *\n * @example\n *\n * See example in {@link CardsReader.on}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "off"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "E"
                },
                {
                  "kind": "Content",
                  "text": " extends "
                },
                {
                  "kind": "Reference",
                  "text": "Event"
                },
                {
                  "kind": "Content",
                  "text": ">("
                },
                {
                  "kind": "Reference",
                  "text": "event"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "handler"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Handler"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "E"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                },
                {
                  "parameterName": "handler",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 16
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "E",
                  "constraintTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "off"
            },
            {
              "kind": "Method",
              "canonicalReference": "(on:instance,0)",
              "docComment": "/**\n * Adds an event handler for the event. This is a multicast subscription, i.e. many handlers can be registered at once.\n *\n * @param event - a name of the event to subscribe, e.g. \"CardInserted\"\n *\n * @param handler - an event handler.\n *\n * @returns an event handler reference. Store the reference and pass it to the {@link CardsReader.off} to unsubscribe from the event.\n *\n * @example\n * ```\n * class CardComponent\n * {\n *     private reader: CardsReader;\n *\n *     private onCardInserted = (event: CardInserted) => { ... }\n *     private onCardRemoved = (event: CardRemoved) => { ... }\n *     ...\n *\n *     public async $onInit() {\n *         this.reader = new CardsReader();\n *         this.reader.on(\"CardInserted\", this.onCardInserted);\n *         this.reader.on(\"CardRemoved\", this.onCardRemoved);\n *         ...\n *         await this.cardReader.subscribe()\n *     }\n *     public async $onDestroy() {\n *         await this.cardReader.unsubscribe();\n *         this.reader.off(\"CardInserted\", this.onCardInserted);\n *         this.reader.off(\"CardRemoved\", this.onCardRemoved);\n *         ...\n *         // alternatively, call this.reader.off() to unsubscribe from all events at once.\n *         delete this.reader;\n *     }\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "on"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "E"
                },
                {
                  "kind": "Content",
                  "text": " extends "
                },
                {
                  "kind": "Reference",
                  "text": "Event"
                },
                {
                  "kind": "Content",
                  "text": ">("
                },
                {
                  "kind": "Reference",
                  "text": "event"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "handler"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Handler"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "E"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Handler"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "E"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 21
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                },
                {
                  "parameterName": "handler",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 16
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "E",
                  "constraintTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "on"
            },
            {
              "kind": "Property",
              "canonicalReference": "(onCardInserted:instance)",
              "docComment": "/**\n * An event handler for the {@link CardInserted} event. This is a unicast subscription, i.e. only one handler can be registered at once.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "onCardInserted"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Handler"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CardInserted"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onCardInserted",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "(onCardRemoved:instance)",
              "docComment": "/**\n * An event handler for the {@link CardRemoved} event. This is a unicast subscription, i.e. only one handler can be registered at once.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "onCardRemoved"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Handler"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CardRemoved"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onCardRemoved",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "(onCommunicationFailed:instance)",
              "docComment": "/**\n * An event handler for the {@link CommunicationFailed} event. This is a unicast subscription, i.e. only one handler can be registered at once.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "onCommunicationFailed"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Handler"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CommunicationFailed"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onCommunicationFailed",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "(onDeviceConnected:instance)",
              "docComment": "/**\n * An event handler for the {@link DeviceConnected} event. This is a unicast subscription, i.e. only one handler can be registered at once.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "onDeviceConnected"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Handler"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DeviceConnected"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onDeviceConnected",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "(onDeviceDisconnected:instance)",
              "docComment": "/**\n * An event handler for the {@link DeviceDisconnected} event. This is a unicast subscription, i.e. only one handler can be registered at once.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "onDeviceDisconnected"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Handler"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DeviceDisconnected"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onDeviceDisconnected",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "(subscribe:instance,0)",
              "docComment": "/**\n * Starts listening for card reader events.\n *\n * @param reader - an optional name of a card reader to listen. If no name is provided, the API will start listening all card readers.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "subscribe"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "reader"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "reader",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "subscribe"
            },
            {
              "kind": "Method",
              "canonicalReference": "(unsubscribe:instance,0)",
              "docComment": "/**\n * Stop listening for card reader events.\n *\n * @param reader - an optional name of a card reader to stop listening. If no name is provided, the API will stop listening all card readers.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "unsubscribe"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "reader"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "reader",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "unsubscribe"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "(CardType:enum)",
          "docComment": "/**\n * Enumerates supported card types.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum "
            },
            {
              "kind": "Reference",
              "text": "CardType"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CardType",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "Contact",
              "docComment": "/**\n * A smartcard.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Contact"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "Contact",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "Contactless",
              "docComment": "/**\n * A contactless card.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Contactless"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "releaseTag": "Public",
              "name": "Contactless",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "Proximity",
              "docComment": "/**\n * A proximity card.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Proximity"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "4"
                }
              ],
              "releaseTag": "Public",
              "name": "Proximity",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "(CommunicationFailed:class)",
          "docComment": "/**\n * An event signaling a problem with a device channel communication.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "CommunicationFailed"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "Event"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CommunicationFailed",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "(:constructor,0)",
              "docComment": "/**\n * Constructs a new instance of the `CommunicationFailed` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": []
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "(DeviceConnected:class)",
          "docComment": "/**\n * An event signaling that a device was connected.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "DeviceConnected"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "DeviceEvent"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DeviceConnected",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "(:constructor,0)",
              "docComment": "/**\n * Constructs a new event.\n *\n * @param deviceId - a device ID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "deviceId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "deviceId",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "(DeviceDisconnected:class)",
          "docComment": "/**\n * An event signaling that a device was disconnected.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "DeviceDisconnected"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "DeviceEvent"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DeviceDisconnected",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "(:constructor,0)",
              "docComment": "/**\n * Constructs a new event.\n *\n * @param deviceId - a device ID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "deviceId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "deviceId",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "(DeviceEvent:class)",
          "docComment": "/**\n * A base class for device events.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "DeviceEvent"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "Event"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DeviceEvent",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "(:constructor,0)",
              "docComment": "/**\n * Constructs a new event.\n *\n * @param type - an event type\n *\n * @param deviceId - a device ID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "type"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "deviceId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "deviceId",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "(deviceId:instance)",
              "docComment": "/**\n * A device ID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "deviceId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "deviceId",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "(DeviceInfo:interface)",
          "docComment": "/**\n * Fingerprint device information.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "DeviceInfo"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DeviceInfo",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "DeviceID",
              "docComment": "/**\n * A fingerprint reader ID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "DeviceID"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "DeviceID",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "eDeviceModality",
              "docComment": "/**\n * A fingerprint reader modality.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "eDeviceModality"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "DeviceModality"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "eDeviceModality",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "eDeviceTech",
              "docComment": "/**\n * A fingerprint reader technology.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "eDeviceTech"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "DeviceTechnology"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "eDeviceTech",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "eUidType",
              "docComment": "/**\n * A fingerprint reader type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "eUidType"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "DeviceUidType"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "eUidType",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "(DeviceModality:enum)",
          "docComment": "/**\n * Fingerprint device modalities (how users should use they fingers to make a scan).\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum "
            },
            {
              "kind": "Reference",
              "text": "DeviceModality"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DeviceModality",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "Area",
              "docComment": "/**\n * Users must place a single finger over a scaning area.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Area"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "releaseTag": "Public",
              "name": "Area",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "AreaMultifinger",
              "docComment": "/**\n * Users must place multiple fingers over a scaning area.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "AreaMultifinger"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "3"
                }
              ],
              "releaseTag": "Public",
              "name": "AreaMultifinger",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "Swipe",
              "docComment": "/**\n * Users must swipe a single finger.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Swipe"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "Swipe",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "Unknown",
              "docComment": "/**\n * The fingerprint modality is not known.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Unknown"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "Unknown",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "(DeviceTechnology:enum)",
          "docComment": "/**\n * A fingerprint reader technology (a method of scanning)\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum "
            },
            {
              "kind": "Reference",
              "text": "DeviceTechnology"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DeviceTechnology",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "Capacitive",
              "docComment": "/**\n * The reader uses changes of electrical capacitance of a finger skin.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Capacitive"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "releaseTag": "Public",
              "name": "Capacitive",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "Optical",
              "docComment": "/**\n * The reader uses an optical image of a finger skin.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Optical"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "Optical",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "Pressure",
              "docComment": "/**\n * The reader uses changes of a pressure under the finger.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Pressure"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "4"
                }
              ],
              "releaseTag": "Public",
              "name": "Pressure",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "Thermal",
              "docComment": "/**\n * The reader uses a thermal image of a finger.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Thermal"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "3"
                }
              ],
              "releaseTag": "Public",
              "name": "Thermal",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "Unknown",
              "docComment": "/**\n * The method of scanning is unknown.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Unknown"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "Unknown",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "(DeviceUidType:enum)",
          "docComment": "/**\n * Fingerprint device types.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum "
            },
            {
              "kind": "Reference",
              "text": "DeviceUidType"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DeviceUidType",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "Persistent",
              "docComment": "/**\n * The fingerprint device is embedded and cannot be removed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Persistent"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "Persistent",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "Volatile",
              "docComment": "/**\n * The fingerprint device can be removed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Volatile"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "Volatile",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "(ErrorOccurred:class)",
          "docComment": "/**\n * An event reporting a fingerprint reader error.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "ErrorOccurred"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "DeviceEvent"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ErrorOccurred",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "(:constructor,0)",
              "docComment": "/**\n * Constructs a new event object.\n *\n * @param deviceUid - a fingeprint reader ID.\n *\n * @param error - an error code.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "deviceUid"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "error"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "deviceUid",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "error",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "(error:instance)",
              "docComment": "/**\n * A fingerprint reader error.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "error"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "(Event:class)",
          "docComment": "/**\n * A base class for DigitalPersona events.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "Event"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Event",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "(:constructor,0)",
              "docComment": "/**\n * Constructs a new instance of the `Event` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "type"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "(type:instance)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "type"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "(FingerprintReader:class)",
          "docComment": "/**\n * A fingerprint reader API. An instance of this class allows to subscribe to finerprint reader events and read fingerprint data. The fingerprint reader API uses DigitalPersona WebSDK to communicate with fingerprint reader drivers and hardware.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "FingerprintReader"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "MultiCastEventSource"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "FingerprintReader",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "(:constructor,0)",
              "docComment": "/**\n * Constructs a new fingerprint reader API object.\n *\n * @param options - options for the `WebSdk` channel.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "WebSdk"
                },
                {
                  "kind": "Content",
                  "text": "."
                },
                {
                  "kind": "Reference",
                  "text": "WebChannelOptions"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "(enumerateDevices:instance,0)",
              "docComment": "/**\n * Lists all connected fingerprint readers.\n *\n * @returns a promise to return a list of fingerprint reader names.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "enumerateDevices"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise"
                },
                {
                  "kind": "Content",
                  "text": "<string[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [],
              "name": "enumerateDevices"
            },
            {
              "kind": "Method",
              "canonicalReference": "(getDeviceInfo:instance,0)",
              "docComment": "/**\n * Reads a fingerprint reader device information.\n *\n * @param deviceUid - a fingerprint reader ID.\n *\n * @returns a promise to return a device information. The promise can be fulfilled but return `null` if the reader provides no information. The promise will be rejected if a reader is not found or in case of a reading error.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "getDeviceInfo"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "deviceUid"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DeviceInfo"
                },
                {
                  "kind": "Content",
                  "text": " | null>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "deviceUid",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "getDeviceInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "(off:instance,0)",
              "docComment": "/**\n * Deletes an event handler for the event.\n *\n * @param event - a name of the event to subscribe.\n *\n * @param handler - an event handler added with the {@link FingerprintReader.on} method.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "off"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "E"
                },
                {
                  "kind": "Content",
                  "text": " extends "
                },
                {
                  "kind": "Reference",
                  "text": "Event"
                },
                {
                  "kind": "Content",
                  "text": ">("
                },
                {
                  "kind": "Reference",
                  "text": "event"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "handler"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Handler"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "E"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                },
                {
                  "parameterName": "handler",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 16
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "E",
                  "constraintTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "off"
            },
            {
              "kind": "Method",
              "canonicalReference": "(on:instance,0)",
              "docComment": "/**\n * Adds an event handler for the event. This is a multicast subscription, i.e. many handlers can be registered at once.\n *\n * @param event - a name of the event to subscribe, e.g. \"SampleAcquired\"\n *\n * @param handler - an event handler.\n *\n * @returns an event handler reference. Store the reference and pass it to the {@link FingerprintReader.off} to unsubscribe from the event.\n *\n * @example\n * ```\n * class FingerprintComponent\n * {\n *     private reader: FingerprintReader;\n *\n *     private onDeviceConnected = (event: DeviceConnected) => { ... };\n *     private onDeviceDisconnected = (event: DeviceDisconnected) => { ... };\n *     private onSamplesAcquired = (event: SampleAquired) => { ... };\n *     ...\n *\n *     public async $onInit() {\n *         this.reader = new FingerprintReader();\n *         this.reader.on(\"DeviceConnected\", onDeviceConnected);\n *         this.reader.on(\"DeviceDisconnected\", onDeviceDisconnected);\n *         this.reader.on(\"SamplesAcquired\", onSamplesAcquired);\n *         ...\n *         await this.fingerprintReader.startAcquisition(SampleFormat.Intermediate);\n *     }\n *     public async $onDestroy() {\n *         await this.fingerprintReader.stopAcquisition();\n *         this.reader.off(\"DeviceConnected\", onDeviceConnected);\n *         this.reader.off(\"DeviceDisconnected\", onDeviceDisconnected);\n *         this.reader.off(\"SamplesAcquired\", onSamplesAcquired);\n *         ...\n *         // alternatively, call this.reader.off() to unsubscribe from all events at once.\n *         delete this.reader;\n *     }\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "on"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "E"
                },
                {
                  "kind": "Content",
                  "text": " extends "
                },
                {
                  "kind": "Reference",
                  "text": "Event"
                },
                {
                  "kind": "Content",
                  "text": ">("
                },
                {
                  "kind": "Reference",
                  "text": "event"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "handler"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Handler"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "E"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Handler"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "E"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 21
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                },
                {
                  "parameterName": "handler",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 16
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "E",
                  "constraintTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "on"
            },
            {
              "kind": "Property",
              "canonicalReference": "(onAcquisitionStarted:instance)",
              "docComment": "/**\n * An event handler for the {@link AcquisitionStarted} event.\n *\n * @remarks\n *\n * This is a unicast subscription, i.e. only one handler can be registered at once. For multicast subscription use {@link FingerprintReader.on} and {@link FingerprintReader.off}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "onAcquisitionStarted"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Handler"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AcquisitionStarted"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onAcquisitionStarted",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "(onAcquisitionStopped:instance)",
              "docComment": "/**\n * An event handler for the {@link AcquisitionStopped} event.\n *\n * @remarks\n *\n * This is a unicast subscription, i.e. only one handler can be registered at once. For multicast subscription use {@link FingerprintReader.on} and {@link FingerprintReader.off}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "onAcquisitionStopped"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Handler"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AcquisitionStopped"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onAcquisitionStopped",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "(onCommunicationFailed:instance)",
              "docComment": "/**\n * An event handler for the {@link CommunicationFailed} event.\n *\n * @remarks\n *\n * This is a unicast subscription, i.e. only one handler can be registered at once. For multicast subscription use {@link FingerprintReader.on} and {@link FingerprintReader.off}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "onCommunicationFailed"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Handler"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CommunicationFailed"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onCommunicationFailed",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "(onDeviceConnected:instance)",
              "docComment": "/**\n * An event handler for the {@link DeviceConnected} event.\n *\n * @remarks\n *\n * This is a unicast subscription, i.e. only one handler can be registered at once. For multicast subscription use {@link FingerprintReader.on} and {@link FingerprintReader.off}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "onDeviceConnected"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Handler"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DeviceConnected"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onDeviceConnected",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "(onDeviceDisconnected:instance)",
              "docComment": "/**\n * An event handler for the {@link DeviceDisconnected} event.\n *\n * @remarks\n *\n * This is a unicast subscription, i.e. only one handler can be registered at once. For multicast subscription use {@link FingerprintReader.on} and {@link FingerprintReader.off}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "onDeviceDisconnected"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Handler"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DeviceDisconnected"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onDeviceDisconnected",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "(onErrorOccurred:instance)",
              "docComment": "/**\n * An event handler for the {@link ErrorOccurred} event.\n *\n * @remarks\n *\n * This is a unicast subscription, i.e. only one handler can be registered at once. For multicast subscription use {@link FingerprintReader.on} and {@link FingerprintReader.off}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "onErrorOccurred"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Handler"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ErrorOccurred"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onErrorOccurred",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "(onQualityReported:instance)",
              "docComment": "/**\n * An event handler for the {@link QualityReported} event.\n *\n * @remarks\n *\n * This is a unicast subscription, i.e. only one handler can be registered at once. For multicast subscription use {@link FingerprintReader.on} and {@link FingerprintReader.off}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "onQualityReported"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Handler"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "QualityReported"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onQualityReported",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "(onSamplesAcquired:instance)",
              "docComment": "/**\n * An event handler for the {@link SamplesAcquired} event.\n *\n * @remarks\n *\n * This is a unicast subscription, i.e. only one handler can be registered at once. For multicast subscription use {@link FingerprintReader.on} and {@link FingerprintReader.off}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "onSamplesAcquired"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Handler"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SamplesAcquired"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onSamplesAcquired",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "(startAcquisition:instance,0)",
              "docComment": "/**\n * Activate a fingerprint acquisition mode. This call will produce a {@link AcquisitionStarted} event if activation was successful. After that the reader will wait for a finger placed on the reader. When a finger is placed, a {@link QualityReported} event will report a scan quality, and a {@link SamplesAcquired} event will return a scanned sample in case of a successful scan.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "startAcquisition"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "sampleFormat"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SampleFormat"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "deviceUid"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "sampleFormat",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "deviceUid",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                }
              ],
              "name": "startAcquisition"
            },
            {
              "kind": "Method",
              "canonicalReference": "(stopAcquisition:instance,0)",
              "docComment": "/**\n * Deactivates a fingerprint acquisition mode. This call will produce a {@link AcquisitionStopped} event if deactivation was successful. After that the reader will stop waiting for a finger.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "stopAcquisition"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "deviceUid"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "deviceUid",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "stopAcquisition"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "(QualityCode:enum)",
          "docComment": "/**\n * A figerprint image quality.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum "
            },
            {
              "kind": "Reference",
              "text": "QualityCode"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "QualityCode",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "FakeFinger",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "FakeFinger"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "22"
                }
              ],
              "releaseTag": "Public",
              "name": "FakeFinger",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "Good",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Good"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "Good",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "LowContrast",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "LowContrast"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "5"
                }
              ],
              "releaseTag": "Public",
              "name": "LowContrast",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "NoImage",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "NoImage"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "NoImage",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "NotAFinger",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "NotAFinger"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "8"
                }
              ],
              "releaseTag": "Public",
              "name": "NotAFinger",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "NotCentered",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "NotCentered"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "7"
                }
              ],
              "releaseTag": "Public",
              "name": "NotCentered",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "NotEnoughFeatures",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "NotEnoughFeatures"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "6"
                }
              ],
              "releaseTag": "Public",
              "name": "NotEnoughFeatures",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "PressureTooHard",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "PressureTooHard"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "19"
                }
              ],
              "releaseTag": "Public",
              "name": "PressureTooHard",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "PressureTooLight",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "PressureTooLight"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "20"
                }
              ],
              "releaseTag": "Public",
              "name": "PressureTooLight",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "ReverseMotion",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "ReverseMotion"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "18"
                }
              ],
              "releaseTag": "Public",
              "name": "ReverseMotion",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "RotatedTooMuch",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "RotatedTooMuch"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "24"
                }
              ],
              "releaseTag": "Public",
              "name": "RotatedTooMuch",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "TooDark",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "TooDark"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "3"
                }
              ],
              "releaseTag": "Public",
              "name": "TooDark",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "TooFast",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "TooFast"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "14"
                }
              ],
              "releaseTag": "Public",
              "name": "TooFast",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "TooHigh",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "TooHigh"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "9"
                }
              ],
              "releaseTag": "Public",
              "name": "TooHigh",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "TooLeft",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "TooLeft"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "11"
                }
              ],
              "releaseTag": "Public",
              "name": "TooLeft",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "TooLight",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "TooLight"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "releaseTag": "Public",
              "name": "TooLight",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "TooLow",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "TooLow"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "10"
                }
              ],
              "releaseTag": "Public",
              "name": "TooLow",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "TooNoisy",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "TooNoisy"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "4"
                }
              ],
              "releaseTag": "Public",
              "name": "TooNoisy",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "TooRight",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "TooRight"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "12"
                }
              ],
              "releaseTag": "Public",
              "name": "TooRight",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "TooShort",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "TooShort"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "16"
                }
              ],
              "releaseTag": "Public",
              "name": "TooShort",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "TooSkewed",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "TooSkewed"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "15"
                }
              ],
              "releaseTag": "Public",
              "name": "TooSkewed",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "TooSlow",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "TooSlow"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "17"
                }
              ],
              "releaseTag": "Public",
              "name": "TooSlow",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "TooSmall",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "TooSmall"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "23"
                }
              ],
              "releaseTag": "Public",
              "name": "TooSmall",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "TooStrange",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "TooStrange"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "13"
                }
              ],
              "releaseTag": "Public",
              "name": "TooStrange",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "WetFinger",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "WetFinger"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "21"
                }
              ],
              "releaseTag": "Public",
              "name": "WetFinger",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "(QualityReported:class)",
          "docComment": "/**\n * An event reporting a quality of a fingerprint scan.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "QualityReported"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "DeviceEvent"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "QualityReported",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "(:constructor,0)",
              "docComment": "/**\n * Constructs a new event object.\n *\n * @param deviceUid - a fingerprint reader ID.\n *\n * @param quality - a fingerprint scan quality.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "deviceUid"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "quality"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "QualityCode"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "deviceUid",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "quality",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "(quality:instance)",
              "docComment": "/**\n * Fingerprint scan quality.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "quality"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "QualityCode"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "quality",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "(SampleFormat:enum)",
          "docComment": "/**\n * A fingerprint sample format.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum "
            },
            {
              "kind": "Reference",
              "text": "SampleFormat"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SampleFormat",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "Compressed",
              "docComment": "/**\n * A compressed fingerprint image (e.q. JPEG2000, WSQ).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Compressed"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "3"
                }
              ],
              "releaseTag": "Public",
              "name": "Compressed",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "Intermediate",
              "docComment": "/**\n * A fingerprint image encoded into an intermediate format.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Intermediate"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "releaseTag": "Public",
              "name": "Intermediate",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "PngImage",
              "docComment": "/**\n * A Portable Network Graphics (PNG) format.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "PngImage"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "5"
                }
              ],
              "releaseTag": "Public",
              "name": "PngImage",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "Raw",
              "docComment": "/**\n * A raw fingerprint image (bitmap).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Raw"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "Raw",
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "(SamplesAcquired:class)",
          "docComment": "/**\n * An event signaling that a new fingerprint sample (or samples) was acquired during a scan.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "SamplesAcquired"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "DeviceEvent"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SamplesAcquired",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "(:constructor,0)",
              "docComment": "/**\n * Constructs a new event object.\n *\n * @param deviceUid - a fingerprint reader ID.\n *\n * @param sampleFormat - a fingerprint sample format.\n *\n * @param sampleData - raw sample data received with WebSdk notifiation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "deviceUid"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "sampleFormat"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SampleFormat"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "sampleData"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "deviceUid",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "sampleFormat",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                },
                {
                  "parameterName": "sampleData",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "(sampleFormat:instance)",
              "docComment": "/**\n * A fingerprint sample format.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "sampleFormat"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SampleFormat"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "sampleFormat",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "(samples:instance)",
              "docComment": "/**\n * A collection of fingerprint samples acquired.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "samples"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "BioSample"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "samples",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 4
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "(WindowsAuthClient:class)",
          "docComment": "/**\n * Integrated Windows Authentication API. An instance of this class allows internet browsers to authenticate in DigitalPersona servers using Integrated Windows Authentication. The IWA API uses DigitalPersona WebSDK to communicate with Windwows operating system and extract Windows account data for authentication.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "WindowsAuthClient"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "MultiCastEventSource"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "IAuthenticationClient"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "WindowsAuthClient",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "(:constructor,0)",
              "docComment": "/**\n * Constructs a new IWA API object.\n *\n * @param options - options for the `WebSdk` channel.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "WebSdk"
                },
                {
                  "kind": "Content",
                  "text": "."
                },
                {
                  "kind": "Reference",
                  "text": "WebChannelOptions"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "(continue:instance,0)",
              "docComment": "/**\n * Used internally. Do not call this method.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "continue"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "handle"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "AuthenticationHandle"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "data"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Base64UrlString"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "handle",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                }
              ],
              "name": "continue"
            },
            {
              "kind": "Method",
              "canonicalReference": "(init:instance,0)",
              "docComment": "/**\n * Used internally. Do not call this method.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "init"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AuthenticationData"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [],
              "name": "init"
            },
            {
              "kind": "Method",
              "canonicalReference": "(off:instance,0)",
              "docComment": "/**\n * Deletes an event handler for the event.\n *\n * @param event - a name of the event to subscribe.\n *\n * @param handler - an event handler added with the {@link WindowsAuthClient.on} method.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "off"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "E"
                },
                {
                  "kind": "Content",
                  "text": " extends "
                },
                {
                  "kind": "Reference",
                  "text": "Event"
                },
                {
                  "kind": "Content",
                  "text": ">("
                },
                {
                  "kind": "Reference",
                  "text": "event"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "handler"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Handler"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "E"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                },
                {
                  "parameterName": "handler",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 16
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "E",
                  "constraintTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "off"
            },
            {
              "kind": "Method",
              "canonicalReference": "(on:instance,0)",
              "docComment": "/**\n * Adds an event handler for the event. This is a multicast subscription, i.e. many handlers can be registered at once.\n *\n * @param event - a name of the event to subscribe, e.g. \"CommunicationFailed\"\n *\n * @param handler - an event handler.\n *\n * @returns an event handler reference. Store the reference and pass it to the {@link WindowsAuthClient.off} to unsubscribe from the event.\n *\n * @example\n * ```\n * class IntegratedWindowsAuthComponent\n * {\n *     private client: WindowsAuthClient;\n *\n *     private onCommunicationFailed = (event: CommunicationFailed) => { ... }\n *\n *     public $onInit() {\n *         this.client = new WindowsAuthClient();\n *         this.client.on(\"CommunicationFailed\", this.onCommunicationFailed);\n *     }\n *     public $onDestroy() {\n *         this.client.off(\"CommunicationFailed\", this.onCommunicationFailed);\n *         // alternatively, call this.reader.off() to unsubscribe from all events at once.\n *         delete this.client;\n *     }\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "on"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "E"
                },
                {
                  "kind": "Content",
                  "text": " extends "
                },
                {
                  "kind": "Reference",
                  "text": "Event"
                },
                {
                  "kind": "Content",
                  "text": ">("
                },
                {
                  "kind": "Reference",
                  "text": "event"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "handler"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Handler"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "E"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Handler"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "E"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 21
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                },
                {
                  "parameterName": "handler",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 16
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "E",
                  "constraintTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "on"
            },
            {
              "kind": "Property",
              "canonicalReference": "(onCommunicationFailed:instance)",
              "docComment": "/**\n * A uni-cast event handler for the {@link CommunicationFailed} event.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "onCommunicationFailed"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Handler"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CommunicationFailed"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "onCommunicationFailed",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "(term:instance,0)",
              "docComment": "/**\n * Used internally. Do not call this method.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "term"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "handle"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "AuthenticationHandle"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "handle",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "term"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "implementsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 8
            }
          ]
        }
      ]
    }
  ]
}
