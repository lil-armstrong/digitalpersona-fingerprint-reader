{"version":3,"file":"index.umd.js","sources":["../es6/common/events.js","../es6/devices/events.js","../es6/devices/cards/cards.js","../es6/devices/cards/events.js","../es6/private/eventSource.js","../es6/devices/websdk/messages.js","../es6/devices/websdk/channel.js","../es6/devices/websdk/command.js","../es6/devices/cards/messages.js","../es6/devices/cards/reader.js","../es6/devices/fingerprints/device.js","../es6/devices/fingerprints/sample.js","../es6/devices/fingerprints/events.js","../es6/devices/fingerprints/messages.js","../es6/devices/fingerprints/reader.js","../es6/devices/iwa/messages.js","../es6/devices/iwa/device.js"],"sourcesContent":["/**\r\n * A base class for DigitalPersona events.\r\n */\r\nexport class Event {\r\n    constructor(type) {\r\n        this.type = type;\r\n    }\r\n}\r\n/**\r\n * An event signaling a problem with a device channel communication.\r\n */\r\nexport class CommunicationFailed extends Event {\r\n    constructor() {\r\n        super(\"CommunicationFailed\");\r\n    }\r\n}\r\n//# sourceMappingURL=events.js.map","import { Event } from '../common';\r\n/** A base class for device events.  */\r\nexport class DeviceEvent extends Event {\r\n    /** Constructs a new event.\r\n     * @param type - an event type\r\n     * @param deviceId - a device ID.\r\n     */\r\n    constructor(type, deviceId) {\r\n        super(type);\r\n        this.deviceId = deviceId;\r\n    }\r\n}\r\n/** An event signaling that a device was connected. */\r\nexport class DeviceConnected extends DeviceEvent {\r\n    /** Constructs a new event.\r\n     * @param deviceId - a device ID.\r\n     */\r\n    constructor(deviceId) {\r\n        super(\"DeviceConnected\", deviceId);\r\n    }\r\n}\r\n/** An event signaling that a device was disconnected. */\r\nexport class DeviceDisconnected extends DeviceEvent {\r\n    /** Constructs a new event.\r\n     * @param deviceId - a device ID.\r\n     */\r\n    constructor(deviceId) {\r\n        super(\"DeviceDisconnected\", deviceId);\r\n    }\r\n}\r\n//# sourceMappingURL=events.js.map","/** Enumerates supported card types. */\r\nexport var CardType;\r\n(function (CardType) {\r\n    /** A smartcard. */\r\n    CardType[CardType[\"Contact\"] = 1] = \"Contact\";\r\n    /** A contactless card. */\r\n    CardType[CardType[\"Contactless\"] = 2] = \"Contactless\";\r\n    /** A proximity card. */\r\n    CardType[CardType[\"Proximity\"] = 4] = \"Proximity\";\r\n})(CardType || (CardType = {}));\r\n/** Bitwise flags for attributes supported by a card. */\r\nexport var CardAttributes;\r\n(function (CardAttributes) {\r\n    /** The card supports PIN code. */\r\n    CardAttributes[CardAttributes[\"SupportsPIN\"] = 1] = \"SupportsPIN\";\r\n    /** The card supports UID. */\r\n    CardAttributes[CardAttributes[\"SupportsUID\"] = 2] = \"SupportsUID\";\r\n    /** The card supports PKI. */\r\n    CardAttributes[CardAttributes[\"IsPKI\"] = 65536] = \"IsPKI\";\r\n    /** The card supports PIV. */\r\n    CardAttributes[CardAttributes[\"IsPIV\"] = 131072] = \"IsPIV\";\r\n    /** The card is read-only. */\r\n    CardAttributes[CardAttributes[\"IsReadOnly\"] = 2147483648] = \"IsReadOnly\";\r\n})(CardAttributes || (CardAttributes = {}));\r\n//# sourceMappingURL=cards.js.map","import { DeviceEvent } from '../events';\r\n/**\r\n * An event signaling that a card was presented (inserted or touched) to a card reader.\r\n */\r\nexport class CardInserted extends DeviceEvent {\r\n    /** Contructs a new event object.\r\n     * @param reader - a name of a card reader where the card was presented.\r\n     * @param card - a name of a card presented.\r\n     */\r\n    constructor(reader, card) {\r\n        super(\"CardInserted\", reader);\r\n        this.cardId = card;\r\n    }\r\n}\r\n/** An event signaling that a card was removed from a card reader. */\r\nexport class CardRemoved extends DeviceEvent {\r\n    /** Contructs a new event object.\r\n     * @param reader - a name of a card reader where the card was presented.\r\n     * @param card - a name of a card presented.\r\n     */\r\n    constructor(reader, card) {\r\n        super(\"CardRemoved\", reader);\r\n        this.cardId = card;\r\n    }\r\n}\r\n//# sourceMappingURL=events.js.map","/**@internal\r\n *\r\n */\r\nexport class MultiCastEventSource {\r\n    constructor() {\r\n        this.handlers = {};\r\n    }\r\n    _on(event, handler) {\r\n        this.handlers[event] = this.handlers[event] || [];\r\n        this.handlers[event].push(handler);\r\n        return handler;\r\n    }\r\n    _off(event, handler) {\r\n        if (event) {\r\n            const hh = this.handlers[event];\r\n            if (hh) {\r\n                if (handler)\r\n                    this.handlers[event] = hh.filter(h => h !== handler);\r\n                else\r\n                    delete this.handlers[event];\r\n            }\r\n        }\r\n        else\r\n            this.handlers = {};\r\n        return this;\r\n    }\r\n    emit(event) {\r\n        if (!event)\r\n            return;\r\n        const eventName = event.type;\r\n        const unicast = this[\"on\" + eventName];\r\n        if (unicast)\r\n            this.invoke(unicast, event);\r\n        const multicast = this.handlers[eventName];\r\n        if (multicast)\r\n            multicast.forEach(h => this.invoke(h, event));\r\n    }\r\n    invoke(handler, event) {\r\n        try {\r\n            handler(event);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=eventSource.js.map","/**@internal\r\n *\r\n */\r\nexport var MessageType;\r\n(function (MessageType) {\r\n    MessageType[MessageType[\"Response\"] = 0] = \"Response\";\r\n    MessageType[MessageType[\"Notification\"] = 1] = \"Notification\";\r\n})(MessageType || (MessageType = {}));\r\n//# sourceMappingURL=messages.js.map","import { Base64Url, Utf8 } from '@digitalpersona/core';\r\nimport { MessageType } from './messages';\r\nimport 'WebSdk';\r\n/**@internal\r\n *\r\n */\r\nexport class Channel {\r\n    constructor(channelName, options) {\r\n        this.pending = [];\r\n        this.webChannel = new WebSdk.WebChannelClient(channelName, options);\r\n        this.webChannel.onConnectionSucceed = this.onConnectionSucceed.bind(this);\r\n        this.webChannel.onConnectionFailed = this.onConnectionFailed.bind(this);\r\n        this.webChannel.onDataReceivedTxt = this.onDataReceivedTxt.bind(this);\r\n    }\r\n    send(request, timeout) {\r\n        const deferred = new Promise((resolve, reject) => {\r\n            request.resolve = resolve;\r\n            request.reject = reject;\r\n            if (timeout) {\r\n                request.timer = window.setTimeout(() => {\r\n                    if (request.timer)\r\n                        try {\r\n                            request.reject(new Error(\"Timeout\"));\r\n                        }\r\n                        catch (e) { }\r\n                }, timeout);\r\n            }\r\n        });\r\n        this.pending.push(request);\r\n        if (this.webChannel.isConnected())\r\n            this.processRequestQueue();\r\n        else\r\n            this.webChannel.connect();\r\n        return deferred;\r\n    }\r\n    onConnectionSucceed() {\r\n        this.processRequestQueue();\r\n    }\r\n    onConnectionFailed() {\r\n        this.pending.forEach(r => r.reject(new Error(\"Communication failure.\")));\r\n        this.pending = [];\r\n        if (this.onCommunicationError)\r\n            try {\r\n                this.onCommunicationError();\r\n            }\r\n            catch (e) { }\r\n    }\r\n    onDataReceivedTxt(data) {\r\n        const message = JSON.parse(Utf8.fromBase64Url(data));\r\n        if (message.Type === MessageType.Response) {\r\n            const response = JSON.parse(Utf8.fromBase64Url(message.Data || \"\"));\r\n            const request = this.findRequest(response);\r\n            if (request !== null) {\r\n                if (request.timer) {\r\n                    window.clearTimeout(request.timer);\r\n                    delete request.timer;\r\n                }\r\n                const hr = (response.Result >>> 0);\r\n                if (hr > 0x7FFFFFFF)\r\n                    request.reject(new Error(`0x${hr.toString(16)}`));\r\n                else\r\n                    request.resolve(response);\r\n            }\r\n            else\r\n                console.log(`Orphaned response: ${message.Type}`);\r\n        }\r\n        else if (message.Type === MessageType.Notification) {\r\n            const notification = JSON.parse(Utf8.fromBase64Url(message.Data || \"\"));\r\n            if (this.onNotification)\r\n                try {\r\n                    this.onNotification(notification);\r\n                }\r\n                catch (e) { }\r\n        }\r\n        else\r\n            console.log(`Unknown message type: ${message.Type}`);\r\n    }\r\n    processRequestQueue() {\r\n        this.pending.forEach((req, i, items) => {\r\n            if (!req.sent) {\r\n                this.webChannel.sendDataTxt(Base64Url.fromJSON(req.command));\r\n                items[i].sent = true;\r\n            }\r\n        });\r\n    }\r\n    findRequest(response) {\r\n        for (let i = 0; i < this.pending.length; i++) {\r\n            const request = this.pending[i];\r\n            if (request.sent && (request.command.Method === response.Method)) {\r\n                this.pending.splice(i, 1);\r\n                return request;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\n//# sourceMappingURL=channel.js.map","/**@internal\r\n *\r\n */\r\nexport class Command {\r\n    constructor(method, parameters) {\r\n        this.Method = method;\r\n        this.Parameters = parameters;\r\n    }\r\n}\r\n/**@internal\r\n *\r\n */\r\nexport class Request {\r\n    constructor(command) {\r\n        this.command = command;\r\n        this.sent = false;\r\n    }\r\n}\r\n//# sourceMappingURL=command.js.map","/**@internal\r\n *\r\n */\r\nexport var Method;\r\n(function (Method) {\r\n    Method[Method[\"EnumerateReaders\"] = 1] = \"EnumerateReaders\";\r\n    Method[Method[\"EnumerateCards\"] = 2] = \"EnumerateCards\";\r\n    Method[Method[\"GetCardInfo\"] = 3] = \"GetCardInfo\";\r\n    Method[Method[\"GetCardUID\"] = 4] = \"GetCardUID\";\r\n    Method[Method[\"GetDPCardAuthData\"] = 5] = \"GetDPCardAuthData\";\r\n    Method[Method[\"GetDPCardEnrollData\"] = 6] = \"GetDPCardEnrollData\";\r\n    Method[Method[\"Subscribe\"] = 100] = \"Subscribe\";\r\n    Method[Method[\"Unsubscribe\"] = 101] = \"Unsubscribe\";\r\n})(Method || (Method = {}));\r\n/**@internal\r\n *\r\n */\r\nexport var NotificationType;\r\n(function (NotificationType) {\r\n    NotificationType[NotificationType[\"ReaderConnected\"] = 1] = \"ReaderConnected\";\r\n    NotificationType[NotificationType[\"ReaderDisconnected\"] = 2] = \"ReaderDisconnected\";\r\n    NotificationType[NotificationType[\"CardInserted\"] = 3] = \"CardInserted\";\r\n    NotificationType[NotificationType[\"CardRemoved\"] = 4] = \"CardRemoved\";\r\n})(NotificationType || (NotificationType = {}));\r\n//# sourceMappingURL=messages.js.map","import { MultiCastEventSource } from '../../private';\r\nimport { Command, Request, Channel } from '../websdk';\r\nimport { CommunicationFailed } from '../../common';\r\nimport { DeviceConnected, DeviceDisconnected } from '../events';\r\nimport { CardInserted, CardRemoved } from './events';\r\nimport { Method, NotificationType } from \"./messages\";\r\nimport { Utf8, Base64Url, Base64, Utf16 } from '@digitalpersona/core';\r\n/**\r\n * A card reader API class.\r\n * An instance of this class allows to subscribe to card reader events and read card data.\r\n * The card reader API uses DigitalPersona WebSDK to communicate with card reader drivers and hardware.\r\n */\r\nexport class CardsReader extends MultiCastEventSource {\r\n    /**\r\n     * Constructs a new card reader API object.\r\n     * @param options - options for the `WebSdk` channel.\r\n     */\r\n    constructor(options) {\r\n        super();\r\n        this.channel = new Channel(\"smartcards\", options);\r\n        this.channel.onCommunicationError = this.onConnectionFailed.bind(this);\r\n        this.channel.onNotification = this.processNotification.bind(this);\r\n    }\r\n    /**\r\n     * Adds an event handler for the event.\r\n     * This is a multicast subscription, i.e. many handlers can be registered at once.\r\n     *\r\n     * @param event - a name of the event to subscribe, e.g. \"CardInserted\"\r\n     * @param handler - an event handler.\r\n     * @returns an event handler reference.\r\n     * Store the reference and pass it to the {@link CardsReader.off} to unsubscribe from the event.\r\n     *\r\n     * @example\r\n     * ```\r\n     * class CardComponent\r\n     * {\r\n     *     private reader: CardsReader;\r\n     *\r\n     *     private onCardInserted = (event: CardInserted) => { ... }\r\n     *     private onCardRemoved = (event: CardRemoved) => { ... }\r\n     *     ...\r\n     *\r\n     *     public async $onInit() {\r\n     *         this.reader = new CardsReader();\r\n     *         this.reader.on(\"CardInserted\", this.onCardInserted);\r\n     *         this.reader.on(\"CardRemoved\", this.onCardRemoved);\r\n     *         ...\r\n     *         await this.cardReader.subscribe()\r\n     *     }\r\n     *     public async $onDestroy() {\r\n     *         await this.cardReader.unsubscribe();\r\n     *         this.reader.off(\"CardInserted\", this.onCardInserted);\r\n     *         this.reader.off(\"CardRemoved\", this.onCardRemoved);\r\n     *         ...\r\n     *         // alternatively, call this.reader.off() to unsubscribe from all events at once.\r\n     *         delete this.reader;\r\n     *     }\r\n     * }\r\n     * ```\r\n     */\r\n    on(event, handler) { return this._on(event, handler); }\r\n    /** Deletes an event handler for the event.\r\n     * @param event - a name of the event to subscribe.\r\n     * @param handler - an event handler added with the {@link CardsReader.on} method.\r\n     * @example See example in {@link CardsReader.on}\r\n     */\r\n    off(event, handler) { return this._off(event, handler); }\r\n    /** Lists all connected card readers.\r\n     * @returns a promise to return a list of card reader names.\r\n     */\r\n    enumerateReaders() {\r\n        return this.channel.send(new Request(new Command(Method.EnumerateReaders)))\r\n            .then(response => {\r\n            const list = JSON.parse(Utf8.fromBase64Url(response.Data || \"{}\"));\r\n            return JSON.parse(list.Readers || \"[]\");\r\n        });\r\n    }\r\n    /** Lists all inserted cards.\r\n     * @returns a promise to return a list of card information for connected cards.\r\n     */\r\n    enumerateCards() {\r\n        return this.channel.send(new Request(new Command(Method.EnumerateCards)))\r\n            .then(response => {\r\n            const list = JSON.parse(Utf8.fromBase64Url(response.Data || \"{}\"));\r\n            const cards = JSON.parse(list.Cards || \"[]\");\r\n            return cards.map(s => JSON.parse(Utf16.fromBase64Url(s)));\r\n        });\r\n    }\r\n    /** Reads card data from a specific card.\r\n     * @param reader - a name of a card reader where the card was presented.\r\n     * @returns a promise to return a card information.\r\n     * The promise can be fulfilled but return `null` if the card has no information.\r\n     * The promise will be rejected if a card is not found or in case of a reading error.\r\n     */\r\n    getCardInfo(reader) {\r\n        return this.channel.send(new Request(new Command(Method.GetCardInfo, Base64Url.fromJSON({ Reader: reader }))))\r\n            .then(response => {\r\n            const cardInfo = JSON.parse(Utf8.fromBase64Url(response.Data || \"null\"));\r\n            return cardInfo;\r\n        });\r\n    }\r\n    /** Reads a card unique identifier.\r\n     * @param reader - a name of a card reader where the card was presented.\r\n     * @returns a promise to return a card identifier.\r\n     */\r\n    getCardUid(reader) {\r\n        return this.channel.send(new Request(new Command(Method.GetCardUID, Base64Url.fromJSON({ Reader: reader }))))\r\n            .then(response => {\r\n            const data = Base64.fromBase64Url(response.Data || \"\");\r\n            return data;\r\n        });\r\n    }\r\n    /** Reads card authentication data.\r\n     * @param reader - a name of a card reader where the card was presented.\r\n     * @param pin - an PIN code (for cards requiring a PIN).\r\n     * @returns a promise to return card authentication data.\r\n     * The card data is an opaque encoded string which should be sent to the server as is.\r\n     */\r\n    getCardAuthData(reader, pin) {\r\n        return this.channel.send(new Request(new Command(Method.GetDPCardAuthData, Base64Url.fromJSON({ Reader: reader, PIN: pin || \"\" }))))\r\n            .then(response => {\r\n            const data = JSON.parse(Utf8.fromBase64Url(response.Data || \"\"));\r\n            return data;\r\n        });\r\n    }\r\n    /** Reads card enrollment data.\r\n     * @param reader - a name of a card reader where the card was presented.\r\n     * @param pin - an PIN code (for cards requiring a PIN).\r\n     * @returns a promise to return a card enrollment data.\r\n     * The card data is an opaque encoded string which should be sent to the server as is.\r\n     */\r\n    getCardEnrollData(reader, pin) {\r\n        return this.channel.send(new Request(new Command(Method.GetDPCardEnrollData, Base64Url.fromJSON({ Reader: reader, PIN: pin || \"\" }))))\r\n            .then(response => {\r\n            const data = JSON.parse(Utf8.fromBase64Url(response.Data || \"\"));\r\n            return data;\r\n        });\r\n    }\r\n    /** Starts listening for card reader events.\r\n     * @param reader - an optional name of a card reader to listen.\r\n     * If no name is provided, the API will start listening all card readers.\r\n     */\r\n    subscribe(reader) {\r\n        return this.channel.send(new Request(new Command(Method.Subscribe, reader ? Base64Url.fromJSON({ Reader: reader }) : \"\")))\r\n            .then();\r\n    }\r\n    /** Stop listening for card reader events.\r\n     * @param reader - an optional name of a card reader to stop listening.\r\n     * If no name is provided, the API will stop listening all card readers.\r\n     */\r\n    unsubscribe(reader) {\r\n        return this.channel.send(new Request(new Command(Method.Unsubscribe, reader ? Base64Url.fromJSON({ Reader: reader }) : \"\")))\r\n            .then();\r\n    }\r\n    /** Converts WebSdk connectivity error to a card API event. */\r\n    onConnectionFailed() {\r\n        this.emit(new CommunicationFailed());\r\n    }\r\n    /** Converts WebSdk notification to card API events. */\r\n    processNotification(notification) {\r\n        switch (notification.Event) {\r\n            case NotificationType.ReaderConnected:\r\n                return this.emit(new DeviceConnected(notification.Reader));\r\n            case NotificationType.ReaderDisconnected:\r\n                return this.emit(new DeviceDisconnected(notification.Reader));\r\n            case NotificationType.CardInserted:\r\n                return this.emit(new CardInserted(notification.Reader, notification.Card));\r\n            case NotificationType.CardRemoved:\r\n                return this.emit(new CardRemoved(notification.Reader, notification.Card));\r\n            default:\r\n                console.log(`Unknown notification: ${notification.Event}`);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=reader.js.map","/**\r\n * Fingerprint device types.\r\n */\r\nexport var DeviceUidType;\r\n(function (DeviceUidType) {\r\n    /** The fingerprint device is embedded and cannot be removed. */\r\n    DeviceUidType[DeviceUidType[\"Persistent\"] = 0] = \"Persistent\";\r\n    /** The fingerprint device can be removed. */\r\n    DeviceUidType[DeviceUidType[\"Volatile\"] = 1] = \"Volatile\";\r\n})(DeviceUidType || (DeviceUidType = {}));\r\n/**\r\n * Fingerprint device modalities (how users should use they fingers to make a scan).\r\n */\r\nexport var DeviceModality;\r\n(function (DeviceModality) {\r\n    /** The fingerprint modality is not known. */\r\n    DeviceModality[DeviceModality[\"Unknown\"] = 0] = \"Unknown\";\r\n    /** Users must swipe a single finger.  */\r\n    DeviceModality[DeviceModality[\"Swipe\"] = 1] = \"Swipe\";\r\n    /** Users must place a single finger over a scaning area. */\r\n    DeviceModality[DeviceModality[\"Area\"] = 2] = \"Area\";\r\n    /** Users must place multiple fingers over a scaning area. */\r\n    DeviceModality[DeviceModality[\"AreaMultifinger\"] = 3] = \"AreaMultifinger\";\r\n})(DeviceModality || (DeviceModality = {}));\r\n/** A fingerprint reader technology (a method of scanning)  */\r\nexport var DeviceTechnology;\r\n(function (DeviceTechnology) {\r\n    /** The method of scanning is unknown. */\r\n    DeviceTechnology[DeviceTechnology[\"Unknown\"] = 0] = \"Unknown\";\r\n    /** The reader uses an optical image of a finger skin. */\r\n    DeviceTechnology[DeviceTechnology[\"Optical\"] = 1] = \"Optical\";\r\n    /** The reader uses changes of electrical capacitance of a finger skin. */\r\n    DeviceTechnology[DeviceTechnology[\"Capacitive\"] = 2] = \"Capacitive\";\r\n    /** The reader uses a thermal image of a finger.  */\r\n    DeviceTechnology[DeviceTechnology[\"Thermal\"] = 3] = \"Thermal\";\r\n    /** The reader uses changes of a pressure under the finger. */\r\n    DeviceTechnology[DeviceTechnology[\"Pressure\"] = 4] = \"Pressure\";\r\n})(DeviceTechnology || (DeviceTechnology = {}));\r\n//# sourceMappingURL=device.js.map","/**\r\n * A fingerprint sample format.\r\n */\r\nexport var SampleFormat;\r\n(function (SampleFormat) {\r\n    /** A raw fingerprint image (bitmap). */\r\n    SampleFormat[SampleFormat[\"Raw\"] = 1] = \"Raw\";\r\n    /** A fingerprint image encoded into an intermediate format. */\r\n    SampleFormat[SampleFormat[\"Intermediate\"] = 2] = \"Intermediate\";\r\n    /** A compressed fingerprint image (e.q. JPEG2000, WSQ). */\r\n    SampleFormat[SampleFormat[\"Compressed\"] = 3] = \"Compressed\";\r\n    /** A Portable Network Graphics (PNG) format. */\r\n    SampleFormat[SampleFormat[\"PngImage\"] = 5] = \"PngImage\";\r\n})(SampleFormat || (SampleFormat = {}));\r\n/**\r\n * A figerprint image quality.\r\n */\r\nexport var QualityCode;\r\n(function (QualityCode) {\r\n    QualityCode[QualityCode[\"Good\"] = 0] = \"Good\";\r\n    QualityCode[QualityCode[\"NoImage\"] = 1] = \"NoImage\";\r\n    QualityCode[QualityCode[\"TooLight\"] = 2] = \"TooLight\";\r\n    QualityCode[QualityCode[\"TooDark\"] = 3] = \"TooDark\";\r\n    QualityCode[QualityCode[\"TooNoisy\"] = 4] = \"TooNoisy\";\r\n    QualityCode[QualityCode[\"LowContrast\"] = 5] = \"LowContrast\";\r\n    QualityCode[QualityCode[\"NotEnoughFeatures\"] = 6] = \"NotEnoughFeatures\";\r\n    QualityCode[QualityCode[\"NotCentered\"] = 7] = \"NotCentered\";\r\n    QualityCode[QualityCode[\"NotAFinger\"] = 8] = \"NotAFinger\";\r\n    QualityCode[QualityCode[\"TooHigh\"] = 9] = \"TooHigh\";\r\n    QualityCode[QualityCode[\"TooLow\"] = 10] = \"TooLow\";\r\n    QualityCode[QualityCode[\"TooLeft\"] = 11] = \"TooLeft\";\r\n    QualityCode[QualityCode[\"TooRight\"] = 12] = \"TooRight\";\r\n    QualityCode[QualityCode[\"TooStrange\"] = 13] = \"TooStrange\";\r\n    QualityCode[QualityCode[\"TooFast\"] = 14] = \"TooFast\";\r\n    QualityCode[QualityCode[\"TooSkewed\"] = 15] = \"TooSkewed\";\r\n    QualityCode[QualityCode[\"TooShort\"] = 16] = \"TooShort\";\r\n    QualityCode[QualityCode[\"TooSlow\"] = 17] = \"TooSlow\";\r\n    QualityCode[QualityCode[\"ReverseMotion\"] = 18] = \"ReverseMotion\";\r\n    QualityCode[QualityCode[\"PressureTooHard\"] = 19] = \"PressureTooHard\";\r\n    QualityCode[QualityCode[\"PressureTooLight\"] = 20] = \"PressureTooLight\";\r\n    QualityCode[QualityCode[\"WetFinger\"] = 21] = \"WetFinger\";\r\n    QualityCode[QualityCode[\"FakeFinger\"] = 22] = \"FakeFinger\";\r\n    QualityCode[QualityCode[\"TooSmall\"] = 23] = \"TooSmall\";\r\n    QualityCode[QualityCode[\"RotatedTooMuch\"] = 24] = \"RotatedTooMuch\";\r\n})(QualityCode || (QualityCode = {}));\r\n//# sourceMappingURL=sample.js.map","import { DeviceEvent } from '../events';\r\n/** An event signaling that a new fingerprint sample (or samples) was acquired during a scan. */\r\nexport class SamplesAcquired extends DeviceEvent {\r\n    /** Constructs a new event object.\r\n     * @param deviceUid - a fingerprint reader ID.\r\n     * @param sampleFormat - a fingerprint sample format.\r\n     * @param sampleData - raw sample data received with WebSdk notifiation.\r\n     */\r\n    constructor(deviceUid, sampleFormat, sampleData) {\r\n        super(\"SamplesAcquired\", deviceUid);\r\n        this.sampleFormat = sampleFormat;\r\n        this.samples = JSON.parse(sampleData);\r\n    }\r\n}\r\n/** An event reporting a quality of a fingerprint scan. */\r\nexport class QualityReported extends DeviceEvent {\r\n    /** Constructs a new event object.\r\n     * @param deviceUid - a fingerprint reader ID.\r\n     * @param quality - a fingerprint scan quality.\r\n     */\r\n    constructor(deviceUid, quality) {\r\n        super(\"QualityReported\", deviceUid);\r\n        this.quality = quality;\r\n    }\r\n}\r\n/** An event reporting a fingerprint reader error.  */\r\nexport class ErrorOccurred extends DeviceEvent {\r\n    /** Constructs a new event object.\r\n     * @param deviceUid - a fingeprint reader ID.\r\n     * @param error - an error code.\r\n     */\r\n    constructor(deviceUid, error) {\r\n        super(\"ErrorOccurred\", deviceUid);\r\n        this.error = error;\r\n    }\r\n}\r\n/** An event signaling that a fingerprint reader is ready and waiting to scan a finger. */\r\nexport class AcquisitionStarted extends DeviceEvent {\r\n    /** Constructs a new event object.\r\n     * @param deviceUid - a fingeprint reader ID.\r\n     */\r\n    constructor(deviceUid) {\r\n        super(\"AcquisitionStarted\", deviceUid);\r\n    }\r\n}\r\n/** An event signaling that a fingerprint reader has stopped waiting for a finger scan. */\r\nexport class AcquisitionStopped extends DeviceEvent {\r\n    /** Constructs a new event object.\r\n     * @param deviceUid - a fingeprint reader ID.\r\n     */\r\n    constructor(deviceUid) {\r\n        super(\"AcquisitionStopped\", deviceUid);\r\n    }\r\n}\r\n//# sourceMappingURL=events.js.map","/**@internal\r\n *\r\n */\r\nexport var Method;\r\n(function (Method) {\r\n    Method[Method[\"EnumerateDevices\"] = 1] = \"EnumerateDevices\";\r\n    Method[Method[\"GetDeviceInfo\"] = 2] = \"GetDeviceInfo\";\r\n    Method[Method[\"StartAcquisition\"] = 3] = \"StartAcquisition\";\r\n    Method[Method[\"StopAcquisition\"] = 4] = \"StopAcquisition\";\r\n})(Method || (Method = {}));\r\n/**@internal\r\n *\r\n */\r\nexport var NotificationType;\r\n(function (NotificationType) {\r\n    NotificationType[NotificationType[\"Completed\"] = 0] = \"Completed\";\r\n    NotificationType[NotificationType[\"Error\"] = 1] = \"Error\";\r\n    NotificationType[NotificationType[\"Disconnected\"] = 2] = \"Disconnected\";\r\n    NotificationType[NotificationType[\"Connected\"] = 3] = \"Connected\";\r\n    NotificationType[NotificationType[\"Quality\"] = 4] = \"Quality\";\r\n    NotificationType[NotificationType[\"Stopped\"] = 10] = \"Stopped\";\r\n    NotificationType[NotificationType[\"Started\"] = 11] = \"Started\";\r\n})(NotificationType || (NotificationType = {}));\r\n//# sourceMappingURL=messages.js.map","import { Base64Url, Utf8 } from '@digitalpersona/core';\r\nimport { MultiCastEventSource } from '../../private';\r\nimport { Command, Request, Channel } from '../websdk';\r\nimport { CommunicationFailed } from '../../common';\r\nimport { DeviceConnected, DeviceDisconnected } from '../events';\r\nimport { ErrorOccurred, SamplesAcquired, QualityReported, AcquisitionStarted, AcquisitionStopped, } from './events';\r\nimport { Method, NotificationType } from './messages';\r\n/**\r\n * A fingerprint reader API.\r\n * An instance of this class allows to subscribe to finerprint reader events and read fingerprint data.\r\n * The fingerprint reader API uses DigitalPersona WebSDK to communicate with fingerprint reader drivers and hardware.\r\n */\r\nexport class FingerprintReader extends MultiCastEventSource {\r\n    /**\r\n     * Constructs a new fingerprint reader API object.\r\n     * @param options - options for the `WebSdk` channel.\r\n     */\r\n    constructor(options) {\r\n        super();\r\n        this.options = options;\r\n        this.channel = new Channel(\"fingerprints\", this.options);\r\n        this.channel.onCommunicationError = this.onConnectionFailed.bind(this);\r\n        this.channel.onNotification = this.processNotification.bind(this);\r\n    }\r\n    /**\r\n     * Adds an event handler for the event.\r\n     * This is a multicast subscription, i.e. many handlers can be registered at once.\r\n     *\r\n     * @param event - a name of the event to subscribe, e.g. \"SampleAcquired\"\r\n     * @param handler - an event handler.\r\n     * @returns an event handler reference.\r\n     * Store the reference and pass it to the {@link FingerprintReader.off} to unsubscribe from the event.\r\n     *\r\n     * @example\r\n     * ```\r\n     * class FingerprintComponent\r\n     * {\r\n     *     private reader: FingerprintReader;\r\n     *\r\n     *     private onDeviceConnected = (event: DeviceConnected) => { ... };\r\n     *     private onDeviceDisconnected = (event: DeviceDisconnected) => { ... };\r\n     *     private onSamplesAcquired = (event: SampleAquired) => { ... };\r\n     *     ...\r\n     *\r\n     *     public async $onInit() {\r\n     *         this.reader = new FingerprintReader();\r\n     *         this.reader.on(\"DeviceConnected\", onDeviceConnected);\r\n     *         this.reader.on(\"DeviceDisconnected\", onDeviceDisconnected);\r\n     *         this.reader.on(\"SamplesAcquired\", onSamplesAcquired);\r\n     *         ...\r\n     *         await this.fingerprintReader.startAcquisition(SampleFormat.Intermediate);\r\n     *     }\r\n     *     public async $onDestroy() {\r\n     *         await this.fingerprintReader.stopAcquisition();\r\n     *         this.reader.off(\"DeviceConnected\", onDeviceConnected);\r\n     *         this.reader.off(\"DeviceDisconnected\", onDeviceDisconnected);\r\n     *         this.reader.off(\"SamplesAcquired\", onSamplesAcquired);\r\n     *         ...\r\n     *         // alternatively, call this.reader.off() to unsubscribe from all events at once.\r\n     *         delete this.reader;\r\n     *     }\r\n     * }\r\n     * ```\r\n     */\r\n    on(event, handler) { return this._on(event, handler); }\r\n    /** Deletes an event handler for the event.\r\n     * @param event - a name of the event to subscribe.\r\n     * @param handler - an event handler added with the {@link FingerprintReader.on} method.\r\n     */\r\n    off(event, handler) { return this._off(event, handler); }\r\n    /** Lists all connected fingerprint readers.\r\n     * @returns a promise to return a list of fingerprint reader names.\r\n     */\r\n    enumerateDevices() {\r\n        return this.channel.send(new Request(new Command(Method.EnumerateDevices)))\r\n            .then(response => {\r\n            if (!response)\r\n                return [];\r\n            const deviceList = JSON.parse(Utf8.fromBase64Url(response.Data || \"{}\"));\r\n            return JSON.parse(deviceList.DeviceIDs || \"[]\");\r\n        });\r\n    }\r\n    /** Reads a fingerprint reader device information.\r\n     * @param deviceUid - a fingerprint reader ID.\r\n     * @returns a promise to return a device information.\r\n     * The promise can be fulfilled but return `null` if the reader provides no information.\r\n     * The promise will be rejected if a reader is not found or in case of a reading error.\r\n     */\r\n    getDeviceInfo(deviceUid) {\r\n        return this.channel.send(new Request(new Command(Method.GetDeviceInfo, Base64Url.fromJSON({ DeviceID: deviceUid }))))\r\n            .then(response => {\r\n            const deviceInfo = JSON.parse(Utf8.fromBase64Url(response.Data || \"null\"));\r\n            return deviceInfo;\r\n        });\r\n    }\r\n    /** Activate a fingerprint acquisition mode.\r\n     * This call will produce a {@link AcquisitionStarted} event if activation was successful.\r\n     * After that the reader will wait for a finger placed on the reader.\r\n     * When a finger is placed, a {@link QualityReported} event will report a scan quality,\r\n     * and a {@link SamplesAcquired} event will return a scanned sample in case of a successful scan.\r\n     */\r\n    startAcquisition(sampleFormat, deviceUid) {\r\n        return this.channel.send(new Request(new Command(Method.StartAcquisition, Base64Url.fromJSON({\r\n            DeviceID: deviceUid ? deviceUid : \"00000000-0000-0000-0000-000000000000\",\r\n            SampleType: sampleFormat,\r\n        }))))\r\n            .then();\r\n    }\r\n    /** Deactivates a fingerprint acquisition mode.\r\n     * This call will produce a {@link AcquisitionStopped} event if deactivation was successful.\r\n     * After that the reader will stop waiting for a finger.\r\n     */\r\n    stopAcquisition(deviceUid) {\r\n        return this.channel.send(new Request(new Command(Method.StopAcquisition, Base64Url.fromJSON({\r\n            DeviceID: deviceUid ? deviceUid : \"00000000-0000-0000-0000-000000000000\",\r\n        }))))\r\n            .then();\r\n    }\r\n    /** Converts WebSdk connectivity error to a fingerprint API event. */\r\n    onConnectionFailed() {\r\n        this.emit(new CommunicationFailed());\r\n    }\r\n    /** Converts WebSdk notification to fingerprint API events. */\r\n    processNotification(notification) {\r\n        switch (notification.Event) {\r\n            case NotificationType.Completed:\r\n                const completed = JSON.parse(Utf8.fromBase64Url(notification.Data || \"\"));\r\n                return this.emit(new SamplesAcquired(notification.Device, completed.SampleFormat, completed.Samples));\r\n            case NotificationType.Error:\r\n                const error = JSON.parse(Utf8.fromBase64Url(notification.Data || \"\"));\r\n                return this.emit(new ErrorOccurred(notification.Device, error.uError));\r\n            case NotificationType.Disconnected:\r\n                return this.emit(new DeviceDisconnected(notification.Device));\r\n            case NotificationType.Connected:\r\n                return this.emit(new DeviceConnected(notification.Device));\r\n            case NotificationType.Quality:\r\n                const quality = JSON.parse(Utf8.fromBase64Url(notification.Data || \"\"));\r\n                return this.emit(new QualityReported(notification.Device, quality.Quality));\r\n            case NotificationType.Stopped:\r\n                return this.emit(new AcquisitionStopped(notification.Device));\r\n            case NotificationType.Started:\r\n                return this.emit(new AcquisitionStarted(notification.Device));\r\n            default:\r\n                console.log(`Unknown notification: ${notification.Event}`);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=reader.js.map","/**@internal\r\n *\r\n */\r\nexport var Method;\r\n(function (Method) {\r\n    Method[Method[\"Init\"] = 1] = \"Init\";\r\n    Method[Method[\"Continue\"] = 2] = \"Continue\";\r\n    Method[Method[\"Term\"] = 3] = \"Term\";\r\n    Method[Method[\"Authenticate\"] = 4] = \"Authenticate\";\r\n})(Method || (Method = {}));\r\n/**@internal\r\n *\r\n */\r\nexport var MessageType;\r\n(function (MessageType) {\r\n    MessageType[MessageType[\"Response\"] = 0] = \"Response\";\r\n    MessageType[MessageType[\"Notification\"] = 1] = \"Notification\";\r\n})(MessageType || (MessageType = {}));\r\n//# sourceMappingURL=messages.js.map","import { MultiCastEventSource } from '../../private';\r\nimport { Command, Request, Channel } from '../websdk';\r\nimport { CommunicationFailed } from '../../common';\r\nimport { Method } from './messages';\r\n/**\r\n * Integrated Windows Authentication API.\r\n * An instance of this class allows internet browsers to authenticate in DigitalPersona servers\r\n * using Integrated Windows Authentication.\r\n * The IWA API uses DigitalPersona WebSDK to communicate with Windwows operating system and extract\r\n * Windows account data for authentication.\r\n */\r\nexport class WindowsAuthClient extends MultiCastEventSource {\r\n    /**\r\n     * Constructs a new IWA API object.\r\n     * @param options - options for the `WebSdk` channel.\r\n     */\r\n    constructor(options) {\r\n        super();\r\n        this.channel = new Channel(\"wia\", options);\r\n        this.channel.onCommunicationError = this.onConnectionFailed.bind(this);\r\n    }\r\n    /**\r\n     * Adds an event handler for the event.\r\n     * This is a multicast subscription, i.e. many handlers can be registered at once.\r\n     *\r\n     * @param event - a name of the event to subscribe, e.g. \"CommunicationFailed\"\r\n     * @param handler - an event handler.\r\n     * @returns an event handler reference.\r\n     * Store the reference and pass it to the {@link WindowsAuthClient.off} to unsubscribe from the event.\r\n     *\r\n     * @example\r\n     * ```\r\n     * class IntegratedWindowsAuthComponent\r\n     * {\r\n     *     private client: WindowsAuthClient;\r\n     *\r\n     *     private onCommunicationFailed = (event: CommunicationFailed) => { ... }\r\n     *\r\n     *     public $onInit() {\r\n     *         this.client = new WindowsAuthClient();\r\n     *         this.client.on(\"CommunicationFailed\", this.onCommunicationFailed);\r\n     *     }\r\n     *     public $onDestroy() {\r\n     *         this.client.off(\"CommunicationFailed\", this.onCommunicationFailed);\r\n     *         // alternatively, call this.reader.off() to unsubscribe from all events at once.\r\n     *         delete this.client;\r\n     *     }\r\n     * }\r\n     * ```\r\n     */\r\n    on(event, handler) { return this._on(event, handler); }\r\n    /** Deletes an event handler for the event.\r\n     * @param event - a name of the event to subscribe.\r\n     * @param handler - an event handler added with the {@link WindowsAuthClient.on} method.\r\n     */\r\n    off(event, handler) { return this._off(event, handler); }\r\n    /** Used internally. Do not call this method. */\r\n    init() {\r\n        return this.channel.send(new Request(new Command(Method.Init)), 3000)\r\n            .then(response => {\r\n            const data = JSON.parse(response.Data || \"{}\");\r\n            return { handle: data.Handle, data: data.Data };\r\n        });\r\n    }\r\n    /** Used internally. Do not call this method. */\r\n    continue(handle, data) {\r\n        return this.channel.send(new Request(new Command(Method.Continue, JSON.stringify({ Handle: handle, Data: data }))))\r\n            .then(response => {\r\n            const d = JSON.parse(response.Data || \"{}\");\r\n            return d.Data;\r\n        });\r\n    }\r\n    /** Used internally. Do not call this method. */\r\n    term(handle) {\r\n        return this.channel.send(new Request(new Command(Method.Term, JSON.stringify({ Handle: handle }))))\r\n            .then();\r\n    }\r\n    /** Converts WebSdk connectivity error to an IWA API event. */\r\n    onConnectionFailed() {\r\n        this.emit(new CommunicationFailed());\r\n    }\r\n}\r\n//# sourceMappingURL=device.js.map"],"names":["CardType","CardAttributes","Utf8","Base64Url","Utf16","Base64","DeviceUidType","DeviceModality","DeviceTechnology","SampleFormat","QualityCode","Method","NotificationType","MessageType"],"mappings":"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"}