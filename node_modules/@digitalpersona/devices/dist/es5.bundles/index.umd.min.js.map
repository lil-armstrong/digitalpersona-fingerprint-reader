{"version":3,"file":"index.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../es5/devices/cards/cards.js","../es5/common/events.js","../es5/devices/events.js","../es5/devices/websdk/messages.js","../es5/devices/cards/events.js","../es5/private/eventSource.js","../es5/devices/websdk/channel.js","../es5/devices/cards/messages.js","../es5/devices/websdk/command.js","../es5/devices/fingerprints/device.js","../es5/devices/fingerprints/sample.js","../es5/devices/cards/reader.js","../es5/devices/fingerprints/messages.js","../es5/devices/fingerprints/events.js","../es5/devices/iwa/messages.js","../es5/devices/fingerprints/reader.js","../es5/devices/iwa/device.js"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/** Enumerates supported card types. */\r\nexport var CardType;\r\n(function (CardType) {\r\n    /** A smartcard. */\r\n    CardType[CardType[\"Contact\"] = 1] = \"Contact\";\r\n    /** A contactless card. */\r\n    CardType[CardType[\"Contactless\"] = 2] = \"Contactless\";\r\n    /** A proximity card. */\r\n    CardType[CardType[\"Proximity\"] = 4] = \"Proximity\";\r\n})(CardType || (CardType = {}));\r\n/** Bitwise flags for attributes supported by a card. */\r\nexport var CardAttributes;\r\n(function (CardAttributes) {\r\n    /** The card supports PIN code. */\r\n    CardAttributes[CardAttributes[\"SupportsPIN\"] = 1] = \"SupportsPIN\";\r\n    /** The card supports UID. */\r\n    CardAttributes[CardAttributes[\"SupportsUID\"] = 2] = \"SupportsUID\";\r\n    /** The card supports PKI. */\r\n    CardAttributes[CardAttributes[\"IsPKI\"] = 65536] = \"IsPKI\";\r\n    /** The card supports PIV. */\r\n    CardAttributes[CardAttributes[\"IsPIV\"] = 131072] = \"IsPIV\";\r\n    /** The card is read-only. */\r\n    CardAttributes[CardAttributes[\"IsReadOnly\"] = 2147483648] = \"IsReadOnly\";\r\n})(CardAttributes || (CardAttributes = {}));\r\n//# sourceMappingURL=cards.js.map","import { __extends } from \"tslib\";\r\n/**\r\n * A base class for DigitalPersona events.\r\n */\r\nvar Event = /** @class */ (function () {\r\n    function Event(type) {\r\n        this.type = type;\r\n    }\r\n    return Event;\r\n}());\r\nexport { Event };\r\n/**\r\n * An event signaling a problem with a device channel communication.\r\n */\r\nvar CommunicationFailed = /** @class */ (function (_super) {\r\n    __extends(CommunicationFailed, _super);\r\n    function CommunicationFailed() {\r\n        return _super.call(this, \"CommunicationFailed\") || this;\r\n    }\r\n    return CommunicationFailed;\r\n}(Event));\r\nexport { CommunicationFailed };\r\n//# sourceMappingURL=events.js.map","import { __extends } from \"tslib\";\r\nimport { Event } from '../common';\r\n/** A base class for device events.  */\r\nvar DeviceEvent = /** @class */ (function (_super) {\r\n    __extends(DeviceEvent, _super);\r\n    /** Constructs a new event.\r\n     * @param type - an event type\r\n     * @param deviceId - a device ID.\r\n     */\r\n    function DeviceEvent(type, deviceId) {\r\n        var _this = _super.call(this, type) || this;\r\n        _this.deviceId = deviceId;\r\n        return _this;\r\n    }\r\n    return DeviceEvent;\r\n}(Event));\r\nexport { DeviceEvent };\r\n/** An event signaling that a device was connected. */\r\nvar DeviceConnected = /** @class */ (function (_super) {\r\n    __extends(DeviceConnected, _super);\r\n    /** Constructs a new event.\r\n     * @param deviceId - a device ID.\r\n     */\r\n    function DeviceConnected(deviceId) {\r\n        return _super.call(this, \"DeviceConnected\", deviceId) || this;\r\n    }\r\n    return DeviceConnected;\r\n}(DeviceEvent));\r\nexport { DeviceConnected };\r\n/** An event signaling that a device was disconnected. */\r\nvar DeviceDisconnected = /** @class */ (function (_super) {\r\n    __extends(DeviceDisconnected, _super);\r\n    /** Constructs a new event.\r\n     * @param deviceId - a device ID.\r\n     */\r\n    function DeviceDisconnected(deviceId) {\r\n        return _super.call(this, \"DeviceDisconnected\", deviceId) || this;\r\n    }\r\n    return DeviceDisconnected;\r\n}(DeviceEvent));\r\nexport { DeviceDisconnected };\r\n//# sourceMappingURL=events.js.map","/**@internal\r\n *\r\n */\r\nexport var MessageType;\r\n(function (MessageType) {\r\n    MessageType[MessageType[\"Response\"] = 0] = \"Response\";\r\n    MessageType[MessageType[\"Notification\"] = 1] = \"Notification\";\r\n})(MessageType || (MessageType = {}));\r\n//# sourceMappingURL=messages.js.map","import { __extends } from \"tslib\";\r\nimport { DeviceEvent } from '../events';\r\n/**\r\n * An event signaling that a card was presented (inserted or touched) to a card reader.\r\n */\r\nvar CardInserted = /** @class */ (function (_super) {\r\n    __extends(CardInserted, _super);\r\n    /** Contructs a new event object.\r\n     * @param reader - a name of a card reader where the card was presented.\r\n     * @param card - a name of a card presented.\r\n     */\r\n    function CardInserted(reader, card) {\r\n        var _this = _super.call(this, \"CardInserted\", reader) || this;\r\n        _this.cardId = card;\r\n        return _this;\r\n    }\r\n    return CardInserted;\r\n}(DeviceEvent));\r\nexport { CardInserted };\r\n/** An event signaling that a card was removed from a card reader. */\r\nvar CardRemoved = /** @class */ (function (_super) {\r\n    __extends(CardRemoved, _super);\r\n    /** Contructs a new event object.\r\n     * @param reader - a name of a card reader where the card was presented.\r\n     * @param card - a name of a card presented.\r\n     */\r\n    function CardRemoved(reader, card) {\r\n        var _this = _super.call(this, \"CardRemoved\", reader) || this;\r\n        _this.cardId = card;\r\n        return _this;\r\n    }\r\n    return CardRemoved;\r\n}(DeviceEvent));\r\nexport { CardRemoved };\r\n//# sourceMappingURL=events.js.map","/**@internal\r\n *\r\n */\r\nvar MultiCastEventSource = /** @class */ (function () {\r\n    function MultiCastEventSource() {\r\n        this.handlers = {};\r\n    }\r\n    MultiCastEventSource.prototype._on = function (event, handler) {\r\n        this.handlers[event] = this.handlers[event] || [];\r\n        this.handlers[event].push(handler);\r\n        return handler;\r\n    };\r\n    MultiCastEventSource.prototype._off = function (event, handler) {\r\n        if (event) {\r\n            var hh = this.handlers[event];\r\n            if (hh) {\r\n                if (handler)\r\n                    this.handlers[event] = hh.filter(function (h) { return h !== handler; });\r\n                else\r\n                    delete this.handlers[event];\r\n            }\r\n        }\r\n        else\r\n            this.handlers = {};\r\n        return this;\r\n    };\r\n    MultiCastEventSource.prototype.emit = function (event) {\r\n        var _this = this;\r\n        if (!event)\r\n            return;\r\n        var eventName = event.type;\r\n        var unicast = this[\"on\" + eventName];\r\n        if (unicast)\r\n            this.invoke(unicast, event);\r\n        var multicast = this.handlers[eventName];\r\n        if (multicast)\r\n            multicast.forEach(function (h) { return _this.invoke(h, event); });\r\n    };\r\n    MultiCastEventSource.prototype.invoke = function (handler, event) {\r\n        try {\r\n            handler(event);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n    return MultiCastEventSource;\r\n}());\r\nexport { MultiCastEventSource };\r\n//# sourceMappingURL=eventSource.js.map","import { Base64Url, Utf8 } from '@digitalpersona/core';\r\nimport { MessageType } from './messages';\r\nimport 'WebSdk';\r\n/**@internal\r\n *\r\n */\r\nvar Channel = /** @class */ (function () {\r\n    function Channel(channelName, options) {\r\n        this.pending = [];\r\n        this.webChannel = new WebSdk.WebChannelClient(channelName, options);\r\n        this.webChannel.onConnectionSucceed = this.onConnectionSucceed.bind(this);\r\n        this.webChannel.onConnectionFailed = this.onConnectionFailed.bind(this);\r\n        this.webChannel.onDataReceivedTxt = this.onDataReceivedTxt.bind(this);\r\n    }\r\n    Channel.prototype.send = function (request, timeout) {\r\n        var deferred = new Promise(function (resolve, reject) {\r\n            request.resolve = resolve;\r\n            request.reject = reject;\r\n            if (timeout) {\r\n                request.timer = window.setTimeout(function () {\r\n                    if (request.timer)\r\n                        try {\r\n                            request.reject(new Error(\"Timeout\"));\r\n                        }\r\n                        catch (e) { }\r\n                }, timeout);\r\n            }\r\n        });\r\n        this.pending.push(request);\r\n        if (this.webChannel.isConnected())\r\n            this.processRequestQueue();\r\n        else\r\n            this.webChannel.connect();\r\n        return deferred;\r\n    };\r\n    Channel.prototype.onConnectionSucceed = function () {\r\n        this.processRequestQueue();\r\n    };\r\n    Channel.prototype.onConnectionFailed = function () {\r\n        this.pending.forEach(function (r) { return r.reject(new Error(\"Communication failure.\")); });\r\n        this.pending = [];\r\n        if (this.onCommunicationError)\r\n            try {\r\n                this.onCommunicationError();\r\n            }\r\n            catch (e) { }\r\n    };\r\n    Channel.prototype.onDataReceivedTxt = function (data) {\r\n        var message = JSON.parse(Utf8.fromBase64Url(data));\r\n        if (message.Type === MessageType.Response) {\r\n            var response = JSON.parse(Utf8.fromBase64Url(message.Data || \"\"));\r\n            var request = this.findRequest(response);\r\n            if (request !== null) {\r\n                if (request.timer) {\r\n                    window.clearTimeout(request.timer);\r\n                    delete request.timer;\r\n                }\r\n                var hr = (response.Result >>> 0);\r\n                if (hr > 0x7FFFFFFF)\r\n                    request.reject(new Error(\"0x\" + hr.toString(16)));\r\n                else\r\n                    request.resolve(response);\r\n            }\r\n            else\r\n                console.log(\"Orphaned response: \" + message.Type);\r\n        }\r\n        else if (message.Type === MessageType.Notification) {\r\n            var notification = JSON.parse(Utf8.fromBase64Url(message.Data || \"\"));\r\n            if (this.onNotification)\r\n                try {\r\n                    this.onNotification(notification);\r\n                }\r\n                catch (e) { }\r\n        }\r\n        else\r\n            console.log(\"Unknown message type: \" + message.Type);\r\n    };\r\n    Channel.prototype.processRequestQueue = function () {\r\n        var _this = this;\r\n        this.pending.forEach(function (req, i, items) {\r\n            if (!req.sent) {\r\n                _this.webChannel.sendDataTxt(Base64Url.fromJSON(req.command));\r\n                items[i].sent = true;\r\n            }\r\n        });\r\n    };\r\n    Channel.prototype.findRequest = function (response) {\r\n        for (var i = 0; i < this.pending.length; i++) {\r\n            var request = this.pending[i];\r\n            if (request.sent && (request.command.Method === response.Method)) {\r\n                this.pending.splice(i, 1);\r\n                return request;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    return Channel;\r\n}());\r\nexport { Channel };\r\n//# sourceMappingURL=channel.js.map","/**@internal\r\n *\r\n */\r\nexport var Method;\r\n(function (Method) {\r\n    Method[Method[\"EnumerateReaders\"] = 1] = \"EnumerateReaders\";\r\n    Method[Method[\"EnumerateCards\"] = 2] = \"EnumerateCards\";\r\n    Method[Method[\"GetCardInfo\"] = 3] = \"GetCardInfo\";\r\n    Method[Method[\"GetCardUID\"] = 4] = \"GetCardUID\";\r\n    Method[Method[\"GetDPCardAuthData\"] = 5] = \"GetDPCardAuthData\";\r\n    Method[Method[\"GetDPCardEnrollData\"] = 6] = \"GetDPCardEnrollData\";\r\n    Method[Method[\"Subscribe\"] = 100] = \"Subscribe\";\r\n    Method[Method[\"Unsubscribe\"] = 101] = \"Unsubscribe\";\r\n})(Method || (Method = {}));\r\n/**@internal\r\n *\r\n */\r\nexport var NotificationType;\r\n(function (NotificationType) {\r\n    NotificationType[NotificationType[\"ReaderConnected\"] = 1] = \"ReaderConnected\";\r\n    NotificationType[NotificationType[\"ReaderDisconnected\"] = 2] = \"ReaderDisconnected\";\r\n    NotificationType[NotificationType[\"CardInserted\"] = 3] = \"CardInserted\";\r\n    NotificationType[NotificationType[\"CardRemoved\"] = 4] = \"CardRemoved\";\r\n})(NotificationType || (NotificationType = {}));\r\n//# sourceMappingURL=messages.js.map","/**@internal\r\n *\r\n */\r\nvar Command = /** @class */ (function () {\r\n    function Command(method, parameters) {\r\n        this.Method = method;\r\n        this.Parameters = parameters;\r\n    }\r\n    return Command;\r\n}());\r\nexport { Command };\r\n/**@internal\r\n *\r\n */\r\nvar Request = /** @class */ (function () {\r\n    function Request(command) {\r\n        this.command = command;\r\n        this.sent = false;\r\n    }\r\n    return Request;\r\n}());\r\nexport { Request };\r\n//# sourceMappingURL=command.js.map","/**\r\n * Fingerprint device types.\r\n */\r\nexport var DeviceUidType;\r\n(function (DeviceUidType) {\r\n    /** The fingerprint device is embedded and cannot be removed. */\r\n    DeviceUidType[DeviceUidType[\"Persistent\"] = 0] = \"Persistent\";\r\n    /** The fingerprint device can be removed. */\r\n    DeviceUidType[DeviceUidType[\"Volatile\"] = 1] = \"Volatile\";\r\n})(DeviceUidType || (DeviceUidType = {}));\r\n/**\r\n * Fingerprint device modalities (how users should use they fingers to make a scan).\r\n */\r\nexport var DeviceModality;\r\n(function (DeviceModality) {\r\n    /** The fingerprint modality is not known. */\r\n    DeviceModality[DeviceModality[\"Unknown\"] = 0] = \"Unknown\";\r\n    /** Users must swipe a single finger.  */\r\n    DeviceModality[DeviceModality[\"Swipe\"] = 1] = \"Swipe\";\r\n    /** Users must place a single finger over a scaning area. */\r\n    DeviceModality[DeviceModality[\"Area\"] = 2] = \"Area\";\r\n    /** Users must place multiple fingers over a scaning area. */\r\n    DeviceModality[DeviceModality[\"AreaMultifinger\"] = 3] = \"AreaMultifinger\";\r\n})(DeviceModality || (DeviceModality = {}));\r\n/** A fingerprint reader technology (a method of scanning)  */\r\nexport var DeviceTechnology;\r\n(function (DeviceTechnology) {\r\n    /** The method of scanning is unknown. */\r\n    DeviceTechnology[DeviceTechnology[\"Unknown\"] = 0] = \"Unknown\";\r\n    /** The reader uses an optical image of a finger skin. */\r\n    DeviceTechnology[DeviceTechnology[\"Optical\"] = 1] = \"Optical\";\r\n    /** The reader uses changes of electrical capacitance of a finger skin. */\r\n    DeviceTechnology[DeviceTechnology[\"Capacitive\"] = 2] = \"Capacitive\";\r\n    /** The reader uses a thermal image of a finger.  */\r\n    DeviceTechnology[DeviceTechnology[\"Thermal\"] = 3] = \"Thermal\";\r\n    /** The reader uses changes of a pressure under the finger. */\r\n    DeviceTechnology[DeviceTechnology[\"Pressure\"] = 4] = \"Pressure\";\r\n})(DeviceTechnology || (DeviceTechnology = {}));\r\n//# sourceMappingURL=device.js.map","/**\r\n * A fingerprint sample format.\r\n */\r\nexport var SampleFormat;\r\n(function (SampleFormat) {\r\n    /** A raw fingerprint image (bitmap). */\r\n    SampleFormat[SampleFormat[\"Raw\"] = 1] = \"Raw\";\r\n    /** A fingerprint image encoded into an intermediate format. */\r\n    SampleFormat[SampleFormat[\"Intermediate\"] = 2] = \"Intermediate\";\r\n    /** A compressed fingerprint image (e.q. JPEG2000, WSQ). */\r\n    SampleFormat[SampleFormat[\"Compressed\"] = 3] = \"Compressed\";\r\n    /** A Portable Network Graphics (PNG) format. */\r\n    SampleFormat[SampleFormat[\"PngImage\"] = 5] = \"PngImage\";\r\n})(SampleFormat || (SampleFormat = {}));\r\n/**\r\n * A figerprint image quality.\r\n */\r\nexport var QualityCode;\r\n(function (QualityCode) {\r\n    QualityCode[QualityCode[\"Good\"] = 0] = \"Good\";\r\n    QualityCode[QualityCode[\"NoImage\"] = 1] = \"NoImage\";\r\n    QualityCode[QualityCode[\"TooLight\"] = 2] = \"TooLight\";\r\n    QualityCode[QualityCode[\"TooDark\"] = 3] = \"TooDark\";\r\n    QualityCode[QualityCode[\"TooNoisy\"] = 4] = \"TooNoisy\";\r\n    QualityCode[QualityCode[\"LowContrast\"] = 5] = \"LowContrast\";\r\n    QualityCode[QualityCode[\"NotEnoughFeatures\"] = 6] = \"NotEnoughFeatures\";\r\n    QualityCode[QualityCode[\"NotCentered\"] = 7] = \"NotCentered\";\r\n    QualityCode[QualityCode[\"NotAFinger\"] = 8] = \"NotAFinger\";\r\n    QualityCode[QualityCode[\"TooHigh\"] = 9] = \"TooHigh\";\r\n    QualityCode[QualityCode[\"TooLow\"] = 10] = \"TooLow\";\r\n    QualityCode[QualityCode[\"TooLeft\"] = 11] = \"TooLeft\";\r\n    QualityCode[QualityCode[\"TooRight\"] = 12] = \"TooRight\";\r\n    QualityCode[QualityCode[\"TooStrange\"] = 13] = \"TooStrange\";\r\n    QualityCode[QualityCode[\"TooFast\"] = 14] = \"TooFast\";\r\n    QualityCode[QualityCode[\"TooSkewed\"] = 15] = \"TooSkewed\";\r\n    QualityCode[QualityCode[\"TooShort\"] = 16] = \"TooShort\";\r\n    QualityCode[QualityCode[\"TooSlow\"] = 17] = \"TooSlow\";\r\n    QualityCode[QualityCode[\"ReverseMotion\"] = 18] = \"ReverseMotion\";\r\n    QualityCode[QualityCode[\"PressureTooHard\"] = 19] = \"PressureTooHard\";\r\n    QualityCode[QualityCode[\"PressureTooLight\"] = 20] = \"PressureTooLight\";\r\n    QualityCode[QualityCode[\"WetFinger\"] = 21] = \"WetFinger\";\r\n    QualityCode[QualityCode[\"FakeFinger\"] = 22] = \"FakeFinger\";\r\n    QualityCode[QualityCode[\"TooSmall\"] = 23] = \"TooSmall\";\r\n    QualityCode[QualityCode[\"RotatedTooMuch\"] = 24] = \"RotatedTooMuch\";\r\n})(QualityCode || (QualityCode = {}));\r\n//# sourceMappingURL=sample.js.map","import { __extends } from \"tslib\";\r\nimport { MultiCastEventSource } from '../../private';\r\nimport { Command, Request, Channel } from '../websdk';\r\nimport { CommunicationFailed } from '../../common';\r\nimport { DeviceConnected, DeviceDisconnected } from '../events';\r\nimport { CardInserted, CardRemoved } from './events';\r\nimport { Method, NotificationType } from \"./messages\";\r\nimport { Utf8, Base64Url, Base64, Utf16 } from '@digitalpersona/core';\r\n/**\r\n * A card reader API class.\r\n * An instance of this class allows to subscribe to card reader events and read card data.\r\n * The card reader API uses DigitalPersona WebSDK to communicate with card reader drivers and hardware.\r\n */\r\nvar CardsReader = /** @class */ (function (_super) {\r\n    __extends(CardsReader, _super);\r\n    /**\r\n     * Constructs a new card reader API object.\r\n     * @param options - options for the `WebSdk` channel.\r\n     */\r\n    function CardsReader(options) {\r\n        var _this = _super.call(this) || this;\r\n        _this.channel = new Channel(\"smartcards\", options);\r\n        _this.channel.onCommunicationError = _this.onConnectionFailed.bind(_this);\r\n        _this.channel.onNotification = _this.processNotification.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds an event handler for the event.\r\n     * This is a multicast subscription, i.e. many handlers can be registered at once.\r\n     *\r\n     * @param event - a name of the event to subscribe, e.g. \"CardInserted\"\r\n     * @param handler - an event handler.\r\n     * @returns an event handler reference.\r\n     * Store the reference and pass it to the {@link CardsReader.off} to unsubscribe from the event.\r\n     *\r\n     * @example\r\n     * ```\r\n     * class CardComponent\r\n     * {\r\n     *     private reader: CardsReader;\r\n     *\r\n     *     private onCardInserted = (event: CardInserted) => { ... }\r\n     *     private onCardRemoved = (event: CardRemoved) => { ... }\r\n     *     ...\r\n     *\r\n     *     public async $onInit() {\r\n     *         this.reader = new CardsReader();\r\n     *         this.reader.on(\"CardInserted\", this.onCardInserted);\r\n     *         this.reader.on(\"CardRemoved\", this.onCardRemoved);\r\n     *         ...\r\n     *         await this.cardReader.subscribe()\r\n     *     }\r\n     *     public async $onDestroy() {\r\n     *         await this.cardReader.unsubscribe();\r\n     *         this.reader.off(\"CardInserted\", this.onCardInserted);\r\n     *         this.reader.off(\"CardRemoved\", this.onCardRemoved);\r\n     *         ...\r\n     *         // alternatively, call this.reader.off() to unsubscribe from all events at once.\r\n     *         delete this.reader;\r\n     *     }\r\n     * }\r\n     * ```\r\n     */\r\n    CardsReader.prototype.on = function (event, handler) { return this._on(event, handler); };\r\n    /** Deletes an event handler for the event.\r\n     * @param event - a name of the event to subscribe.\r\n     * @param handler - an event handler added with the {@link CardsReader.on} method.\r\n     * @example See example in {@link CardsReader.on}\r\n     */\r\n    CardsReader.prototype.off = function (event, handler) { return this._off(event, handler); };\r\n    /** Lists all connected card readers.\r\n     * @returns a promise to return a list of card reader names.\r\n     */\r\n    CardsReader.prototype.enumerateReaders = function () {\r\n        return this.channel.send(new Request(new Command(Method.EnumerateReaders)))\r\n            .then(function (response) {\r\n            var list = JSON.parse(Utf8.fromBase64Url(response.Data || \"{}\"));\r\n            return JSON.parse(list.Readers || \"[]\");\r\n        });\r\n    };\r\n    /** Lists all inserted cards.\r\n     * @returns a promise to return a list of card information for connected cards.\r\n     */\r\n    CardsReader.prototype.enumerateCards = function () {\r\n        return this.channel.send(new Request(new Command(Method.EnumerateCards)))\r\n            .then(function (response) {\r\n            var list = JSON.parse(Utf8.fromBase64Url(response.Data || \"{}\"));\r\n            var cards = JSON.parse(list.Cards || \"[]\");\r\n            return cards.map(function (s) { return JSON.parse(Utf16.fromBase64Url(s)); });\r\n        });\r\n    };\r\n    /** Reads card data from a specific card.\r\n     * @param reader - a name of a card reader where the card was presented.\r\n     * @returns a promise to return a card information.\r\n     * The promise can be fulfilled but return `null` if the card has no information.\r\n     * The promise will be rejected if a card is not found or in case of a reading error.\r\n     */\r\n    CardsReader.prototype.getCardInfo = function (reader) {\r\n        return this.channel.send(new Request(new Command(Method.GetCardInfo, Base64Url.fromJSON({ Reader: reader }))))\r\n            .then(function (response) {\r\n            var cardInfo = JSON.parse(Utf8.fromBase64Url(response.Data || \"null\"));\r\n            return cardInfo;\r\n        });\r\n    };\r\n    /** Reads a card unique identifier.\r\n     * @param reader - a name of a card reader where the card was presented.\r\n     * @returns a promise to return a card identifier.\r\n     */\r\n    CardsReader.prototype.getCardUid = function (reader) {\r\n        return this.channel.send(new Request(new Command(Method.GetCardUID, Base64Url.fromJSON({ Reader: reader }))))\r\n            .then(function (response) {\r\n            var data = Base64.fromBase64Url(response.Data || \"\");\r\n            return data;\r\n        });\r\n    };\r\n    /** Reads card authentication data.\r\n     * @param reader - a name of a card reader where the card was presented.\r\n     * @param pin - an PIN code (for cards requiring a PIN).\r\n     * @returns a promise to return card authentication data.\r\n     * The card data is an opaque encoded string which should be sent to the server as is.\r\n     */\r\n    CardsReader.prototype.getCardAuthData = function (reader, pin) {\r\n        return this.channel.send(new Request(new Command(Method.GetDPCardAuthData, Base64Url.fromJSON({ Reader: reader, PIN: pin || \"\" }))))\r\n            .then(function (response) {\r\n            var data = JSON.parse(Utf8.fromBase64Url(response.Data || \"\"));\r\n            return data;\r\n        });\r\n    };\r\n    /** Reads card enrollment data.\r\n     * @param reader - a name of a card reader where the card was presented.\r\n     * @param pin - an PIN code (for cards requiring a PIN).\r\n     * @returns a promise to return a card enrollment data.\r\n     * The card data is an opaque encoded string which should be sent to the server as is.\r\n     */\r\n    CardsReader.prototype.getCardEnrollData = function (reader, pin) {\r\n        return this.channel.send(new Request(new Command(Method.GetDPCardEnrollData, Base64Url.fromJSON({ Reader: reader, PIN: pin || \"\" }))))\r\n            .then(function (response) {\r\n            var data = JSON.parse(Utf8.fromBase64Url(response.Data || \"\"));\r\n            return data;\r\n        });\r\n    };\r\n    /** Starts listening for card reader events.\r\n     * @param reader - an optional name of a card reader to listen.\r\n     * If no name is provided, the API will start listening all card readers.\r\n     */\r\n    CardsReader.prototype.subscribe = function (reader) {\r\n        return this.channel.send(new Request(new Command(Method.Subscribe, reader ? Base64Url.fromJSON({ Reader: reader }) : \"\")))\r\n            .then();\r\n    };\r\n    /** Stop listening for card reader events.\r\n     * @param reader - an optional name of a card reader to stop listening.\r\n     * If no name is provided, the API will stop listening all card readers.\r\n     */\r\n    CardsReader.prototype.unsubscribe = function (reader) {\r\n        return this.channel.send(new Request(new Command(Method.Unsubscribe, reader ? Base64Url.fromJSON({ Reader: reader }) : \"\")))\r\n            .then();\r\n    };\r\n    /** Converts WebSdk connectivity error to a card API event. */\r\n    CardsReader.prototype.onConnectionFailed = function () {\r\n        this.emit(new CommunicationFailed());\r\n    };\r\n    /** Converts WebSdk notification to card API events. */\r\n    CardsReader.prototype.processNotification = function (notification) {\r\n        switch (notification.Event) {\r\n            case NotificationType.ReaderConnected:\r\n                return this.emit(new DeviceConnected(notification.Reader));\r\n            case NotificationType.ReaderDisconnected:\r\n                return this.emit(new DeviceDisconnected(notification.Reader));\r\n            case NotificationType.CardInserted:\r\n                return this.emit(new CardInserted(notification.Reader, notification.Card));\r\n            case NotificationType.CardRemoved:\r\n                return this.emit(new CardRemoved(notification.Reader, notification.Card));\r\n            default:\r\n                console.log(\"Unknown notification: \" + notification.Event);\r\n        }\r\n    };\r\n    return CardsReader;\r\n}(MultiCastEventSource\r\n//    implements CommunicationEventSource, DeviceEventSource, CardsEventSource\r\n));\r\nexport { CardsReader };\r\n//# sourceMappingURL=reader.js.map","/**@internal\r\n *\r\n */\r\nexport var Method;\r\n(function (Method) {\r\n    Method[Method[\"EnumerateDevices\"] = 1] = \"EnumerateDevices\";\r\n    Method[Method[\"GetDeviceInfo\"] = 2] = \"GetDeviceInfo\";\r\n    Method[Method[\"StartAcquisition\"] = 3] = \"StartAcquisition\";\r\n    Method[Method[\"StopAcquisition\"] = 4] = \"StopAcquisition\";\r\n})(Method || (Method = {}));\r\n/**@internal\r\n *\r\n */\r\nexport var NotificationType;\r\n(function (NotificationType) {\r\n    NotificationType[NotificationType[\"Completed\"] = 0] = \"Completed\";\r\n    NotificationType[NotificationType[\"Error\"] = 1] = \"Error\";\r\n    NotificationType[NotificationType[\"Disconnected\"] = 2] = \"Disconnected\";\r\n    NotificationType[NotificationType[\"Connected\"] = 3] = \"Connected\";\r\n    NotificationType[NotificationType[\"Quality\"] = 4] = \"Quality\";\r\n    NotificationType[NotificationType[\"Stopped\"] = 10] = \"Stopped\";\r\n    NotificationType[NotificationType[\"Started\"] = 11] = \"Started\";\r\n})(NotificationType || (NotificationType = {}));\r\n//# sourceMappingURL=messages.js.map","import { __extends } from \"tslib\";\r\nimport { DeviceEvent } from '../events';\r\n/** An event signaling that a new fingerprint sample (or samples) was acquired during a scan. */\r\nvar SamplesAcquired = /** @class */ (function (_super) {\r\n    __extends(SamplesAcquired, _super);\r\n    /** Constructs a new event object.\r\n     * @param deviceUid - a fingerprint reader ID.\r\n     * @param sampleFormat - a fingerprint sample format.\r\n     * @param sampleData - raw sample data received with WebSdk notifiation.\r\n     */\r\n    function SamplesAcquired(deviceUid, sampleFormat, sampleData) {\r\n        var _this = _super.call(this, \"SamplesAcquired\", deviceUid) || this;\r\n        _this.sampleFormat = sampleFormat;\r\n        _this.samples = JSON.parse(sampleData);\r\n        return _this;\r\n    }\r\n    return SamplesAcquired;\r\n}(DeviceEvent));\r\nexport { SamplesAcquired };\r\n/** An event reporting a quality of a fingerprint scan. */\r\nvar QualityReported = /** @class */ (function (_super) {\r\n    __extends(QualityReported, _super);\r\n    /** Constructs a new event object.\r\n     * @param deviceUid - a fingerprint reader ID.\r\n     * @param quality - a fingerprint scan quality.\r\n     */\r\n    function QualityReported(deviceUid, quality) {\r\n        var _this = _super.call(this, \"QualityReported\", deviceUid) || this;\r\n        _this.quality = quality;\r\n        return _this;\r\n    }\r\n    return QualityReported;\r\n}(DeviceEvent));\r\nexport { QualityReported };\r\n/** An event reporting a fingerprint reader error.  */\r\nvar ErrorOccurred = /** @class */ (function (_super) {\r\n    __extends(ErrorOccurred, _super);\r\n    /** Constructs a new event object.\r\n     * @param deviceUid - a fingeprint reader ID.\r\n     * @param error - an error code.\r\n     */\r\n    function ErrorOccurred(deviceUid, error) {\r\n        var _this = _super.call(this, \"ErrorOccurred\", deviceUid) || this;\r\n        _this.error = error;\r\n        return _this;\r\n    }\r\n    return ErrorOccurred;\r\n}(DeviceEvent));\r\nexport { ErrorOccurred };\r\n/** An event signaling that a fingerprint reader is ready and waiting to scan a finger. */\r\nvar AcquisitionStarted = /** @class */ (function (_super) {\r\n    __extends(AcquisitionStarted, _super);\r\n    /** Constructs a new event object.\r\n     * @param deviceUid - a fingeprint reader ID.\r\n     */\r\n    function AcquisitionStarted(deviceUid) {\r\n        return _super.call(this, \"AcquisitionStarted\", deviceUid) || this;\r\n    }\r\n    return AcquisitionStarted;\r\n}(DeviceEvent));\r\nexport { AcquisitionStarted };\r\n/** An event signaling that a fingerprint reader has stopped waiting for a finger scan. */\r\nvar AcquisitionStopped = /** @class */ (function (_super) {\r\n    __extends(AcquisitionStopped, _super);\r\n    /** Constructs a new event object.\r\n     * @param deviceUid - a fingeprint reader ID.\r\n     */\r\n    function AcquisitionStopped(deviceUid) {\r\n        return _super.call(this, \"AcquisitionStopped\", deviceUid) || this;\r\n    }\r\n    return AcquisitionStopped;\r\n}(DeviceEvent));\r\nexport { AcquisitionStopped };\r\n//# sourceMappingURL=events.js.map","/**@internal\r\n *\r\n */\r\nexport var Method;\r\n(function (Method) {\r\n    Method[Method[\"Init\"] = 1] = \"Init\";\r\n    Method[Method[\"Continue\"] = 2] = \"Continue\";\r\n    Method[Method[\"Term\"] = 3] = \"Term\";\r\n    Method[Method[\"Authenticate\"] = 4] = \"Authenticate\";\r\n})(Method || (Method = {}));\r\n/**@internal\r\n *\r\n */\r\nexport var MessageType;\r\n(function (MessageType) {\r\n    MessageType[MessageType[\"Response\"] = 0] = \"Response\";\r\n    MessageType[MessageType[\"Notification\"] = 1] = \"Notification\";\r\n})(MessageType || (MessageType = {}));\r\n//# sourceMappingURL=messages.js.map","import { __extends } from \"tslib\";\r\nimport { Base64Url, Utf8 } from '@digitalpersona/core';\r\nimport { MultiCastEventSource } from '../../private';\r\nimport { Command, Request, Channel } from '../websdk';\r\nimport { CommunicationFailed } from '../../common';\r\nimport { DeviceConnected, DeviceDisconnected } from '../events';\r\nimport { ErrorOccurred, SamplesAcquired, QualityReported, AcquisitionStarted, AcquisitionStopped, } from './events';\r\nimport { Method, NotificationType } from './messages';\r\n/**\r\n * A fingerprint reader API.\r\n * An instance of this class allows to subscribe to finerprint reader events and read fingerprint data.\r\n * The fingerprint reader API uses DigitalPersona WebSDK to communicate with fingerprint reader drivers and hardware.\r\n */\r\nvar FingerprintReader = /** @class */ (function (_super) {\r\n    __extends(FingerprintReader, _super);\r\n    /**\r\n     * Constructs a new fingerprint reader API object.\r\n     * @param options - options for the `WebSdk` channel.\r\n     */\r\n    function FingerprintReader(options) {\r\n        var _this = _super.call(this) || this;\r\n        _this.options = options;\r\n        _this.channel = new Channel(\"fingerprints\", _this.options);\r\n        _this.channel.onCommunicationError = _this.onConnectionFailed.bind(_this);\r\n        _this.channel.onNotification = _this.processNotification.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds an event handler for the event.\r\n     * This is a multicast subscription, i.e. many handlers can be registered at once.\r\n     *\r\n     * @param event - a name of the event to subscribe, e.g. \"SampleAcquired\"\r\n     * @param handler - an event handler.\r\n     * @returns an event handler reference.\r\n     * Store the reference and pass it to the {@link FingerprintReader.off} to unsubscribe from the event.\r\n     *\r\n     * @example\r\n     * ```\r\n     * class FingerprintComponent\r\n     * {\r\n     *     private reader: FingerprintReader;\r\n     *\r\n     *     private onDeviceConnected = (event: DeviceConnected) => { ... };\r\n     *     private onDeviceDisconnected = (event: DeviceDisconnected) => { ... };\r\n     *     private onSamplesAcquired = (event: SampleAquired) => { ... };\r\n     *     ...\r\n     *\r\n     *     public async $onInit() {\r\n     *         this.reader = new FingerprintReader();\r\n     *         this.reader.on(\"DeviceConnected\", onDeviceConnected);\r\n     *         this.reader.on(\"DeviceDisconnected\", onDeviceDisconnected);\r\n     *         this.reader.on(\"SamplesAcquired\", onSamplesAcquired);\r\n     *         ...\r\n     *         await this.fingerprintReader.startAcquisition(SampleFormat.Intermediate);\r\n     *     }\r\n     *     public async $onDestroy() {\r\n     *         await this.fingerprintReader.stopAcquisition();\r\n     *         this.reader.off(\"DeviceConnected\", onDeviceConnected);\r\n     *         this.reader.off(\"DeviceDisconnected\", onDeviceDisconnected);\r\n     *         this.reader.off(\"SamplesAcquired\", onSamplesAcquired);\r\n     *         ...\r\n     *         // alternatively, call this.reader.off() to unsubscribe from all events at once.\r\n     *         delete this.reader;\r\n     *     }\r\n     * }\r\n     * ```\r\n     */\r\n    FingerprintReader.prototype.on = function (event, handler) { return this._on(event, handler); };\r\n    /** Deletes an event handler for the event.\r\n     * @param event - a name of the event to subscribe.\r\n     * @param handler - an event handler added with the {@link FingerprintReader.on} method.\r\n     */\r\n    FingerprintReader.prototype.off = function (event, handler) { return this._off(event, handler); };\r\n    /** Lists all connected fingerprint readers.\r\n     * @returns a promise to return a list of fingerprint reader names.\r\n     */\r\n    FingerprintReader.prototype.enumerateDevices = function () {\r\n        return this.channel.send(new Request(new Command(Method.EnumerateDevices)))\r\n            .then(function (response) {\r\n            if (!response)\r\n                return [];\r\n            var deviceList = JSON.parse(Utf8.fromBase64Url(response.Data || \"{}\"));\r\n            return JSON.parse(deviceList.DeviceIDs || \"[]\");\r\n        });\r\n    };\r\n    /** Reads a fingerprint reader device information.\r\n     * @param deviceUid - a fingerprint reader ID.\r\n     * @returns a promise to return a device information.\r\n     * The promise can be fulfilled but return `null` if the reader provides no information.\r\n     * The promise will be rejected if a reader is not found or in case of a reading error.\r\n     */\r\n    FingerprintReader.prototype.getDeviceInfo = function (deviceUid) {\r\n        return this.channel.send(new Request(new Command(Method.GetDeviceInfo, Base64Url.fromJSON({ DeviceID: deviceUid }))))\r\n            .then(function (response) {\r\n            var deviceInfo = JSON.parse(Utf8.fromBase64Url(response.Data || \"null\"));\r\n            return deviceInfo;\r\n        });\r\n    };\r\n    /** Activate a fingerprint acquisition mode.\r\n     * This call will produce a {@link AcquisitionStarted} event if activation was successful.\r\n     * After that the reader will wait for a finger placed on the reader.\r\n     * When a finger is placed, a {@link QualityReported} event will report a scan quality,\r\n     * and a {@link SamplesAcquired} event will return a scanned sample in case of a successful scan.\r\n     */\r\n    FingerprintReader.prototype.startAcquisition = function (sampleFormat, deviceUid) {\r\n        return this.channel.send(new Request(new Command(Method.StartAcquisition, Base64Url.fromJSON({\r\n            DeviceID: deviceUid ? deviceUid : \"00000000-0000-0000-0000-000000000000\",\r\n            SampleType: sampleFormat,\r\n        }))))\r\n            .then();\r\n    };\r\n    /** Deactivates a fingerprint acquisition mode.\r\n     * This call will produce a {@link AcquisitionStopped} event if deactivation was successful.\r\n     * After that the reader will stop waiting for a finger.\r\n     */\r\n    FingerprintReader.prototype.stopAcquisition = function (deviceUid) {\r\n        return this.channel.send(new Request(new Command(Method.StopAcquisition, Base64Url.fromJSON({\r\n            DeviceID: deviceUid ? deviceUid : \"00000000-0000-0000-0000-000000000000\",\r\n        }))))\r\n            .then();\r\n    };\r\n    /** Converts WebSdk connectivity error to a fingerprint API event. */\r\n    FingerprintReader.prototype.onConnectionFailed = function () {\r\n        this.emit(new CommunicationFailed());\r\n    };\r\n    /** Converts WebSdk notification to fingerprint API events. */\r\n    FingerprintReader.prototype.processNotification = function (notification) {\r\n        switch (notification.Event) {\r\n            case NotificationType.Completed:\r\n                var completed = JSON.parse(Utf8.fromBase64Url(notification.Data || \"\"));\r\n                return this.emit(new SamplesAcquired(notification.Device, completed.SampleFormat, completed.Samples));\r\n            case NotificationType.Error:\r\n                var error = JSON.parse(Utf8.fromBase64Url(notification.Data || \"\"));\r\n                return this.emit(new ErrorOccurred(notification.Device, error.uError));\r\n            case NotificationType.Disconnected:\r\n                return this.emit(new DeviceDisconnected(notification.Device));\r\n            case NotificationType.Connected:\r\n                return this.emit(new DeviceConnected(notification.Device));\r\n            case NotificationType.Quality:\r\n                var quality = JSON.parse(Utf8.fromBase64Url(notification.Data || \"\"));\r\n                return this.emit(new QualityReported(notification.Device, quality.Quality));\r\n            case NotificationType.Stopped:\r\n                return this.emit(new AcquisitionStopped(notification.Device));\r\n            case NotificationType.Started:\r\n                return this.emit(new AcquisitionStarted(notification.Device));\r\n            default:\r\n                console.log(\"Unknown notification: \" + notification.Event);\r\n        }\r\n    };\r\n    return FingerprintReader;\r\n}(MultiCastEventSource\r\n//    implements FingerprintsEventSource, DeviceEventSource, CommunicationEventSource\r\n));\r\nexport { FingerprintReader };\r\n//# sourceMappingURL=reader.js.map","import { __extends } from \"tslib\";\r\nimport { MultiCastEventSource } from '../../private';\r\nimport { Command, Request, Channel } from '../websdk';\r\nimport { CommunicationFailed } from '../../common';\r\nimport { Method } from './messages';\r\n/**\r\n * Integrated Windows Authentication API.\r\n * An instance of this class allows internet browsers to authenticate in DigitalPersona servers\r\n * using Integrated Windows Authentication.\r\n * The IWA API uses DigitalPersona WebSDK to communicate with Windwows operating system and extract\r\n * Windows account data for authentication.\r\n */\r\nvar WindowsAuthClient = /** @class */ (function (_super) {\r\n    __extends(WindowsAuthClient, _super);\r\n    /**\r\n     * Constructs a new IWA API object.\r\n     * @param options - options for the `WebSdk` channel.\r\n     */\r\n    function WindowsAuthClient(options) {\r\n        var _this = _super.call(this) || this;\r\n        _this.channel = new Channel(\"wia\", options);\r\n        _this.channel.onCommunicationError = _this.onConnectionFailed.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds an event handler for the event.\r\n     * This is a multicast subscription, i.e. many handlers can be registered at once.\r\n     *\r\n     * @param event - a name of the event to subscribe, e.g. \"CommunicationFailed\"\r\n     * @param handler - an event handler.\r\n     * @returns an event handler reference.\r\n     * Store the reference and pass it to the {@link WindowsAuthClient.off} to unsubscribe from the event.\r\n     *\r\n     * @example\r\n     * ```\r\n     * class IntegratedWindowsAuthComponent\r\n     * {\r\n     *     private client: WindowsAuthClient;\r\n     *\r\n     *     private onCommunicationFailed = (event: CommunicationFailed) => { ... }\r\n     *\r\n     *     public $onInit() {\r\n     *         this.client = new WindowsAuthClient();\r\n     *         this.client.on(\"CommunicationFailed\", this.onCommunicationFailed);\r\n     *     }\r\n     *     public $onDestroy() {\r\n     *         this.client.off(\"CommunicationFailed\", this.onCommunicationFailed);\r\n     *         // alternatively, call this.reader.off() to unsubscribe from all events at once.\r\n     *         delete this.client;\r\n     *     }\r\n     * }\r\n     * ```\r\n     */\r\n    WindowsAuthClient.prototype.on = function (event, handler) { return this._on(event, handler); };\r\n    /** Deletes an event handler for the event.\r\n     * @param event - a name of the event to subscribe.\r\n     * @param handler - an event handler added with the {@link WindowsAuthClient.on} method.\r\n     */\r\n    WindowsAuthClient.prototype.off = function (event, handler) { return this._off(event, handler); };\r\n    /** Used internally. Do not call this method. */\r\n    WindowsAuthClient.prototype.init = function () {\r\n        return this.channel.send(new Request(new Command(Method.Init)), 3000)\r\n            .then(function (response) {\r\n            var data = JSON.parse(response.Data || \"{}\");\r\n            return { handle: data.Handle, data: data.Data };\r\n        });\r\n    };\r\n    /** Used internally. Do not call this method. */\r\n    WindowsAuthClient.prototype.continue = function (handle, data) {\r\n        return this.channel.send(new Request(new Command(Method.Continue, JSON.stringify({ Handle: handle, Data: data }))))\r\n            .then(function (response) {\r\n            var d = JSON.parse(response.Data || \"{}\");\r\n            return d.Data;\r\n        });\r\n    };\r\n    /** Used internally. Do not call this method. */\r\n    WindowsAuthClient.prototype.term = function (handle) {\r\n        return this.channel.send(new Request(new Command(Method.Term, JSON.stringify({ Handle: handle }))))\r\n            .then();\r\n    };\r\n    /** Converts WebSdk connectivity error to an IWA API event. */\r\n    WindowsAuthClient.prototype.onConnectionFailed = function () {\r\n        this.emit(new CommunicationFailed());\r\n    };\r\n    return WindowsAuthClient;\r\n}(MultiCastEventSource));\r\nexport { WindowsAuthClient };\r\n//# sourceMappingURL=device.js.map"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","CardType","CardAttributes","Event","type","CommunicationFailed","_super","call","DeviceEvent","deviceId","_this","DeviceConnected","DeviceDisconnected","MessageType","CardInserted","reader","card","cardId","CardRemoved","MultiCastEventSource","handlers","_on","event","handler","push","_off","hh","filter","h","emit","eventName","unicast","invoke","multicast","forEach","e","console","error","Method","NotificationType","Channel","channelName","options","pending","webChannel","WebSdk","WebChannelClient","onConnectionSucceed","bind","onConnectionFailed","onDataReceivedTxt","send","request","timeout","deferred","Promise","resolve","reject","timer","window","setTimeout","Error","isConnected","processRequestQueue","connect","r","onCommunicationError","data","message","JSON","parse","Utf8","fromBase64Url","Type","Response","response","Data","findRequest","clearTimeout","hr","Result","toString","log","Notification","notification","onNotification","req","i","items","sent","sendDataTxt","Base64Url","fromJSON","command","length","splice","Command","method","parameters","Parameters","Request","DeviceUidType","DeviceModality","DeviceTechnology","SampleFormat","QualityCode","CardsReader","channel","processNotification","on","off","enumerateReaders","EnumerateReaders","then","list","Readers","enumerateCards","EnumerateCards","Cards","map","s","Utf16","getCardInfo","GetCardInfo","Reader","getCardUid","GetCardUID","Base64","getCardAuthData","pin","GetDPCardAuthData","PIN","getCardEnrollData","GetDPCardEnrollData","subscribe","Subscribe","unsubscribe","Unsubscribe","ReaderConnected","ReaderDisconnected","Card","SamplesAcquired","deviceUid","sampleFormat","sampleData","samples","QualityReported","quality","ErrorOccurred","AcquisitionStarted","AcquisitionStopped","FingerprintReader","enumerateDevices","EnumerateDevices","deviceList","DeviceIDs","getDeviceInfo","GetDeviceInfo","DeviceID","startAcquisition","StartAcquisition","SampleType","stopAcquisition","StopAcquisition","Completed","completed","Device","Samples","uError","Disconnected","Connected","Quality","Stopped","Started","WindowsAuthClient","init","Init","handle","Handle","continue","Continue","stringify","term","Term"],"mappings":"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"}