{"version":3,"file":"index.umd.min.js","sources":["../es6/common/variant.js","../es6/common/attribute.js","../es6/common/resource.js","../es6/common/database.js","../es6/services/auth/status.js","../es6/services/policy/stepUp.js","../es6/services/admin/license.js","../es6/services/admin/search.js","../es6/services/admin/settings.js","../es6/services/admin/uac.js","../es6/common/errors.js","../es6/private/endpoint.js","../es6/private/service.js","../es6/services/admin/service.js","../es6/services/auth/service.js","../es6/services/auth/data.js","../es6/services/claims/claim.js","../es6/services/claims/service.js","../es6/services/enroll/service.js","../es6/services/policy/service.js","../es6/services/secrets/service.js"],"sourcesContent":["export var VarType;\r\n(function (VarType) {\r\n    /** The variant holds a boolean value. */\r\n    VarType[VarType[\"Boolean\"] = 1] = \"Boolean\";\r\n    /** The variant holds an integer value. */\r\n    VarType[VarType[\"Integer\"] = 2] = \"Integer\";\r\n    /** The variant holds a string value.  */\r\n    VarType[VarType[\"String\"] = 3] = \"String\";\r\n    /** The variant holds a binary object (in a form of a Base64Url-encoded string). */\r\n    VarType[VarType[\"Blob\"] = 4] = \"Blob\";\r\n})(VarType || (VarType = {}));\r\n/** A variant data holding a boolean value. */\r\nexport class VarBool {\r\n    constructor(values) {\r\n        this.values = values;\r\n        this.type = VarType.Boolean;\r\n    }\r\n}\r\n/** A variant data holding an integer value. */\r\nexport class VarInt {\r\n    constructor(values) {\r\n        this.values = values;\r\n        this.type = VarType.Integer;\r\n    }\r\n}\r\n/** A variant data holding a string value.  */\r\nexport class VarString {\r\n    constructor(values) {\r\n        this.values = values;\r\n        this.type = VarType.String;\r\n    }\r\n}\r\n/** A variant data holding a binary object (in a form of a Base64Url-encoded string). */\r\nexport class VarBlob {\r\n    constructor(values) {\r\n        this.values = values;\r\n        this.type = VarType.Blob;\r\n    }\r\n}\r\n//# sourceMappingURL=variant.js.map","/** Enumerates supported actions that can be performed on user's attributes. */\r\nexport var AttributeAction;\r\n(function (AttributeAction) {\r\n    /** Clear an attribute's value. */\r\n    AttributeAction[AttributeAction[\"Clear\"] = 1] = \"Clear\";\r\n    /** Update an attribute's value.  */\r\n    AttributeAction[AttributeAction[\"Update\"] = 2] = \"Update\";\r\n    /** Append a value to the existing multi-value attribute. */\r\n    AttributeAction[AttributeAction[\"Append\"] = 3] = \"Append\";\r\n    /** Delete an attribute. */\r\n    AttributeAction[AttributeAction[\"Delete\"] = 4] = \"Delete\";\r\n})(AttributeAction || (AttributeAction = {}));\r\n//# sourceMappingURL=attribute.js.map","/**\r\n * Enumerates supported resource actions.\r\n */\r\nexport var ResourceActions;\r\n(function (ResourceActions) {\r\n    /** Reading of a resource. */\r\n    ResourceActions[ResourceActions[\"Read\"] = 0] = \"Read\";\r\n    /** Modifying a resource. */\r\n    ResourceActions[ResourceActions[\"Write\"] = 1] = \"Write\";\r\n    /** Deleting a resource. */\r\n    ResourceActions[ResourceActions[\"Delete\"] = 2] = \"Delete\";\r\n})(ResourceActions || (ResourceActions = {}));\r\n//# sourceMappingURL=resource.js.map","/**\r\n * Enumerates supported identity databases.\r\n */\r\nexport var DatabaseType;\r\n(function (DatabaseType) {\r\n    /** ActiveDirectory (AD) */\r\n    DatabaseType[\"AD\"] = \"AD\";\r\n    /** Lightweight Directory Service (LDS) */\r\n    DatabaseType[\"LDS\"] = \"ADLDS\";\r\n})(DatabaseType || (DatabaseType = {}));\r\n//# sourceMappingURL=database.js.map","/**\r\n * Enumerated possible authentication statuses.\r\n */\r\nexport var AuthenticationStatus;\r\n(function (AuthenticationStatus) {\r\n    /** Authentication failed. */\r\n    AuthenticationStatus[AuthenticationStatus[\"Error\"] = 0] = \"Error\";\r\n    /** Authentication is in progress. */\r\n    AuthenticationStatus[AuthenticationStatus[\"Continue\"] = 1] = \"Continue\";\r\n    /** Authentication is complete. */\r\n    AuthenticationStatus[AuthenticationStatus[\"Completed\"] = 2] = \"Completed\";\r\n})(AuthenticationStatus || (AuthenticationStatus = {}));\r\n//# sourceMappingURL=status.js.map","/**\r\n * A context of an authentication.\r\n */\r\nexport class ContextualInfo {\r\n}\r\n/** Enumerates step-up triggers. */\r\nexport var TriggerName;\r\n(function (TriggerName) {\r\n    TriggerName[\"Behavior\"] = \"behavior\";\r\n    TriggerName[\"IP\"] = \"ip\";\r\n    TriggerName[\"Device\"] = \"device\";\r\n    TriggerName[\"AltusInstalled\"] = \"altusInstalled\";\r\n    TriggerName[\"Computer\"] = \"computer\";\r\n    TriggerName[\"Domain\"] = \"domain\";\r\n    TriggerName[\"User\"] = \"user\";\r\n    TriggerName[\"InsideFirewall\"] = \"insideFirewall\";\r\n    TriggerName[\"RemoteSession\"] = \"remoteSession\";\r\n})(TriggerName || (TriggerName = {}));\r\n//# sourceMappingURL=stepUp.js.map","export var LicenseType;\r\n(function (LicenseType) {\r\n    LicenseType[LicenseType[\"ADUser\"] = 1] = \"ADUser\";\r\n    LicenseType[LicenseType[\"LDSUser\"] = 2] = \"LDSUser\";\r\n})(LicenseType || (LicenseType = {}));\r\n//# sourceMappingURL=license.js.map","export var SearchScope;\r\n(function (SearchScope) {\r\n    SearchScope[SearchScope[\"Base\"] = 0] = \"Base\";\r\n    SearchScope[SearchScope[\"OneLevel\"] = 1] = \"OneLevel\";\r\n    SearchScope[SearchScope[\"Subtree\"] = 2] = \"Subtree\";\r\n})(SearchScope || (SearchScope = {}));\r\n//# sourceMappingURL=search.js.map","export var ServerSettingType;\r\n(function (ServerSettingType) {\r\n    /** Unknown Server Settings Type. */\r\n    ServerSettingType[ServerSettingType[\"Unknown\"] = 0] = \"Unknown\";\r\n    /** Server Settings will be accessible only for Domain Administrators. */\r\n    ServerSettingType[ServerSettingType[\"Admin\"] = 1] = \"Admin\";\r\n    /** Server Settings will be accessible for anybody (public). */\r\n    ServerSettingType[ServerSettingType[\"Public\"] = 2] = \"Public\";\r\n})(ServerSettingType || (ServerSettingType = {}));\r\nexport var ServerSettings;\r\n(function (ServerSettings) {\r\n    ServerSettings[ServerSettings[\"LockoutThreshold\"] = 0] = \"LockoutThreshold\";\r\n    ServerSettings[ServerSettings[\"LockoutDuration\"] = 1] = \"LockoutDuration\";\r\n    ServerSettings[ServerSettings[\"LockoutReset\"] = 2] = \"LockoutReset\";\r\n})(ServerSettings || (ServerSettings = {}));\r\n//# sourceMappingURL=settings.js.map","/** DPCA Useraccount control flags. */\r\nexport var UACFlags;\r\n(function (UACFlags) {\r\n    UACFlags[UACFlags[\"RevertToWindows\"] = 1] = \"RevertToWindows\";\r\n    UACFlags[UACFlags[\"PasswordNotAllowed\"] = 2] = \"PasswordNotAllowed\";\r\n    UACFlags[UACFlags[\"PinRequired\"] = 4] = \"PinRequired\";\r\n    UACFlags[UACFlags[\"FingerprintRequired\"] = 8] = \"FingerprintRequired\";\r\n    UACFlags[UACFlags[\"FingerprintOnly\"] = 16] = \"FingerprintOnly\";\r\n    UACFlags[UACFlags[\"OtpAndPwd\"] = 64] = \"OtpAndPwd\";\r\n    UACFlags[UACFlags[\"OtpAndFingerprint\"] = 128] = \"OtpAndFingerprint\";\r\n})(UACFlags || (UACFlags = {}));\r\nexport var UserAccountType;\r\n(function (UserAccountType) {\r\n    /** User account type is unknown. */\r\n    UserAccountType[UserAccountType[\"Unknown\"] = 0] = \"Unknown\";\r\n    /** A local user account. */\r\n    UserAccountType[UserAccountType[\"Local\"] = 1] = \"Local\";\r\n    /** ActiveDirectory user */\r\n    UserAccountType[UserAccountType[\"ActiveDirectory\"] = 2] = \"ActiveDirectory\";\r\n    /** AD LDS (DPCA) user.  */\r\n    UserAccountType[UserAccountType[\"ADLDS\"] = 3] = \"ADLDS\";\r\n})(UserAccountType || (UserAccountType = {}));\r\n//# sourceMappingURL=uac.js.map","/**\r\n * Maps Web Access service faults to the Javascript exception model\r\n */\r\nexport class ServiceError extends Error {\r\n    /** Constructs the object. */\r\n    constructor(code, message) {\r\n        super(message);\r\n        this.code = code;\r\n        Object.setPrototypeOf(this, new.target.prototype);\r\n    }\r\n    /** Creates a service error object from a {@link ServiceFault | service fault}. */\r\n    static fromServiceFault(fault) {\r\n        return new ServiceError(fault.error_code, fault.description);\r\n    }\r\n    /** Allows to distinguish transport errors (HTTP) from {@link ServiceFault | service faults}.\r\n     * @returns `true` if the error was a transport error (HTTP),\r\n     *          `false` if it was a {@link ServiceFault | service fault}.\r\n     */\r\n    isHttpError() { return this.code >= 400 && this.code < 600; }\r\n}\r\n//# sourceMappingURL=errors.js.map","import { ServiceError } from '../common';\r\nimport { Url } from '@digitalpersona/core';\r\nexport class ServiceEndpoint {\r\n    constructor(endpointUrl, defaultRequest) {\r\n        this.defaultRequest = {\r\n            cache: \"no-cache\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json;charset=utf-8\",\r\n                \"Accept\": \"application/json\",\r\n            },\r\n        };\r\n        this.endpointUrl = endpointUrl;\r\n        this.defaultRequest = defaultRequest || this.defaultRequest;\r\n    }\r\n    static handleResponse(response) {\r\n        return (response.ok) ?\r\n            response.json() :\r\n            ServiceEndpoint.handleError(response);\r\n    }\r\n    static handleError(response) {\r\n        if (response.status === 404) {\r\n            // DP WebServices dump all errors under a single 404 error\r\n            // (which is not a best choice as the same error may indicate wrong URL path).\r\n            // So we first try to get a \"fault\" JSON object from the response and use its\r\n            // error code and message. If the response is empty, we fallback to a\r\n            // regular HTTP response code and status text.\r\n            return response.json()\r\n                .then((fault) => {\r\n                throw (fault) ?\r\n                    new ServiceError(fault.error_code, fault.description) :\r\n                    new ServiceError(response.status, response.statusText);\r\n            });\r\n        }\r\n        throw new ServiceError(response.status, response.statusText);\r\n    }\r\n    get(path, query, request) {\r\n        return fetch(Url.create(this.endpointUrl, path, query), Object.assign(Object.assign(Object.assign({}, this.defaultRequest), request), { method: 'GET' }))\r\n            .then(ServiceEndpoint.handleResponse);\r\n    }\r\n    post(path, query, body, request) {\r\n        return fetch(Url.create(this.endpointUrl, path, query), Object.assign(Object.assign(Object.assign(Object.assign({}, this.defaultRequest), request), { method: 'POST' }), (body ? { body: JSON.stringify(body) } : {})))\r\n            .then(ServiceEndpoint.handleResponse);\r\n    }\r\n    put(path, query, body, request) {\r\n        return fetch(Url.create(this.endpointUrl, path, query), Object.assign(Object.assign(Object.assign(Object.assign({}, this.defaultRequest), request), { method: 'PUT' }), (body ? { body: JSON.stringify(body) } : {})))\r\n            .then(ServiceEndpoint.handleResponse);\r\n    }\r\n    // cannot use \"delete\" as it is a reserved Javascript word\r\n    del(path, query, body, request) {\r\n        return fetch(Url.create(this.endpointUrl, path, query), Object.assign(Object.assign(Object.assign(Object.assign({}, this.defaultRequest), request), { method: 'DELETE' }), (body ? { body: JSON.stringify(body) } : {})))\r\n            .then(ServiceEndpoint.handleResponse);\r\n    }\r\n    ping(path = 'Ping') {\r\n        return fetch(Url.create(this.endpointUrl, path), Object.assign(Object.assign({}, this.defaultRequest), { method: \"GET\" }))\r\n            .then(response => response.ok)\r\n            .catch(reason => false);\r\n    }\r\n}\r\n//# sourceMappingURL=endpoint.js.map","import { ServiceEndpoint } from './endpoint';\r\nexport class Service {\r\n    constructor(endpoint) {\r\n        this.endpoint = new ServiceEndpoint(endpoint);\r\n    }\r\n    Ping() {\r\n        return this.endpoint.ping();\r\n    }\r\n}\r\n//# sourceMappingURL=service.js.map","import { Service } from '../../private';\r\n/** DigitalPersona WebAuth (DPWebAuth) service client wrapper. */\r\nexport class AdminService extends Service {\r\n    /** Constructs a service wrapper.\r\n     * @param endpointUrl - a URL to the DPWebClaims service.\r\n     */\r\n    constructor(endpointUrl) {\r\n        super(endpointUrl);\r\n    }\r\n    /** @inheritdoc */\r\n    ExecuteSearch(ticket, query) {\r\n        return this.endpoint\r\n            .post(\"ExecuteSearch\", null, Object.assign({ ticket }, query))\r\n            .then(response => JSON.parse(response.ExecuteSearchResult));\r\n    }\r\n    /** @inheritdoc */\r\n    PSKCImport(ticket, PSKCData, PSKCFileName, password, sharedKey) {\r\n        return this.endpoint\r\n            .post(\"PSKCImport\", null, { ticket, PSKCData, PSKCFileName, password, sharedKey })\r\n            .then(response => response.PSKCImportResult);\r\n    }\r\n    /** @inheritdoc */\r\n    GetServerSettings(ticket, user, settings) {\r\n        return this.endpoint\r\n            .post(\"GetServerSettings\", null, { ticket, user, settings })\r\n            .then(response => response.GetServerSettingsResult);\r\n    }\r\n    /** @inheritdoc */\r\n    SetServerSettings(ticket, type, settings) {\r\n        return this.endpoint\r\n            .put(\"SetServerSettings\", null, { ticket, type, settings });\r\n    }\r\n    /** @inheritdoc */\r\n    GetLicenseInfo(type) {\r\n        return this.endpoint\r\n            .get(\"GetLicenseInfo\", { type })\r\n            .then(response => response.GetLicenseInfoResult);\r\n    }\r\n    /** @inheritdoc */\r\n    GetUserRecoveryPassword(ticket, user, encryptedPwd) {\r\n        return this.endpoint\r\n            .post(\"GetUserRecoveryPassword\", null, { ticket, user, encryptedPwd })\r\n            .then(response => response.GetUserRecoveryPasswordResult);\r\n    }\r\n    /** @inheritdoc */\r\n    AdminDeleteUserCredentials(ticket, user, credentials) {\r\n        return this.endpoint\r\n            .del(\"AdminDeleteUserCredentials\", null, { ticket, user, credentials });\r\n    }\r\n    /** @inheritdoc */\r\n    GetUserInfo(ticket, user) {\r\n        return this.endpoint\r\n            .post(\"GetUserInfo\", null, { ticket, user })\r\n            .then(response => response.GetUserInfoResult);\r\n    }\r\n    /** @inheritdoc */\r\n    UnlockUserAccount(ticket, user) {\r\n        return this.endpoint\r\n            .put(\"UnlockUserAccount\", null, { ticket, user });\r\n    }\r\n    /** @inheritdoc */\r\n    SetUserAccountControl(ticket, user, control) {\r\n        return this.endpoint\r\n            .put(\"SetUserAccountControl\", null, { ticket, user, control });\r\n    }\r\n}\r\n//# sourceMappingURL=service.js.map","import { Ticket } from '@digitalpersona/core';\r\nimport { Service } from '../../private';\r\n/** DigitalPersona WebAuth (DPWebAuth) service client wrapper. */\r\nexport class AuthService extends Service {\r\n    /** Constructs a service wrapper.\r\n     * @param endpointUrl - a URL to the DPWebClaims service.\r\n     */\r\n    constructor(endpointUrl) {\r\n        super(endpointUrl);\r\n    }\r\n    /** @inheritdoc */\r\n    GetUserCredentials(user) {\r\n        return this.endpoint\r\n            .get(\"GetUserCredentials\", { user: user.name, type: user.type })\r\n            .then(response => response.GetUserCredentialsResult);\r\n    }\r\n    /** @inheritdoc */\r\n    GetEnrollmentData(user, credentialId) {\r\n        return this.endpoint\r\n            .get(\"GetEnrollmentData\", { user: user.name, type: user.type, cred_id: credentialId })\r\n            .then(response => response.GetEnrollmentDataResult);\r\n    }\r\n    /** @inheritdoc */\r\n    Identify(credential) {\r\n        return this.endpoint\r\n            .post(\"IdentifyUser\", null, { credential })\r\n            .then(response => new Ticket(response.IdentifyUserResult.jwt));\r\n    }\r\n    /** @inheritdoc */\r\n    Authenticate(identity, credential) {\r\n        return (identity instanceof Ticket) ?\r\n            this.endpoint\r\n                .post(\"AuthenticateUserTicket\", null, { ticket: identity, credential })\r\n                .then(response => new Ticket(response.AuthenticateUserTicketResult.jwt))\r\n            : this.endpoint\r\n                .post(\"AuthenticateUser\", null, { user: identity, credential })\r\n                .then(response => new Ticket(response.AuthenticateUserResult.jwt));\r\n    }\r\n    /** @inheritdoc */\r\n    CustomAction(actionId, ticket, user, credential) {\r\n        return this.endpoint\r\n            .post(\"CustomAction\", null, { actionId, ticket, user, credential })\r\n            .then(response => response.CustomActionResult);\r\n    }\r\n    /** @inheritdoc */\r\n    CreateAuthentication(identity, credentialId) {\r\n        return (identity instanceof Ticket) ?\r\n            this.endpoint\r\n                .post(\"CreateTicketAuthentication\", null, { ticket: identity, credentialId })\r\n                .then(response => response.CreateTicketAuthenticationResult)\r\n            : this.endpoint\r\n                .post(\"CreateUserAuthentication\", null, { user: identity, credentialId })\r\n                .then(response => response.CreateUserAuthenticationResult);\r\n    }\r\n    /** @inheritdoc */\r\n    ContinueAuthentication(authId, authData) {\r\n        return this.endpoint\r\n            .post(\"ContinueAuthentication\", null, { authId, authData })\r\n            .then(response => response.ContinueAuthenticationResult);\r\n    }\r\n    /** @inheritdoc */\r\n    DestroyAuthentication(authId) {\r\n        return this.endpoint\r\n            .del(\"DestroyAuthentication\", null, { authId });\r\n    }\r\n}\r\n//# sourceMappingURL=service.js.map","/**\r\n * Client-side authentication data used by the {@link IAuthenticationClient} during authentication handshake.\r\n */\r\nexport class AuthenticationData {\r\n}\r\n//# sourceMappingURL=data.js.map","/**\r\n * A request for a identity claim.\r\n * The service will search an {@link ClaimRequest.attr | attribute} in a {@link ClaimRequest.database}\r\n * and return the attribute value as a claim {@link ClaimRequest.name | name} in a token.\r\n */\r\nexport class ClaimRequest {\r\n    /** Constructs a claim request. */\r\n    constructor(\r\n    /** A name of a claim to return. */\r\n    name, \r\n    /** A database to search for an attribute. */\r\n    db, \r\n    /** An attribute name to search. */\r\n    attr) {\r\n        this.name = name;\r\n        this.db = db;\r\n        this.attr = attr;\r\n    }\r\n}\r\n//# sourceMappingURL=claim.js.map","import { Service } from '../../private';\r\n/**\r\n * DigitalPersona Web Claims (DPWebClaims) service client wrapper.\r\n */\r\nexport class ClaimsService extends Service {\r\n    /** Constructs a service wrapper.\r\n     * @param endpointUrl - a URL to the DPWebClaims service.\r\n     */\r\n    constructor(endpointUrl) {\r\n        super(endpointUrl);\r\n    }\r\n    /** @inheritdoc */\r\n    GetConfiguredClaims(ticket) {\r\n        return this.endpoint\r\n            .post(\"GetConfiguredClaims\", null, { ticket })\r\n            .then(result => result.GetConfiguredClaimsResult.ticket);\r\n    }\r\n    /** @inheritdoc */\r\n    GetClaims(ticket, request) {\r\n        return this.endpoint\r\n            .post(\"GetClaims\", null, { ticket, request })\r\n            .then(result => result.GetClaimsResult.ticket);\r\n    }\r\n}\r\n//# sourceMappingURL=service.js.map","import { Service } from '../../private';\r\n/**\r\n * DigitalPersona Web Enroll (DPWebEnroll) service client wrapper.\r\n */\r\nexport class EnrollService extends Service {\r\n    /** Constructs a service wrapper.\r\n     * @param endpointUrl - a URL to the DPWebClaims service.\r\n     */\r\n    constructor(endpointUrl) {\r\n        super(endpointUrl);\r\n    }\r\n    /** @inheritdoc */\r\n    GetUserCredentials(user) {\r\n        return this.endpoint\r\n            .get(\"GetUserCredentials\", { user: user.name, type: user.type })\r\n            .then(result => result.GetUserCredentialsResult);\r\n    }\r\n    /** @inheritdoc */\r\n    GetEnrollmentData(user, credentialId) {\r\n        return this.endpoint\r\n            .get(\"GetEnrollmentData\", { user: user.name, type: user.type, cred_id: credentialId })\r\n            .then(result => result.GetEnrollmentDataResult);\r\n    }\r\n    /** @inheritdoc */\r\n    CreateUser(secOfficer, user, password) {\r\n        return this.endpoint\r\n            .put(\"CreateUser\", null, { secOfficer, user, password });\r\n    }\r\n    /** @inheritdoc */\r\n    DeleteUser(secOfficer, user) {\r\n        return this.endpoint\r\n            .del(\"DeleteUser\", null, { secOfficer, user });\r\n    }\r\n    /** @inheritdoc */\r\n    EnrollUserCredentials(secOfficer, owner, credential) {\r\n        return this.endpoint\r\n            .put(\"EnrollUserCredentials\", null, { secOfficer, owner, credential });\r\n    }\r\n    /** @inheritdoc */\r\n    DeleteUserCredentials(secOfficer, owner, credential) {\r\n        return this.endpoint\r\n            .del(\"DeleteUserCredentials\", null, { secOfficer, owner, credential });\r\n    }\r\n    /** @inheritdoc */\r\n    EnrollAltusUserCredentials(secOfficer, user, credential) {\r\n        return this.endpoint\r\n            .put(\"EnrollAltusUserCredentials\", null, { secOfficer, user, credential });\r\n    }\r\n    /** @inheritdoc */\r\n    DeleteAltusUserCredentials(secOfficer, user, credential) {\r\n        return this.endpoint\r\n            .del(\"DeleteAltusUserCredentials\", null, { secOfficer, user, credential });\r\n    }\r\n    /** @inheritdoc */\r\n    GetUserAttribute(ticket, user, attributeName) {\r\n        return this.endpoint\r\n            .post(\"GetUserAttribute\", null, { ticket, user, attributeName })\r\n            .then(result => ({\r\n            name: attributeName,\r\n            data: result.GetUserAttributeResult,\r\n        }));\r\n    }\r\n    /** @inheritdoc */\r\n    PutUserAttribute(ticket, user, attribute, action) {\r\n        return this.endpoint\r\n            .put(\"PutUserAttribute\", null, {\r\n            ticket, user, action,\r\n            attributeName: attribute.name,\r\n            attributeData: attribute.data\r\n        });\r\n    }\r\n    /** @inheritdoc */\r\n    UnlockUser(user, credential) {\r\n        return this.endpoint\r\n            .post(\"UnlockUser\", null, { user, credential });\r\n    }\r\n    /** @inheritdoc */\r\n    CustomAction(ticket, user, credential, actionId) {\r\n        return this.endpoint\r\n            .post(\"CustomAction\", null, { ticket, user, credential, actionId })\r\n            .then(result => result.CustomActionResult);\r\n    }\r\n    /** @inheritdoc */\r\n    IsEnrollmentAllowed(secOfficer, user, credentialId) {\r\n        return this.endpoint\r\n            .post(\"IsEnrollmentAllowed\", null, { secOfficer, user, credentialId });\r\n    }\r\n}\r\n//# sourceMappingURL=service.js.map","import { Service } from '../../private';\r\n/**\r\n * DigitalPersona Web Policy (DPWebPolicy) service client wrapper.\r\n */\r\nexport class PolicyService extends Service {\r\n    /** Constructs a service wrapper.\r\n     * @param endpointUrl - a URL to the DPWebClaims service.\r\n     */\r\n    constructor(endpointUrl) {\r\n        super(endpointUrl);\r\n    }\r\n    /** @inheritdoc */\r\n    GetPolicyInfo(user, resourceUri, action, info) {\r\n        return this.endpoint\r\n            .post(\"GetPolicyInfo\", null, { user, resourceUri, action, info })\r\n            .then(result => result.GetPolicyInfoResult);\r\n    }\r\n}\r\n//# sourceMappingURL=service.js.map","import { Service } from '../../private';\r\n/**\r\n * DigitalPersona Web Secret (DPWebSecret) service client wrapper.\r\n */\r\nexport class SecretService extends Service {\r\n    /** Constructs a service wrapper.\r\n     * @param endpointUrl - a URL to the DPWebClaims service.\r\n     */\r\n    constructor(endpointUrl) {\r\n        super(endpointUrl);\r\n    }\r\n    /** @inheritdoc */\r\n    GetAuthPolicy(user, secretName, action) {\r\n        return this.endpoint\r\n            .get(\"GetAuthPolicy\", { user: user.name, type: user.type, secretName, action })\r\n            .then(result => result.GetAuthPolicyResult);\r\n    }\r\n    /** @inheritdoc */\r\n    DoesSecretExist(user, secretName) {\r\n        return this.endpoint\r\n            .get(\"DoesSecretExist\", { user: user.name, type: user.type, secretName })\r\n            .then(result => result.DoesSecretExistResult);\r\n    }\r\n    /** @inheritdoc */\r\n    ReadSecret(ticket, secretName) {\r\n        return this.endpoint\r\n            .post(\"ReadSecret\", null, { ticket, secretName })\r\n            .then(result => result.ReadSecretResult);\r\n    }\r\n    /** @inheritdoc */\r\n    WriteSecret(ticket, secretName, secretData) {\r\n        return this.endpoint\r\n            .put(\"WriteSecret\", null, { ticket, secretName, secretData });\r\n    }\r\n    /** @inheritdoc */\r\n    DeleteSecret(ticket, secretName) {\r\n        return this.endpoint\r\n            .del(\"DeleteSecret\", null, { ticket, secretName });\r\n    }\r\n}\r\n//# sourceMappingURL=service.js.map"],"names":["VarType","AttributeAction","ResourceActions","DatabaseType","AuthenticationStatus","TriggerName","LicenseType","SearchScope","ServerSettingType","ServerSettings","UACFlags","UserAccountType","ServiceError","Error","[object Object]","code","message","super","this","Object","setPrototypeOf","prototype","fault","error_code","description","ServiceEndpoint","endpointUrl","defaultRequest","cache","mode","headers","Content-Type","Accept","response","json","handleError","status","then","statusText","path","query","request","fetch","Url","create","assign","method","handleResponse","body","JSON","stringify","ok","catch","reason","Service","endpoint","ping","ticket","post","parse","ExecuteSearchResult","PSKCData","PSKCFileName","password","sharedKey","PSKCImportResult","user","settings","GetServerSettingsResult","type","put","get","GetLicenseInfoResult","encryptedPwd","GetUserRecoveryPasswordResult","credentials","del","GetUserInfoResult","control","name","GetUserCredentialsResult","credentialId","cred_id","GetEnrollmentDataResult","credential","Ticket","IdentifyUserResult","jwt","identity","AuthenticateUserTicketResult","AuthenticateUserResult","actionId","CustomActionResult","CreateTicketAuthenticationResult","CreateUserAuthenticationResult","authId","authData","ContinueAuthenticationResult","db","attr","result","GetConfiguredClaimsResult","GetClaimsResult","secOfficer","owner","attributeName","data","GetUserAttributeResult","attribute","action","attributeData","resourceUri","info","GetPolicyInfoResult","secretName","GetAuthPolicyResult","DoesSecretExistResult","ReadSecretResult","secretData","values","Blob","Boolean","Integer","String"],"mappings":"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"}